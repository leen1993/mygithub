<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	       default-autowire="byName" default-lazy-init="false">

	<!-- component-scan @Component , @Controller , @Service , @Repository -->

	<context:component-scan base-package="com.rekj.**.dao" />
	<context:component-scan base-package="com.rekj.**.service" />

	<!-- 参数校验 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		scope="prototype">
		<property name="basenames">
			<list>
				<value>classpath:resource/errors</value>
				<value>classpath:resource/form</value>
				<value>classpath:resource/message</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="cacheSeconds" value="0"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

	<!--加载配置文件 -->
	<bean id="configproperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
		   <list>
              <value>classpath:conf/app.properties</value>
		   </list>
		</property>
	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="configproperties" />
	</bean>

	<!-- Redis 配置 -->
	<!-- <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"> 
		<property name="maxInactiveIntervalInSeconds" value="600"/> </bean> -->

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="minIdle" value="${redis.minIdle}" />
		<!--<property name="maxActive" value="${redis.maxActive}" /> -->
	</bean>

	<!-- redis单节点数据库连接配置 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!-- <property name="password" value="${redis.password}" /> -->
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>
	
	<!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
	</bean>

	<!-- key序列化 -->
	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />

	<!--jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--专门用来产生ID -->
	<bean id="jdbcTemplateSN" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="com.rekj.core.mybatis.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:/conf/configuration.xml" />
		<property name="mapperLocations">
			<list>
			<!-- 	<value>classpath*:/com/jspgou/cn/**/mapper/**/*.xml</value>
				<value>classpath*:/com/bfoa/cn/**/mapper/**/*.xml</value>
				<value>classpath:/com/dang/**/mapper/**/*.xml</value>
				<value>classpath:/com/db_shop/**/mapper/**/*.xml</value>
				<value>classpath:/com/practice/**/mapper/**/*.xml</value> -->
				<value>classpath:/com/**/mapper/**/*.xml</value>
			</list>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSourceHis" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${db.his.url}" />
		<property name="username" value="${db.his.username}" />
		<property name="password" value="${db.his.password}" />
		<property name="driverClassName" value="${db.his.driverClassName}" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="${db.his.maximumConnectionCount}" />
		<property name="maxWait" value="10000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="defaultAutoCommit" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
		<property name="filters" value="stat" />
	</bean>


	<!-- <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
		<property name="statementExecutableSqlLogEnable" value="false" /> </bean> -->

	<!-- <bean id="dataSourceHis" class="org.logicalcobwebs.proxool.ProxoolDataSource"> 
		<property name="driver" value="${db.his.driverClassName}" /> <property name="driverUrl" 
		value="${db.his.url}" /> <property name="user" value="${db.his.username}" 
		/> <property name="password" value="${db.his.password}" /> <property name="alias" 
		value="${db.his.alias}" /> <property name="simultaneousBuildThrottle" value="${db.his.simultaneousBuildThrottle}" 
		/> <property name="maximumActiveTime" value="${db.his.maximumActiveTime}" 
		/> <property name="houseKeepingTestSql" value="${db.his.houseKeepingTestSql}" 
		/> <property name="maximumConnectionCount" value="${db.his.maximumConnectionCount}" 
		/> <property name="minimumConnectionCount" value="${db.his.minimumConnectionCount}" 
		/> <property name="delegateProperties" value="characterEncoding=${db.his.characterEncoding}" 
		/> </bean> -->

	<!-- 多数据源 -->
	<bean id="dataSource" class="com.rekj.core.db.DynamicDataSource">
		<property name="targetDataSources">
			<map>
				<entry value-ref="dataSourceHis" key="his"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceHis" />
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务控制 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" isolation="DEFAULT" />
		</tx:attributes>
	</tx:advice>

</beans>