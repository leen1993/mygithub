package com.rekj.core.web.tag;

import java.util.Map;

import javax.servlet.jsp.JspTagException;
import javax.servlet.jsp.tagext.BodyTagSupport;

@SuppressWarnings("serial")
public class AnchorTag extends BodyTagSupport {
	private String css = "mini-button";
//	private String alias;
	private String name;
	private String id;
	private String href;
	private String action;
	private String onclick;
	private String target;
	private String iconCls;

	public void setIconCls(String iconCls) {
		this.iconCls = iconCls;
	}

	private boolean showNoRight = true;
	private static ThreadLocal<Map<String, Boolean>> threadLocalVar = new ThreadLocal();

	public static void cleanFuncRights() {
		threadLocalVar.remove();
	}

	public void setTarget(String target) {
		this.target = target;
	}

	public void setShowNoRight(boolean _isShowNoRight) {
		this.showNoRight = _isShowNoRight;
	}

	public void setCss(String css) {
		this.css = css;
	}

	// public void setAlias(String alias) {
	// this.alias = alias;
	// }

	public void setName(String name) {
		this.name = name;
	}

	public void setId(String id) {
		this.id = id;
	}

	public void setHref(String href) {
		this.href = href;
	}

	public void setAction(String action) {
		this.action = action;
	}

	public void setOnclick(String onclick) {
		this.onclick = onclick;
	}

	public int doStartTag() throws JspTagException {
		return 2;
	}

	// protected boolean getHasRights(String systemAlias) {
	// if (StringUtil.isEmpty(systemAlias))
	// return false;
	// String key = systemAlias + "_" + this.alias;
	// boolean rtn = false;
	// if (threadLocalVar.get() == null) {
	// Boolean canAccess = SecurityUtil.hasFuncPermission(systemAlias,
	// this.alias);
	// Map map = new HashMap();
	// map.put(key, canAccess);
	// threadLocalVar.set(map);
	// rtn = canAccess;
	// } else {
	// Map map = (Map) threadLocalVar.get();
	// if (map.containsKey(key)) {
	// rtn = (Boolean) map.get(key);
	// } else {
	// Boolean canAccess = SecurityUtil.hasFuncPermission(systemAlias,
	// this.alias);
	// map.put(key, canAccess);
	// rtn = canAccess;
	// }
	// }
	// return rtn;
	// }

	private String getOutput() throws Exception {
		boolean canAccess = true;
		if ((!this.showNoRight) && (!canAccess)) {
			return "";
		}

		String body = getBodyContent().getString();
		StringBuffer content = new StringBuffer("<a ");
		if (this.id != null) {
			content.append("id=\"" + this.id + "\" ");
		}
		if (this.name != null) {
			content.append("name=\"" + this.name + "\" ");
		}
		if (this.iconCls != null) {
			content.append("iconCls=\"" + this.iconCls + "\" ");
		}
		if (this.target != null) {
			content.append("target=\"" + this.target + "\" ");
		}

		if (canAccess) {
			if (this.css != null) {
				content.append(" class=\"" + this.css + "\" ");
			}
			if (this.href != null) {
				content.append(" href=\"" + this.href + "\" ");
			}
			if (this.action != null) {
				content.append(" action=\"" + this.action + "\" ");
			}

		} else if (this.css != null) {
			content.append(" class=\"" + this.css + " disabled\" ");
		} else {
			content.append(" class=\"disabled\" ");
		}

		if (this.onclick != null) {
			content.append("onclick=\"" + this.onclick + "\" ");
		}
		content.append(">");
		content.append(body);
		content.append("</a>");

		return content.toString();
	}

	public int doEndTag() throws JspTagException {
		try {
			String str = getOutput();
			this.pageContext.getOut().print(str);
		} catch (Exception e) {
			e.printStackTrace();
			throw new JspTagException(e.getMessage());
		}
		return 0;
	}
}
