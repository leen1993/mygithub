/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.2
 * Generated at: 2018-05-14 06:53:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.medical.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class triageRoomList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1525761782870L));
    _jspx_dependants.put("/commons/include/html_doctype.html", Long.valueOf(1525761798654L));
    _jspx_dependants.put("/commons/include/form.jsp", Long.valueOf(1525761798651L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>诊室诊台维护</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<!-- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\" /> -->\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/default/css/web.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/boot.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/commons/dynamic.jsp\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/misc/jquery.form.js\"></script>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/core.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\th3 {\r\n");
      out.write("\t\tmargin : 0;\r\n");
      out.write("\t\tpadding:5px;\r\n");
      out.write("\t\tborder-bottom: 1px solid #ccc;\r\n");
      out.write("\t\tfont-weight: normal;\r\n");
      out.write("\t\tfont-style : italic;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.mini-toolbar {\r\n");
      out.write("\t    border: solid 1px #ccc;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.mini-splitter {\r\n");
      out.write("\t\tmargin: 3px 0 0 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.mini-splitter-pane1 {\r\n");
      out.write("\t\tborder:0; \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\tvar currentNurseStation = null;\r\n");
      out.write("\t\r\n");
      out.write("\t// 点击树节点\r\n");
      out.write("\tfunction onnodeclick(e) {\r\n");
      out.write("\t/* \tgrid.load({\r\n");
      out.write("\t\t\troomId : e.row.id\r\n");
      out.write("\t\t}); */\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t        type: \"post\",  \r\n");
      out.write("\t        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageConsole/getAll.do\",\r\n");
      out.write("\t        data: {roomId: e.row.id},\r\n");
      out.write("\t        async: false,  \r\n");
      out.write("\t        success: function(r) {  \r\n");
      out.write("\t        \tfor(var i = 0; i < r.length; i++) {\r\n");
      out.write("\t        \t\tconsole.log(r[i]);\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t\t\t\tgrid.setData(r);\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar parentNode = tree.getParentNode(e.row);\r\n");
      out.write("\t\tif (parentNode._id  != -1) {\r\n");
      out.write("\t\t\t$(\".orgInfo\").text(parentNode.text +\"-\"+e.row.text);\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\".orgInfo\").text(e.row.text);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 过滤科室(不请求后台)\r\n");
      out.write("\tfunction filterOrg(e) {\r\n");
      out.write("\t\tvar key = mini.get(\"org-search\").getValue();\r\n");
      out.write("\t    if (key == \"请输入科室名称\"||key == \"\") {\r\n");
      out.write("\t        tree.clearFilter();\r\n");
      out.write("\t    } else {\r\n");
      out.write("\t        key = key.toUpperCase();                \r\n");
      out.write("\t        tree.filter(function (node) {\r\n");
      out.write("\t            var text = node.text + node.id + node.spellCode;\r\n");
      out.write("\t            if (text.indexOf(key) != -1) {\r\n");
      out.write("\t                return true;\r\n");
      out.write("\t            }\r\n");
      out.write("\t        });\r\n");
      out.write("\t    }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 增加诊台\r\n");
      out.write("\tfunction addConsole() {\r\n");
      out.write("\t\tvar node = tree.getSelectedNode();\r\n");
      out.write("\t\tif(!node){\r\n");
      out.write("\t\t\ttop.mini.alert(\"请先选择相应 的诊室！\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar newRow = {roomId : node.id,validFlag : 1}\r\n");
      out.write("\t\tgrid.addRow(newRow);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t // 保存诊台\r\n");
      out.write("\tfunction saveConsole () {\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageConsole/save.do\";\r\n");
      out.write("\t\tvar data = mini.encode(rows);\r\n");
      out.write("\t\t$.post(url, {data : data}, function(r) {\r\n");
      out.write("\t\t\tif(parseInt(r.state) == 1) {\r\n");
      out.write("\t\t\t\ttop.mini.showTips({content: r.message, state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t\trefreshConsole();\r\n");
      out.write("\t\t\t} else if(parseInt(r.state) == -1) {\r\n");
      out.write("\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t\trefreshConsole();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t \r\n");
      out.write("\t // 刷新诊台\r\n");
      out.write("\tfunction refreshConsole() {\r\n");
      out.write("\t\tvar node = tree.getSelectedNode();\r\n");
      out.write("\t\tgrid.load({\r\n");
      out.write("\t\t\troomId : node.id\r\n");
      out.write("\t\t});\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t// 删除诊台\r\n");
      out.write("\tfunction removeConsole() {\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageConsole/save.do\";\r\n");
      out.write("\t\tfor (var i = 0; i < rows.length; i++) {\r\n");
      out.write("\t\t\trows[i]._state = 'removed';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar data = mini.encode(rows);\r\n");
      out.write("\t\ttop.mini.confirm(\"确实删除?\", \"提示\", function(action) {\r\n");
      out.write("\t\t\tif(action == \"ok\") {\r\n");
      out.write("\t\t\t\t$.post(url, {data : data}, function(r) {\r\n");
      out.write("\t\t\t\t\tif(parseInt(r.state) == 1) {\r\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({\tcontent: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t\t\t\trefreshConsole();\r\n");
      out.write("\t\t\t\t\t} else if(parseInt(r.state) == -1){\r\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 显示添加诊室详情窗口\r\n");
      out.write("\tfunction addRoom() {\r\n");
      out.write("\t\tvar node = tree.getSelectedNode();\r\n");
      out.write("\t\tif(node.nursestationId) {\r\n");
      out.write("\t\t\ttop.mini.showTips({\r\n");
      out.write("\t\t\t\tcontent: \"请选择科室\",    \r\n");
      out.write("\t\t\t    state: \"warning\",      \r\n");
      out.write("\t\t\t    x: \"center\",          \r\n");
      out.write("\t\t\t    y: \"center\",          \r\n");
      out.write("\t\t\t    timeout: 2000   \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\treturn ; \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!node) {\r\n");
      out.write("\t\t\ttop.mini.alert(\"请先选择科室！\");\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar data = {\r\n");
      out.write("\t\t\t\t_state : \"added\",\t\r\n");
      out.write("\t\t\t\tnursestationId : node.id,\r\n");
      out.write("\t\t\t\tvalidFlag : 1,\r\n");
      out.write("\t\t\t\tsortNo : 1,\r\n");
      out.write("\t\t\t\toperTime : new Date()\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tform.setData(data);\r\n");
      out.write("\t\twin.show();\r\n");
      out.write("\t\twin.setTitle(\"添加诊室\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 修改诊室\r\n");
      out.write("\tfunction editRoom() {\r\n");
      out.write("\t\tvar node = tree.getSelectedNode();\r\n");
      out.write("\t\tif(!node.nursestationId) {\r\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请选择诊室节点！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\treturn; \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tnode.roomId = node.id;\r\n");
      out.write("\t\tnode.roomName = node.text;\r\n");
      out.write("\t\tnode._state = \"modified\";\r\n");
      out.write("\t\tform.setData(node);\r\n");
      out.write("\t\twin.setTitle(\"修改诊室\");\r\n");
      out.write("\t\twin.show();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 重新加载诊室树\r\n");
      out.write("\tfunction reloadTree() {\r\n");
      out.write("\t\ttree.reload(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageRoom/getTree.do\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 保存诊室\r\n");
      out.write("\tfunction saveRoom() {\r\n");
      out.write("\t\tform.validate();\r\n");
      out.write("\t\tif(!form.isValid()) {\r\n");
      out.write("\t\t\ttop.mini.showTips({content: \"诊室名不能为空！\", state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar url =\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageRoom/save.do\";\r\n");
      out.write("\t\tvar formData = form.getData();\t\r\n");
      out.write("\t\tvar data = {data: mini.encode(formData)};\r\n");
      out.write("\t\t$.post(url, data, function(r){\r\n");
      out.write("\t\t\tif(parseInt(r.state) == 1) {\r\n");
      out.write("\t\t\t\ttop.mini.showTips({content: r.message, state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t\tif(mini.get(\"#continuity\").getValue() == 0) {\r\n");
      out.write("\t\t\t\t\twin.hide();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tmini.get(\"roomName\").setValue(\"\");\r\n");
      out.write("\t\t\t\t\tmini.get(\"roomName\").focus();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\treloadTree();\r\n");
      out.write("\t\t\t} else if(parseInt(r.state) == -1){\r\n");
      out.write("\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 退出窗口\r\n");
      out.write("\tfunction exitWin() {\r\n");
      out.write("\t\twin.hide();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 退出当前页面\r\n");
      out.write("\tfunction exit() {\r\n");
      out.write("\t\tvar currentTab = top.tabs.activeIndex;\r\n");
      out.write("\t\tvar tabs = top.tabs;\r\n");
      out.write("\t\ttabs.removeTab(currentTab);\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t// 刷新\r\n");
      out.write("\tfunction fresh() {\r\n");
      out.write("\t\tvar node = tree.getSelected();\r\n");
      out.write("\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageRoom/getTree.do\");\r\n");
      out.write("\t\tgrid.load({\r\n");
      out.write("\t\t\troomId : node.id\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 绘制单元格\r\n");
      out.write("\tfunction ondrawcell(e) {\r\n");
      out.write("\t\t/* if (e.column.field == \"operId\") {\r\n");
      out.write("\t\t\te.cellHtml = e.cellHtml.split(\"\\.\")[1];\r\n");
      out.write("\t\t} */\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 提交前事件\r\n");
      out.write("\tfunction cellcommitedit(e) {\r\n");
      out.write("\t\tif(e.field == \"validFlag\") {\r\n");
      out.write("\t\t\tif(parseInt(e.value) == 1) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(e.row, {cancelTime: null});\r\n");
      out.write("\t\t\t} else if(parseInt(e.value) == 0) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(e.row, {cancelTime: new Date()});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 显示\r\n");
      out.write("\tfunction show() {\r\n");
      out.write("\t\t$(\".toolbar\").show();\r\n");
      out.write("\t\t$(\".hideBegin\").show();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"mini-toolbar toolbar\" style=\"display:none;\" borderStyle=\"border-top:0;border-right:0;border-left:0;border-bottom:0;\">\r\n");
      out.write("\t    <table style=\"width:100%;\">\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t         \t<td>\r\n");
      out.write("\t         \t\t<a class=\"mini-button\" iconCls=\"fa fa-plus-square\" onclick=\"addRoom\">添加诊室</a>\r\n");
      out.write("\t         \t\t<a class=\"mini-button\" iconCls=\"fa fa-edit\" onclick=\"editRoom\">修改诊室</a>\r\n");
      out.write("\t         \t\t<a class=\"mini-button\" iconCls=\"fa fa-plus-square\" onclick=\"addConsole\">增加诊台</a>\r\n");
      out.write("\t         \t\t<a class=\"mini-button\" iconCls=\"fa fa-remove\" onclick=\"removeConsole\">删除诊台</a>\r\n");
      out.write("\t         \t\t<a class=\"mini-button\" iconCls=\"fa fa-save\" onclick=\"saveConsole\">保存诊台</a>\r\n");
      out.write("\t         \t\t<a class=\"mini-button\" iconCls=\"fa fa-window-close\" onclick=\"exit\">退出</a>\r\n");
      out.write("\t         \t\t<a class=\"mini-button\" iconCls=\"fa fa-refresh\" onclick=\"fresh\">刷新</a>\r\n");
      out.write("\t         \t</td>\r\n");
      out.write("\t         \t<td>\r\n");
      out.write("              \t</td>\r\n");
      out.write("\t \t\t</tr>\r\n");
      out.write("\t    </table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"mini-fit\">\r\n");
      out.write("\t\t<div class=\"mini-splitter\" style=\"width:100%;height:99%;\" allowResize=\"false\" handlerSize=\"6\" borderStyle=\"border-top:0;\">\r\n");
      out.write("\t\t    <div size=\"230px;\" showCollapseButton=\"false\">\r\n");
      out.write("\t\t\t\t<div id=\"filterDept\" style=\"height:25px;\">\r\n");
      out.write(" \t\t    \t\t<input id=\"org-search\" class=\"mini-textbox\" borderStyle=\"border-left:0px;border-right:0px;border-top:0px;\" \r\n");
      out.write(" \t\t    \t\temptyText=\"请输入科室名称\" style=\"width:100%\" onenter=\"filterOrg\" />\r\n");
      out.write("\t\t\t    </div>\r\n");
      out.write("\t\t\t    <div class=\"mini-fit\">\r\n");
      out.write("\t\t\t    \t<ul id=\"tree1\" resultAsTree=\"false\" class=\"mini-tree\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageRoom/getTree.do\" expandOnLoad=\"true\"\r\n");
      out.write("\t\t\t\t\t\tshowCheckBox=\"false\" onnodeclick=\"onnodeclick\" style=\"width:100%;height:100%;margin:0;padding:2px;\" >\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t    </div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t    <div showCollapseButton=\"false\">\r\n");
      out.write("\t\t    \t<h3 class=\"orgInfo hideBegin\" style=\"display:none;\">科室信息</h3>\r\n");
      out.write("\t\t\t    <div class=\"mini-fit\">\r\n");
      out.write("\t\t\t         <div id=\"grid1\" class=\"mini-datagrid\" showPager=\"false\" borderStyle=\"border:0;\"  allowCellSelect=\"true\" oncellcommitedit=\"cellcommitedit\"\r\n");
      out.write("\t\t\t\t\t\t url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/triageConsole/getAll.do\" style=\"width:100%; height:100%;\" ondrawcell=\"ondrawcell\" allowCellEdit=\"true\">\r\n");
      out.write("\t\t\t\t\t\t <div property=\"columns\">\r\n");
      out.write("\t\t\t\t\t\t \t<div type=\"indexColumn\">序号</div>\r\n");
      out.write("\t\t\t\t\t\t \t<div field=\"consoleName\" type=\"textboxColumn\" width=\"170\" headerAlign=\"center\" align=\"center\">诊台名称\r\n");
      out.write("\t\t\t\t\t\t \t\t<input property=\"editor\" class=\"mini-textbox\">\r\n");
      out.write("\t\t\t\t\t\t \t</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"customCode\" type=\"textboxColumn\" width=\"150\" headerAlign=\"center\" align=\"center\" >自定义码\r\n");
      out.write("\t\t\t\t\t\t \t\t<input property=\"editor\" class=\"mini-textbox\">\r\n");
      out.write("\t\t\t\t\t\t \t</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"validFlag\" type=\"checkboxColumn\" trueValue=\"1\" falseValue=\"0\" headerAlign=\"center\" align=\"center\" >有效</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"cancelOperId\" width=\"150\" headerAlign=\"center\" align=\"center\" >作废人\r\n");
      out.write("\t\t\t\t\t        \t<input property=\"editor\" class=\"mini-combobox\"  readOnly=\"true\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysUser/getKVs.do\">\r\n");
      out.write("\t\t\t\t\t        </div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"cancelTime\" width=\"150\" headerAlign=\"center\" align=\"center\" DateFormat=\"yyyy-MM-dd HH:mm:ss\">作废时间</div>\r\n");
      out.write("\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t    \t<div field=\"operId\" type=\"comboboxColumn\" width=\"150\" headerAlign=\"center\"  readOnly=\"true\" align=\"center\">操作人\r\n");
      out.write("\t\t\t\t\t        \t<input property=\"editor\" class=\"mini-combobox\" readOnly=\"true\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysUser/getKVs.do\">\r\n");
      out.write("\t\t\t\t\t        </div> \r\n");
      out.write("\t\t\t\t\t        <div field=\"operTime\" width=\"150\" headerAlign=\"center\" DateFormat=\"yyyy-MM-dd HH:mm:ss\" align=\"center\">操作时间</div>\r\n");
      out.write("\t       \t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t    </div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"win1\" class=\"mini-window\" style=\"width:280px;height:260px;text-align:center; display:none;\">\r\n");
      out.write("\t\t<div id=\"form1\">\r\n");
      out.write("\t\t\t<input class=\"mini-textbox\" name=\"roomId\" visible=\"false\"/>\r\n");
      out.write("\t\t\t<input class=\"mini-textbox\" name=\"_state\" value=\"added\" visible=\"false\"/>\r\n");
      out.write("\t\t\t<table width=\"100%\" height=\"100%\">\r\n");
      out.write("\t\t\t\t<tr><td colspan=\"2\"></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td class=\"blue\">所属护士站</td>\r\n");
      out.write("\t\t\t\t\t<td><input class=\"mini-combobox\" name=\"nursestationId\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\" readOnly=\"true\" width=\"170\"/></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr><td class=\"blue\">诊室名称</td><td><input class=\"mini-textbox\" name=\"roomName\" id=\"roomName\" width=\"170\" required=\"true\"/></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td class=\"\">自定义码</td><td><input class=\"mini-textbox\" name=\"customCode\" width=\"170\"/></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td class=\"\">显示顺序</td><td><input class=\"mini-textbox\" name=\"sortNo\" width=\"170\"/></td></tr>\r\n");
      out.write("\t\t\t\t<tr><td class=\"\">是否有效</td><td><input class=\"mini-combobox\" name=\"validFlag\" data=\"[{id:1,text:'有效'},{id:0,text:'无效'}]\" width=\"170\"/></td></tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"mini-checkbox\" id=\"continuity\" trueValue=\"1\" falseValue=\"0\" text=\"连续增加\"></div>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\"  iconCls=\"fa fa-save\" onclick=\"saveRoom\">保存</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-window-close\" onclick=\"exitWin\">退出</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tmini.parse();\r\n");
      out.write("\t\tvar tree = mini.get(\"tree1\");\r\n");
      out.write("\t\tvar grid = mini.get(\"grid1\");\r\n");
      out.write("\t\tvar win = mini.get(\"win1\");\r\n");
      out.write("\t\tvar form = new mini.Form(\"#form1\");\r\n");
      out.write("\t\ttree.setSelected(tree.getList()[0]);\r\n");
      out.write("\t\tshow();\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /commons/include/form.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /commons/include/form.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/form.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /commons/include/form.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("ctx_rpt");
      // /commons/include/form.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/form.jsp(6,0) '${reportContextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${reportContextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
