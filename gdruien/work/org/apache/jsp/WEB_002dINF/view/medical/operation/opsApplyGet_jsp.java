/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.2
 * Generated at: 2018-05-14 02:16:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.medical.operation;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class opsApplyGet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1525761782870L));
    _jspx_dependants.put("/commons/include/html_doctype.html", Long.valueOf(1525761798654L));
    _jspx_dependants.put("/commons/include/get.jsp", Long.valueOf(1525827802831L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>住院医生-手术申请</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/boot.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/commons/dynamic.jsp\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/core.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/template/jquery.tmpl.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/default/css/web.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/report/CreateControl.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".mini-outlookbar-border,.mini-splitter-pane2,.mini-panel-border{\r\n");
      out.write("\tborder: 0;\r\n");
      out.write("}\r\n");
      out.write(".mini-toolbar{\r\n");
      out.write("\tborder-bottom:1px solid #c5c5c5;\r\n");
      out.write("}\r\n");
      out.write(".a .mini-checkboxlist-item{\r\n");
      out.write("\tmargin-left: 15px; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t//按名称快速过滤组套\r\n");
      out.write("\tfunction filterGroupClassify(elFilter, elTree) {\r\n");
      out.write("\t\tvar filter = mini.get(elFilter);\r\n");
      out.write("\t\tvar tree = mini.get(elTree);\r\n");
      out.write("\t\tvar key = filter.getValue();\r\n");
      out.write("\t\tif (key == \"请输入组套分类名称\" || key == \"\") {\r\n");
      out.write("\t\t\ttree.clearFilter();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tkey = key.toLowerCase();\r\n");
      out.write("\t\t\ttree.filter(function(node) {\r\n");
      out.write("\t\t\t\tvar text = node.text ? node.text.toLowerCase() : \"\";\r\n");
      out.write("\t\t\t\tif (text.indexOf(key) != -1) {\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 增加\r\n");
      out.write("\tfunction onAdd () {\r\n");
      out.write("\t\tvar node = tree.getSelectedNode();\r\n");
      out.write("\t\tif (!node || node.id==\"root\") {\r\n");
      out.write("\t\t\ttop.mini.alert(\"请选择患者!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/operation/opsApply/edit.do?registerId=\"+node.id+\"&state=Add\";\r\n");
      out.write("\t\tmini.open({\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\ttitle : \"新增【手术申请信息】\",\r\n");
      out.write("\t\t\twidth : \"1050\",\r\n");
      out.write("\t\t\theight : \"650\",\r\n");
      out.write("\t\t\tondestroy:function (r) {\r\n");
      out.write("\t\t\t\tif (r==\"ok\") {\r\n");
      out.write("\t\t\t\t\tgrid.reload();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 修改\r\n");
      out.write("\tfunction onUpdate () {\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tvar node = tree.getSelectedNode();\r\n");
      out.write("\t\tif (rows.length!=1) {\r\n");
      out.write("\t\t\ttop.mini.alert(\"请选择要修改的一行\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/operation/opsApply/edit.do?registerId=\"+node.id+\"&applyId=\"+rows[0].applyId+\"&state=Modified\";\r\n");
      out.write("\t\tmini.open({\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\ttitle : \"修改【手术申请信息】\",\r\n");
      out.write("\t\t\twidth : \"1050\",\r\n");
      out.write("\t\t\theight : \"650\",\r\n");
      out.write("\t\t\tondestroy:function (r) {\r\n");
      out.write("\t\t\t\tif (r==\"ok\") {\r\n");
      out.write("\t\t\t\t\tgrid.reload();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//宣染有效性\r\n");
      out.write("\tfunction onValidFlag(e){\r\n");
      out.write("\t \tvar validFlag = e.record.validFlag;\r\n");
      out.write("\t \tif (validFlag==\"1\") {\r\n");
      out.write("\t \t\treturn \"有效\";\r\n");
      out.write("\t \t}\r\n");
      out.write("\t \tif (validFlag==\"0\") {\r\n");
      out.write("\t \t\treturn \"已作废\";\r\n");
      out.write("\t \t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 宣染申请状态\r\n");
      out.write("\tfunction onOpsState(e){\r\n");
      out.write("\t \tvar state = e.record.opsState;\r\n");
      out.write("\t \tif (state==\"APL\") {\r\n");
      out.write("\t \t\treturn \"申请\";\r\n");
      out.write("\t \t}\r\n");
      out.write("\t \tif (state==\"APR\") {\r\n");
      out.write("\t \t\treturn \"审批\";\r\n");
      out.write("\t \t}\r\n");
      out.write("\t \tif (state==\"PL\") {\r\n");
      out.write("\t \t\treturn \"安排\";\r\n");
      out.write("\t \t}\r\n");
      out.write("\t \tif (state==\"CP\") {\r\n");
      out.write("\t \t\treturn \"完成\";\r\n");
      out.write("\t \t}\r\n");
      out.write("\t \tif (state==\"UD\") {\r\n");
      out.write("\t \t\treturn \"取消\";\r\n");
      out.write("\t \t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 宣染性别\r\n");
      out.write("\tfunction onSex(e){\r\n");
      out.write("\t\tvar sex = e.record.sexCode;\r\n");
      out.write("\t\tif (sex==\"1\") {\r\n");
      out.write("\t\t\treturn \"男\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (sex==\"2\") {\r\n");
      out.write("\t\t\treturn \"女\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 作废按钮\r\n");
      out.write("\tfunction cancelApply () {\r\n");
      out.write("\t\tvar apply = grid.getSelected();\r\n");
      out.write("\t\tif (!apply) {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"请选择有效的手术申请信息进行作废\",    \r\n");
      out.write("\t\t        state: \"warning\",      \r\n");
      out.write("\t\t        x: \"center\",         \r\n");
      out.write("\t\t        y: \"center\",        \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (apply.opsState != \"APL\" || apply.validFlag != \"1\") {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"所选择的的手术不是申请状态，无法作废\",    \r\n");
      out.write("\t\t        state: \"warning\",      \r\n");
      out.write("\t\t        x: \"center\",         \r\n");
      out.write("\t\t        y: \"center\",        \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t    message: \"是否确定作废所选中的手术申请？\",\r\n");
      out.write("\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t    \t\tvar json = mini.encode(apply);\r\n");
      out.write("\t\t\t\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/operation/opsApply/cancelApply.do\",\r\n");
      out.write("\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\tregisterId: apply.registerId,\r\n");
      out.write("\t\t\t\t\t\t\t\tjson: json\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttop.mini.alert(\"作废手术成功\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonnodeclick();\r\n");
      out.write("\t\t\t\t\t\t\t\t} else if (r.num == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttop.mini.alert(r.message);\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t);\r\n");
      out.write("\t\t\t    \t}\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 打印\r\n");
      out.write("\tfunction print () {\r\n");
      out.write("\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\tif (!row) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/operation/opsApply/getPrintData.do\",\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tregisterId: row.registerId,\r\n");
      out.write("\t\t\t\tapplyId: row.applyId\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\tReport.LoadFromURL(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/report/template/opsApplyPrint.grf?t=\"+new Date().getTime());\r\n");
      out.write("\t\t\t\tReport.PrepareLoadData();\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"consoleType\").AsString = ifNull(r.consoleType);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"consoleId\").AsString = ifNull(r.consoleId);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"opsKind\").AsString = ifNull(r.opsKind);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"execDeptId\").AsString = ifNull(r.execDeptId);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"applyTime\").AsString = ifNull(r.applyTime);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"inpatientNo\").AsString = ifNull(r.inpatientNo);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"patientName\").AsString = ifNull(r.patientName);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"sex\").AsString = ifNull(r.sex);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"age\").AsString = ifNull(r.age);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"org\").AsString = ifNull(r.org);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"bedNo\").AsString = ifNull(r.bedNo);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"diag\").AsString = ifNull(r.diag);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"item\").AsString = ifNull(r.item);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"anesWay\").AsString = ifNull(r.anesWay);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"tPosition\").AsString = ifNull(r.tPosition);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"bPosition\").AsString = ifNull(r.bPosition);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"OpsDoct\").AsString = ifNull(r.OpsDoct);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"Helper1\").AsString = ifNull(r.Helper1);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"Helper2\").AsString = ifNull(r.Helper2);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"Helper3\").AsString = ifNull(r.Helper3);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"injectionType\").AsString = ifNull(r.injectionType);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"degree\").AsString = ifNull(r.degree);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"inciType\").AsString = ifNull(r.inciType);\r\n");
      out.write("\t\t\t\tReport.ParameterByName(\"printTime\").AsString = ifNull(r.printTime);\r\n");
      out.write("\t\t\t\tReport.PrintPreview(true);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction ifNull (val) {\r\n");
      out.write("\t\tif (!val) {\r\n");
      out.write("\t\t\treturn \"\";\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\treturn val;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 树节点点击事件\r\n");
      out.write("\tfunction onnodeclick(e) {\r\n");
      out.write("\t\tvar node = tree.getSelectedNode();\r\n");
      out.write("\t\tif (!node) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tgrid.load({\r\n");
      out.write("\t\t\tregisterId : node.id,\r\n");
      out.write("\t\t\tqueryStateList: cbl.value\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 根据科室加载树\r\n");
      out.write("\tfunction queryPatientList () {\r\n");
      out.write("\t\tgrid.clearRows();\r\n");
      out.write("\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/operation/opsApply/queryPatientList.do\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 显示类型\r\n");
      out.write("\tvar opsStateData = [{id : \"APL\", text : \"申请\"},{id : \"APR\", text : \"审批\"},{id : \"PL\", text : \"安排\"},{id : \"CP\", text : \"完成\"},{id : \"UD\", text : \"取消\"}];\r\n");
      out.write("\t\r\n");
      out.write("\t// 监听科室\r\n");
      out.write("\ttop.on(\"EVENT_ORG_CHANGED\", queryPatientList);\r\n");
      out.write("\t$(window).unload(function(){\r\n");
      out.write("\t  top.un(\"EVENT_ORG_CHANGED\", queryPatientList);\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction selectAll(){\r\n");
      out.write("\t\tvar cbl = mini.get(\"cbl\");\r\n");
      out.write("\t\tcbl.selectAll();\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction deSelectAll(){\r\n");
      out.write("\t\tvar cbl = mini.get(\"cbl\");\r\n");
      out.write("\t\tcbl.deselectAll();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"mini-splitter\" style=\"width:100%;height:100%;\" handlerSize=\"0\">\r\n");
      out.write("    <div size=\"15%\" showCollapseButton=\"true\" style=\"padding:5px;\">\r\n");
      out.write("    \t<input id=\"filterTree\" class=\"mini-textbox\" style=\"width: 100%;\" \r\n");
      out.write("\t\t\tborderStyle=\"border-left:0px;border-right:0px;border-top:0px;\"\r\n");
      out.write("\t\t\temptyText=\"请输入手术患者名称\" \r\n");
      out.write("\t\t\tonenter=\"filterGroupClassify('filterTree',tree1)\" />\r\n");
      out.write("        <div class=\"mini-fit\">\r\n");
      out.write("\t\t\t<ul id=\"tree1\" class=\"mini-tree\" expandOnLoad=\"true\" showArrow=\"true\"\r\n");
      out.write("\t\t\t\tshowTreeIcon=\"true\" onnodeclick=\"onnodeclick\" resultAsTree=\"false\"\r\n");
      out.write("\t\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/operation/opsApply/queryPatientList.do\"\r\n");
      out.write("\t\t\t\tstyle=\"width: 100%; height: 100%; margin: 0; padding: 2px;\">\r\n");
      out.write("\t\t\t</ul>\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div showCollapseButton=\"true\">\r\n");
      out.write("        <div class=\"mini-toolbar\" style=\"border-left:0;\">\r\n");
      out.write("\t\t    <a class=\"mini-button\" iconCls=\"fa fa-refresh\" onclick=\"onnodeclick\">刷新</a>\r\n");
      out.write("\t\t    <a class=\"mini-button\" iconCls=\"icon-add\" onclick=\"onAdd()\">增加</a>\r\n");
      out.write("\t\t    <a class=\"mini-button\" iconCls=\"fa fa-edit\" onclick=\"onUpdate()\">修改</a>\r\n");
      out.write("\t\t    <a class=\"mini-button\" iconCls=\"icon-remove\" onclick=\"cancelApply()\">作废</a>\r\n");
      out.write("\t\t    <a class=\"mini-button\" iconCls=\"fa fa-print\" onclick=\"print\">打印</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"mini-toolbar\" style=\"border-left:0;\"> \r\n");
      out.write("\t\t\t<a class=\"mini-button\" iconCls=\"\" onclick=\"selectAll\">全选</a>\r\n");
      out.write("\t\t    <a class=\"mini-button\" iconCls=\"\" onclick=\"deSelectAll\">清空</a>\r\n");
      out.write("\t\t\t <div id=\"cbl\" class=\"mini-checkboxlist a\" textField=\"text\" valueField=\"id\" value=\"APL,APR,PL,CP,UD\" data=\"opsStateData\" style=\"float: left;\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"mini-fit\">\r\n");
      out.write("\t\t\t<div id=\"grid1\" class=\"mini-datagrid\" onrowdblclick=\"onUpdate\" showPager=\"false\"\r\n");
      out.write("\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/operation/opsApply/refleshByRegister.do\" >\r\n");
      out.write("\t\t\t\t<div property=\"columns\">\r\n");
      out.write("\t\t\t\t\t<div header=\"手术申请明细列表\" headerAlign=\"center\" headerStyle=\"color:#ff8d00;font-weight:bolder;\">\r\n");
      out.write("\t\t\t\t\t\t<div property=\"columns\">\r\n");
      out.write("\t\t\t\t\t        <div type=\"indexcolumn\" headerAlign=\"center\" align=\"center\">序号</div>                \r\n");
      out.write("\t\t\t\t\t        <div field=\"applyTime\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy年 MM月dd日 HH:mm:ss\">手术时期</div>    \r\n");
      out.write("\t\t\t\t\t        <div field=\"bedNo\" width=\"40\" headerAlign=\"center\" align=\"center\">床号</div>  \r\n");
      out.write("\t\t\t\t\t        <div field=\"patientName\"\" headerAlign=\"center\" align=\"center\">姓名</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"sexCode\" width=\"40\" headerAlign=\"center\" align=\"center\" renderer=\"onSex\">姓别</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"diagName\" headerAlign=\"center\" align=\"center\" renderer=\"diagNameRenderer\">诊断</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"itemName\" headerAlign=\"center\" align=\"center\" renderer=\"itemNameRenderer\">手术名称</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"opsDoctorName\" width=\"80\" headerAlign=\"center\" align=\"center\">手术医生</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"opsState\" width=\"80\" headerAlign=\"center\" align=\"center\" renderer=\"onOpsState\">手术状态</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"validFlag\" width=\"40\" headerAlign=\"center\" align=\"center\" renderer=\"onValidFlag\">有效性</div>\r\n");
      out.write("\t\t\t\t\t        <div field=\"createdTime\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy年 MM月dd日 HH:mm:ss\">申请日期</div>\r\n");
      out.write("\t\t\t\t        </div>\r\n");
      out.write("\t\t\t\t    </div>\r\n");
      out.write("\t\t\t    </div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("    </div>        \r\n");
      out.write("</div>\r\n");
      out.write("<div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tCreateReport(\"Report\");\r\n");
      out.write("\t</script>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tmini.parse();\r\n");
      out.write("\tvar grid = mini.get(\"grid1\");\r\n");
      out.write("\tvar tree = mini.get(\"tree1\");\r\n");
      out.write("\tvar cbl = mini.get(\"cbl\");\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /commons/include/get.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /commons/include/get.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /commons/include/get.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("emr");
      // /commons/include/get.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(6,0) '${emrContextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${emrContextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
