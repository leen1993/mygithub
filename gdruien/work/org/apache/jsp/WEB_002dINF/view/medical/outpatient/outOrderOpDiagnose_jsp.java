/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.2
 * Generated at: 2018-05-11 09:01:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.medical.outpatient;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class outOrderOpDiagnose_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1525761782870L));
    _jspx_dependants.put("/commons/include/html_doctype.html", Long.valueOf(1525761798654L));
    _jspx_dependants.put("/commons/include/get.jsp", Long.valueOf(1525827802831L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>门诊工作站 -诊断管理</title>\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/boot.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/commons/dynamic.jsp\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/core.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/template/jquery.tmpl.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/default/css/web.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("\t.patientInfo {\n");
      out.write("\t\tcolor: #006aad;\n");
      out.write("\t\tfont-weight: bold;\n");
      out.write("\t\twidth:200px;\n");
      out.write("\t}\n");
      out.write(" \t.mini-panel-border {\n");
      out.write("\t    border: 0px solid #c5c5c5;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.mini-splitter {\n");
      out.write("\t\tmargin:3px;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.mini-tabs-scrollCt {\n");
      out.write("\t\tmargin: 3px 0 0 0;\n");
      out.write("\t}\n");
      out.write("\t\t\n");
      out.write("\t.mini-panel-border{\n");
      out.write("\t\tborder:0;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.mini-grid-border {\n");
      out.write("\t\tborder:0;\n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t//键盘回车事件  ESC事件\n");
      out.write("\t$(document).keyup(function(event){\n");
      out.write("\t  \tif (event.keyCode == 13) {\n");
      out.write("\t  \t\tvar cell = grid.getCurrentCell();\n");
      out.write("\t\t\tif(cell) {\n");
      out.write("\t\t\t\tif ((cell[1].field == \"memo\") && cell[0].diagId != \"\") { \n");
      out.write("\t\t\t\t\taddRow();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t  \t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t// 按名称快速过滤组套\n");
      out.write("\tfunction filterGroupClassify(elFilter, elTree) {\n");
      out.write("\t\tvar filter = mini.get(elFilter);\n");
      out.write("\t\tvar tree = mini.get(elTree);\n");
      out.write("\t\tvar key = filter.getValue();\n");
      out.write("\t\tif (key == \"请输入组套分类名称\" || key == \"\") {\n");
      out.write("\t\t\ttree.clearFilter();\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tkey = key.toUpperCase();\n");
      out.write("\t\t\ttree.filter(function(node) {\n");
      out.write("\t\t\t\tvar text = node.showDiagName + node.diagId + node.seqId;\n");
      out.write("\t\t\t\tif (text.indexOf(key) != -1) {\n");
      out.write("\t\t\t\t\treturn true;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 连动加载组套详情\n");
      out.write("\tfunction onnodedbclick(e) {\n");
      out.write("\t\tif (!e.isLeaf) {\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tvar row = e.row;\n");
      out.write("\t\tvar newRow = {\t\t\t\t\n");
      out.write("\t\t\tdiagTypeId : \"M\",\n");
      out.write("\t\t\tdiagId : row.diagId,\n");
      out.write("\t\t\tdiagName : row.diagName,\n");
      out.write("\t\t\tmemo : '',\n");
      out.write("\t\t\tsuspectedFlag : '0',\n");
      out.write("\t\t\tmainFlag : '1',\n");
      out.write("\t\t\tfirstDayCount : '1' ,\n");
      out.write("\t\t\tvalidFlag : '1' ,\n");
      out.write("\t\t\toperName : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.doctorName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\toperTime : new Date(),\n");
      out.write("\t\t\tpatientId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.patientId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\t\t\t\t\n");
      out.write("\t\t\tregisterId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\tsourceId: 1\n");
      out.write("\t\t};\t\n");
      out.write("\t\t\n");
      out.write("\t\tvar allNode = grid.getList();\n");
      out.write("\t\tfor(var i = 0; i < allNode.length; i++) {\n");
      out.write("\t\t\tif(newRow.diagId == allNode[i].diagId && parseInt(allNode[i].validFlag) == 1){\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"该诊断已经存在了，不能重复添加\", state: \"danger\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\t\treturn ;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tgrid.addRow(newRow);\n");
      out.write("\t\tremoveBadDiag();\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 查询诊断列表\n");
      out.write("\tfunction query() {\n");
      out.write("\t\tgrid.load({\n");
      out.write("\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\tsysType: \"O\"\n");
      out.write("\t\t});\t\n");
      out.write("\t\t$(\".toolbar\").show();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 页面加载完成后加载历史诊断列表\n");
      out.write("\tfunction queryHistory(){\n");
      out.write("\t\tvar startDate = mini.get(\"startDate\").getValue().getTime();\n");
      out.write("\t\tvar endDate = mini.get(\"endDate\").getValue().getTime();\n");
      out.write("\t\thistoryGrid.load({\n");
      out.write("\t\t\tregisterId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\tpatientId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.patientId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\tsysType : \"O\",\n");
      out.write("\t\t\tstartTime : startDate,\n");
      out.write("\t\t\tendTime : endDate\n");
      out.write("\t\t});\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 增加datagrid的行\n");
      out.write("\tfunction addRow() {\n");
      out.write("\t\tgrid.deselectAll();\n");
      out.write("\t\tvar row = getRow();\n");
      out.write("\t\tvar newRow = {\n");
      out.write("\t\t\t\tname: \"New Row\",\n");
      out.write("\t\t\t\tvalidFlag: \"1\",\n");
      out.write("\t\t\t\tfirstDayCount: \"1\",\n");
      out.write("\t\t\t\tsuspectedFlag: \"0\",\n");
      out.write("\t\t\t\tdiagName: \"\",\n");
      out.write("\t\t\t\tpatientId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.patientId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\t\t\t\t\n");
      out.write("\t\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\t\tstate: \"\",\n");
      out.write("\t\t\t\tsysType: \"O\",\n");
      out.write("\t\t\t\tsourceId: \"1\"\n");
      out.write("\t\t\t};\n");
      out.write("\t\tif(row) {\n");
      out.write("\t\t\tnewRow.firstVisitFlag = row.firstVisitFlag;\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t// 1. 医生站录入诊断；2.病案室录入诊断；3.手术诊断； 4.其他\n");
      out.write("\t\tif(existDiagType()) {\n");
      out.write("\t\t\tgrid.addRow(newRow);\n");
      out.write("\t\t\tgrid.beginEditCell(newRow, \"diagTypeId\");\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tnewRow.diagTypeId = \"M\";\n");
      out.write("\t\t\tnewRow.mainFlag = '1';\n");
      out.write("\t\t\tgrid.addRow(newRow);\n");
      out.write("\t\t\tgrid.beginEditCell(newRow, \"diagId\");\n");
      out.write("\t\t}\n");
      out.write("\t\tgrid.setSelected(newRow);\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 是否存在主要诊断\n");
      out.write("\tfunction existDiagType() {\n");
      out.write("\t\tvar list = grid.getList();\n");
      out.write("\t\tfor(var i = 0; i < list.length; i++) {\n");
      out.write("\t\t\tif(parseInt(list[i].validFlag) == 1 && list[i].diagTypeId == \"M\") {\n");
      out.write("\t\t\t\treturn true; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn false; \n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 选择医嘱\n");
      out.write("\tfunction getRow() {\n");
      out.write("\t\tvar rows = grid.getList();\n");
      out.write("\t\tif(rows.length > 0) {\n");
      out.write("\t\t\treturn rows[0];\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\treturn null; \n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 删除datagrid的行\n");
      out.write("\tfunction removeRow() {\n");
      out.write("\t\tvar rows = grid.getSelecteds();\n");
      out.write("\t\tif (rows.length == 0) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请选择要删除的数据行!\", state: \"danger\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfor(var i = 0;i < rows.length; i++ ) {\t\t\t\n");
      out.write("\t\t\tif(rows[i].businessId != null) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"选中的第\"+(i+1)+\"条记录已经保存，只能作废，不能删除 ！！\", state: \"danger\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\t\t\t\n");
      out.write("\t\t}\t\t\n");
      out.write("\t\tif (rows.length > 0) {\n");
      out.write("\t\t\tgrid.removeRows(rows, true);\n");
      out.write("\t\t}\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 单元格编辑前事件 \n");
      out.write("\tfunction oncellbeginedit(e) {\n");
      out.write("\t\tif(e.row) {\n");
      out.write("\t\t\tif(e.row.businessId ) {\n");
      out.write("\t\t\t\tgrid.cancelEdit();\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 行选择事件\n");
      out.write("\tfunction onselect(e) {\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 单元格值提交\n");
      out.write("\tfunction oncellcommitedit(e) {\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 作废\n");
      out.write("\tfunction cancelDiagnose() {\n");
      out.write("\t\tvar rows = grid.getSelecteds();\n");
      out.write("\t\tif (rows.length <= 0){\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请选择要作废的数据行!\", state: \"danger\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\t\n");
      out.write("\t\t\n");
      out.write("\t\tvar diagnoseIds = [];\n");
      out.write("\t\tvar diagnoseNames = [];\n");
      out.write("\t\tfor(var i=0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(parseInt(rows[i].validFlag) == 0) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"已经作废的记录不能再次作废\", state: \"danger\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\t\t\t\n");
      out.write("\t\t\tif (rows[i].businessId) {\n");
      out.write("\t\t\t\tdiagnoseNames.push(rows[i].diagName);\n");
      out.write("\t\t\t\tdiagnoseIds.push(rows[i].businessId);\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\ttop.mini.confirm(\"是否将\" + diagnoseNames.join(\",\") + \"做废处理?\", '提示', function(r) {\n");
      out.write("\t\t\tif (r == \"ok\") { \t\t\t\t\t\n");
      out.write("\t\t\t\trealCancel();\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 实际作废\n");
      out.write("\tfunction realCancel() {\n");
      out.write("\t\tvar rows = grid.getSelecteds();\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/opDiagnose/cancelDiagnose.do\",\n");
      out.write("            data: {data: mini.encode(rows)},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("\t\t\t\tif(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\tgrid.reload();\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\",  y: \"center\",  timeout: 5000});\t\t\t\t\t\t\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\ttop.mini.alert(\"提示\", r);\n");
      out.write("\t\t\t\t}\t\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取当前的树\n");
      out.write("\tfunction getTree() {\n");
      out.write("\t\tvar index = tab.activeIndex;\n");
      out.write("\t\tswitch(index) {\n");
      out.write("\t\tcase 0:\n");
      out.write("\t\t\treturn treePersonal;\n");
      out.write("\t\tcase 1:\n");
      out.write("\t\t\treturn treeDept;\n");
      out.write("\t\tcase 2:\n");
      out.write("\t\t\treturn treeHos;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 弹出组套编辑窗口\n");
      out.write("\tfunction openEdit(kind) {\n");
      out.write("\t\tvar currentTree = getTree();\n");
      out.write("\t\tvar row = null;\n");
      out.write("\t\tif(kind == \"added\") {\n");
      out.write("\t\t\trow = grid.getSelected();\n");
      out.write("\t\t\trow._state = \"added\";\n");
      out.write("\t\t} else if(kind == \"modified\"){\n");
      out.write("\t\t\trow = getTree().getSelectedNode();\n");
      out.write("\t\t\trow._state = \"modified\";\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif (row.length == 0 || row.length > 1) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请选择一条记录\", state: \"danger\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif(!row.diagId) return;\n");
      out.write("\t\tmini.open({\n");
      out.write("\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/edit.do\", \n");
      out.write("\t\t\ttitle: \"保存组套\", \n");
      out.write("\t\t\twidth: 300, \n");
      out.write("\t\t\theight: 250, \n");
      out.write("\t\t\tallowResize: false, \n");
      out.write("\t\t\tallowDrag: true, \n");
      out.write("\t\t\tshowCloseButton: true, \n");
      out.write("\t\t\tshowMaxButton: false, \n");
      out.write("\t\t\tshowModal: true, \n");
      out.write("\t\t\tonload: function() { \n");
      out.write("\t\t\t\tvar iframe = this.getIFrameEl();\n");
      out.write("\t\t\t\tiframe.contentWindow.setData(row);\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tondestroy: function (action) { \n");
      out.write("\t\t\t\tif (action == \"ok\") {       \n");
      out.write("\t\t\t\t\ttreePersonal.reload();\n");
      out.write("\t\t\t\t\ttreeDept.reload();\n");
      out.write("\t\t\t\t\ttreeHos.reload();\n");
      out.write("\t\t\t\t\tremoveBadDiag();\n");
      out.write("\t\t        }                        \n");
      out.write("\t\t    }\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 获取诊断编码和诊断名称\n");
      out.write("\tfunction onValueChanged1(e) {\n");
      out.write("\t\tvar newRow = selectRow();\n");
      out.write("\t\tif(!e.selected) {return;}\n");
      out.write("\t\tgrid.updateRow(newRow, {\n");
      out.write("\t\t\tdiagId: e.selected.id,\n");
      out.write("\t\t\tdiagName: e.selected.text\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 选择\n");
      out.write("\tfunction selectRow() {\n");
      out.write("\t\tvar rows = grid.getSelecteds(); \n");
      out.write("\t\tif(rows.length == 1) {\n");
      out.write("\t\t\treturn rows[0];\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\t// top.mini.alert(\"选择医嘱错误！\");\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 获取诊断编码和诊断名称\n");
      out.write("\tfunction onValueChanged2(e) {\n");
      out.write("\t\tvar newRow = grid.getSelected();\n");
      out.write("\t\tvar dataRow = e.selected;\n");
      out.write("\t\tif (!dataRow) {\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tnewRow.diagId = dataRow.id; \t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 同步诊断类别\n");
      out.write("\tfunction onValueChanged3(e) {\n");
      out.write("\t\tvar newRow = grid.getSelected();\n");
      out.write("\t\tvar dataRow = e.selected;\n");
      out.write("\t\tif (!dataRow) {\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tvar m = dataRow.id == \"M\" ? \"1\" : \"0\";\n");
      out.write("\t\tnewRow.mainFlag = m;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 获取有效诊断\n");
      out.write("\tfunction getGoodDiagnose() {\n");
      out.write("\t\tvar rows = grid.getList();\n");
      out.write("\t\tvar goodDiags = [];\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(rows[i].diagId && rows[i].diagName) {\n");
      out.write("\t\t\t\tgoodDiags.push(rows[i]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn goodDiags;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 删除无效诊断\n");
      out.write("\tfunction removeBadDiag() {\n");
      out.write("\t\tvar rows = grid.getList();\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(!rows[i].diagId) {\n");
      out.write("\t\t\t\tgrid.removeRow(rows[i]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\t\n");
      out.write("\t\n");
      out.write("\t// 保存诊断\n");
      out.write("\tfunction save(data) {\n");
      out.write("\t\tvar rows = getGoodDiagnose();\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/opDiagnose/saveOpDiagnose.do\",\n");
      out.write("            data: data,\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("\t\t\t\tif(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: \"诊断添加成功！\", state: \"success\", x: \"center\",  y: \"center\",  timeout: 5000});\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\tquery();\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\",  y: \"center\",  timeout: 5000});\t\t\t\t\t\t\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == 0) {\n");
      out.write("\t\t\t\t\ttop.mini.confirm(\"是否设为首诊\", \"提示\", function(action) {\n");
      out.write("\t\t\t\t\t\tif(action == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\tfirstSave(1);\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\tfirstSave(0);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: r, state: \"warning\", x: \"center\",  y: \"center\",  timeout: 5000});\t\t\t\t\t\t\n");
      out.write("\t\t\t\t}\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 重新设置患者信息\n");
      out.write("\tfunction setPatientInfo() {\n");
      out.write("\t\tvar rows = grid.getList();\n");
      out.write("\t\tvar diagStr = \"\";\n");
      out.write("\t\tfor(var i = rows.length-1; i >= 0 ; i--) {\n");
      out.write("\t\t\tif(parseInt(rows[i].validFlag) == 1) {\n");
      out.write("\t\t\t\tdiagStr +=rows[i].diagName + \";\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tvar patientInfo = parent.form.getData();\n");
      out.write("\t\tpatientInfo.diagName = diagStr;\n");
      out.write("\t\tparent.form.setData(patientInfo);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 保存诊断\n");
      out.write("\tfunction pageSave() {\n");
      out.write("\t\tvar rows = grid.getList();\n");
      out.write("\t\tvar data = {data: mini.encode(rows)};\n");
      out.write("\t\tsave(data);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 是否首诊保存\n");
      out.write("\tfunction firstSave(firstFlag) {\n");
      out.write("\t\tvar rows = grid.getList();\n");
      out.write("\t\tvar data = {data: mini.encode(rows), firstFlag: firstFlag};\n");
      out.write("\t\tsave(data);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 双击一行\n");
      out.write("\tfunction onrowdblclick(e) {\n");
      out.write("\t\tvar newRow = e.row;\n");
      out.write("\t\tgrid.addRow(newRow);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 渲染表格\n");
      out.write("\tfunction ondrawcell(e) {\n");
      out.write("\t\t if (e.column.field == \"state\") {\n");
      out.write("\t\t\tif (e.row.validFlag == \"0\") {\n");
      out.write("\t\t\t\te.cellHtml = \"废\";\n");
      out.write("\t\t\t\te.cellStyle = \"font-weight:bold;color:#f00;\";\n");
      out.write("\t\t\t} else if(e.row. businessId && e.row.validFlag == \"1\") {\n");
      out.write("\t\t\t\te.cellHtml = \"新\";\n");
      out.write("\t\t\t\te.cellStyle = \"font-weight:bold;color:#090\";\n");
      out.write("\t\t\t};\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 弹出右键菜单\n");
      out.write("\tfunction onMenuOpen(e) {\n");
      out.write("\t\tvar menu = e.sender;\n");
      out.write("\t\te.htmlEvent.preventDefault();\n");
      out.write("\t\te.cancel = false;\n");
      out.write("\t\treturn;\n");
      out.write("\t\tvar row = grid.getSelected();\n");
      out.write("\t\tvar rowIndex = grid.indexOf(row);\n");
      out.write("\t\tif (!row || rowIndex == 0) {\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t\te.htmlEvent.preventDefault();\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 设置日期\n");
      out.write("\tfunction setEndDate() {\n");
      out.write("\t\tvar date = mini.formatDate(new Date(), \"yyyy-MM-dd\");\n");
      out.write("\t\tmini.get(\"endDate\").setValue(mini.parseDate(date));\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 删除\n");
      out.write("\tfunction del(e) {\n");
      out.write("\t\tvar node = currentTree().getSelectedNode();\n");
      out.write("\t\tif(node.children) {\n");
      out.write("\t\t\ttop.mini.confirm(\"是否确认删除选中文件夹里面所有的诊断模板\", \"提示\", function(action) {\n");
      out.write("\t\t\t\tif(action == \"ok\") {\n");
      out.write("\t\t\t\t\tvar data = {isPackage: 1, groupName: node.showDiagName, type: getType()};\n");
      out.write("\t\t\t\t\tdelDiagnoseTemp(data);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\t\t\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\ttop.mini.confirm(\"是否确认删除选中诊断模板\", \"提示\", function(action) {\n");
      out.write("\t\t\t\tif(action == \"ok\") {\n");
      out.write("\t\t\t\t\tvar data = {isPackage: 0, diagnoseTemplate: node};\n");
      out.write("\t\t\t\t\tdelDiagnoseTemp(data);\t\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\t\t\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 实际删除模板\n");
      out.write("\tfunction delDiagnoseTemp(data) {\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/removeTemplate.do\",\n");
      out.write("            data: {data: mini.encode(data)},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("\t\t\t\tif(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: \"删除诊断模板成功！\", state: \"success\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\t\t\trefreshGroup();\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\",  y: \"center\",  timeout: 5000});\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t}\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 当前树\n");
      out.write("\tfunction currentTree() {\n");
      out.write("\t\tvar currentTab = tab.getActiveTab();\n");
      out.write("\t\tif(currentTab.name == \"personalTab\") {\n");
      out.write("\t\t\treturn mini.get(\"treePersonal\");\n");
      out.write("\t\t} else if(currentTab.name == \"deptTab\") {\n");
      out.write("\t\t\treturn mini.get(\"treeDept\");\n");
      out.write("\t\t} else if(currentTab.name == \"hospitalTab\") {\n");
      out.write("\t\t\treturn mini.get(\"treeHos\");\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction getType() {\n");
      out.write("\t\tvar currentTab = tab.getActiveTab();\n");
      out.write("\t\tif(currentTab.name == \"personalTab\") {\n");
      out.write("\t\t\treturn 2;\n");
      out.write("\t\t} else if(currentTab.name == \"deptTab\") {\n");
      out.write("\t\t\treturn 1;\n");
      out.write("\t\t} else if(currentTab.name == \"hospitalTab\") {\n");
      out.write("\t\t\treturn 0;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 刷组套\n");
      out.write("\tfunction refreshGroup() {\n");
      out.write("\t\tvar type = getType();\n");
      out.write("\t\tif(type == 2) {\n");
      out.write("\t\t\ttreePersonal.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/tree.do?type=2\");\n");
      out.write("\t\t} else if(type == 1) {\n");
      out.write("\t\t\ttreeDept.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/tree.do?type=1\");\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\ttreeHos.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/tree.do?type=0\");\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 刷新\n");
      out.write("\tfunction refresh() {\n");
      out.write("\t\tgrid.reload();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction onload(e) {\n");
      out.write("\t\tsetPatientInfo();\n");
      out.write("\t\tif(!existDiagType()) {\n");
      out.write("\t\t\taddRow();\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<ul id=\"gridMenu\" class=\"mini-contextmenu\" style=\"display: none;\" onbeforeopen=\"onMenuOpen\">\n");
      out.write("\t\t<li onclick=\"cancelDiagnose\">作废</li>\n");
      out.write("\t\t<li onclick=\"pageSave\">保存</li>\n");
      out.write("\t\t<li onclick=\"openEdit('added')\">存组套</li>\n");
      out.write("\t\t<li onclick=\"removeRow\">删除</li>\n");
      out.write("\t</ul>\n");
      out.write("\t<ul id=\"treeMenu\" class=\"mini-contextmenu\" style=\"display: none;\" onbeforeopen=\"onMenuOpen\">\n");
      out.write("\t\t<li onclick=\"openEdit('modified')\">修改</li>\n");
      out.write("\t\t<li onclick=\"del\">删除</li>\n");
      out.write("\t</ul>\n");
      out.write("\t<div class=\"mini-fit\">\n");
      out.write("\t\t<div class=\"mini-splitter\" style=\"width:99%; height:99%;\" borderStyle=\"border-top:0;\" handlerSize=\"6\">\n");
      out.write("\t\t\t<div size=\"300\" showCollapseButton=\"false\">\n");
      out.write("\t\t\t\t<div id=\"tabs1\" class=\"mini-tabs\" activeIndex=\"0\" style=\"width:100%; height:100%;\" bodyStyle=\"padding:0;border:0;\">\n");
      out.write("\t\t\t\t\t<div title=\"个人组套\" name=\"personalTab\">\n");
      out.write("\t\t\t\t\t\t<input id=\"filterPersonal\" class=\"mini-textbox\"\n");
      out.write("\t\t\t\t\t\t\tborderStyle=\"border-left:0px;border-right:0px;border-top:0px;\"\n");
      out.write("\t\t\t\t\t\t\temptyText=\"请输入组套名称\" style=\"width: 100%\" resultAsTree=\"false\"\n");
      out.write("\t\t\t\t\t\t\tonenter=\"filterGroupClassify('filterPersonal', 'treePersonal')\"/>\n");
      out.write("\t\t\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t\t\t\t\t<ul id=\"treePersonal\" class=\"mini-tree\"\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/tree.do?type=2\"\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"width:100%; padding: 100%;\" onnodedblclick=\"onnodedbclick\"\n");
      out.write("\t\t\t\t\t\t\t\tshowTreeIcon=\"true\" textField=\"showDiagName\" idField=\"seqId\"\n");
      out.write("\t\t\t\t\t\t\t\tparentField=\"parentId\" resultAsTree=\"false\" showArrow=\"true\"\n");
      out.write("\t\t\t\t\t\t\t\texpandOnNodeClick=\"true\" contextMenu=\"#treeMenu\">\n");
      out.write("\t\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<div title=\"科室组套\" name=\"deptTab\">\n");
      out.write("\t\t\t\t\t\t<input id=\"filterDept\" class=\"mini-textbox\"\n");
      out.write("\t\t\t\t\t\t\tborderStyle=\"border-left:0px;border-right:0px;border-top:0px;\"\n");
      out.write("\t\t\t\t\t\t\temptyText=\"请输入组套名称\" style=\"width: 100%\"\n");
      out.write("\t\t\t\t\t\t\tonenter=\"filterGroupClassify('filterDept', 'treeDept')\" />\n");
      out.write("\t\t\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t\t\t\t\t<ul id=\"treeDept\" class=\"mini-tree\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/tree.do?type=1\"\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"width:100%; padding:100%;\" onnodedblclick=\"onnodedbclick\"\n");
      out.write("\t\t\t\t\t\t\t\tshowTreeIcon=\"true\" textField=\"diagName\" idField=\"seqId\"\n");
      out.write("\t\t\t\t\t\t\t\tparentField=\"parentId\" resultAsTree=\"false\" showArrow=\"true\"\n");
      out.write("\t\t\t\t\t\t\t\texpandOnNodeClick=\"true\" contextMenu=\"#treeMenu\">\n");
      out.write("\t\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<div title=\"全院组套\" name=\"hospitalTab\">\n");
      out.write("\t\t\t\t\t\t<input id=\"filterHospital\" class=\"mini-textbox\"\n");
      out.write("\t\t\t\t\t\t\tborderStyle=\"border-left:0px;border-right:0px;border-top:0px;\"\n");
      out.write("\t\t\t\t\t\t\temptyText=\"请输入组套名称\" style=\"width: 100%\"\n");
      out.write("\t\t\t\t\t\t\tonenter=\"filterGroupClassify('filterHospital', 'treeHospital')\" />\n");
      out.write("\t\t\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t\t\t\t\t<ul id=\"treeHos\" class=\"mini-tree\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/diagnoseTemplate/tree.do?type=0\"\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"width:100%; padding:100%;\" onnodedblclick=\"onnodedbclick\"\n");
      out.write("\t\t\t\t\t\t\t\tshowTreeIcon=\"true\" textField=\"diagName\" idField=\"seqId\"\n");
      out.write("\t\t\t\t\t\t\t\tparentField=\"parentId\" resultAsTree=\"false\" showArrow=\"true\"\n");
      out.write("\t\t\t\t\t\t\t\texpandOnNodeClick=\"true\" contextMenu=\"#treeMenu\">\n");
      out.write("\t\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div showCollapseButton=\"false\">\n");
      out.write("\t\t\t\t<div class=\"mini-toolbar\"  borderStyle=\"border-top:0px;border-left:0px;border-right:0px;\" style=\"background-color: #F5F5F5;\">\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-plus\" plain=\"true\" onclick=\"addRow()\">新增</a>\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-save\" plain=\"true\" onclick=\"pageSave()\">保存</a>\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-remove\" plain=\"true\" onclick=\"removeRow()\">删除</a>\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-stop\" plain=\"true\" onclick=\"cancelDiagnose()\">作废</a>\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-save\" plain=\"true\" onclick=\"openEdit('added')\">存组套</a>\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-refresh\" plain=\"true\" onclick=\"refresh()\">刷新</a>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t\t\t<div class=\"mini-splitter\" style=\"width:99%;height:99%;\" borderStyle=\"border:0;\" vertical=\"true\">\n");
      out.write("\t\t\t\t\t\t<div size=\"50%\" showCollapseButton=\"false\">\n");
      out.write("\t\t\t\t\t\t\t<div id=\"grid1\" class=\"mini-datagrid\" editNextOnEnterKey=\"true\" allowCellValid=\"true\" allowCellEdit=\"true\"  allowCellSelect=\"true\" sortMode=\"client\"\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"width:100%;height:100%;\" borderStyle=\"border-right:0px solid #ccc;border-top:1;\"  multiSelect=\"true\" oncellbeginedit=\"oncellbeginedit\" onselect=\"onselect\"\n");
      out.write("\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/opDiagnose/getAll.do\" showPager=\"false\" ondrawcell=\"ondrawcell\" contextMenu=\"#gridMenu\" onload=\"onload\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- 隐藏域 开始-->\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"businessId\" visible=\"false\">诊断ID</div>\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"patientId\" visible=\"false\">病人ID</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<!-- 隐藏域 结束-->\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div type=\"checkcolumn\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"state\" headerAlign=\"center\" align=\"center\" width=\"30\">状态</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div type=\"indexcolumn\" headerAlign=\"center\" align=\"center\" width=\"40\">序号</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"diagTypeId\" name=\"diagTypeId\" type=\"comboboxColumn\"  autoShowPopup=\"true\" allowSort=\"true\" headerAlign=\"center\" align=\"center\" width=\"80\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t诊断类别\t<input property=\"editor\" class=\"mini-combobox\" onvaluechanged=\"onValueChanged3\" showPopup=\"true\" popupwidth=\"80\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/enums/diagType.json\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"diagId\" name=\"diagId\" required=\"true\" displayField=\"diagId\" headerAlign=\"center\" autoShowPopup=\"true\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t诊断编码\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div property=\"editor\" class=\"mini-autocomplete\"  textField=\"id\" valueField=\"id\" valueFromSelect=\"true\"  popupWidth=\"500\" enterQuery=\"false\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/ICD/getKVs.do?diagSysType=ICD10\" showPopup=\"true\" required=\"true\" allowInput=\"true\" style=\"width:100\"  \n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t onvaluechanged=\"onValueChanged1\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div header=\"诊断编码\" headerAlign=\"center\" align=\"center\" field=\"id\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div header=\"诊断名称\" headerAlign=\"center\" field=\"text\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"diagName\" required=\"true\" width=\"200\" headerAlign=\"center\" align=\"center\">诊断名称</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"memo\" type=\"textboxcolumn\" headerAlign=\"center\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t备注<input property=\"editor\" class=\"mini-textbox\" style=\"width:100%;\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"suspectedFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\" >疑诊</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"mainFlag\" type=\"checkboxcolumn\" visible=\"false\" headerAlign=\"center\" align=\"center\" value=\"0\" trueValue=\"1\" falseValue=\"0\">主诊断</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"firstVisitFlag\" type=\"checkboxcolumn\"  headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">首诊\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"validFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" value=\"1\" trueValue=\"1\" falseValue=\"0\" allowSort=\"true\">是否有效</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"operId\" type=\"comboboxColumn\" headerAlign=\"center\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t操作员<input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysUser/getKVs.do\" readOnly=\"true\" enabled=\"false\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"operTime\" headerAlign=\"center\"\talign=\"center\" enabled=\"false\" width=\"180\" dateFormat=\"yyyy-MM-dd HH:mm:ss\">操作时间</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"cancelOperId\" type=\"comboboxColumn\" headerAlign=\"center\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t作废人 <input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysUser/getKVs.do\"  enabled=\"false\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"cancelTime\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\" width=\"180\">作废时间</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<!-- 历史诊断 -->\n");
      out.write("\t\t\t\t\t\t<div showCollapseButton=\"false\" >\n");
      out.write("\t\t\t\t\t\t\t<div class=\"mini-toolbar\" class=\"toolbar\" style=\"width:100%;display:none;\"\n");
      out.write("\t\t\t\t\t\t\t\tborderStyle=\"border:0;\">\n");
      out.write("\t\t\t\t\t\t\t\t<span style=\"font-size: 15px; font-weight: bold;\">历史诊断</span>\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"separator\"></span>\n");
      out.write("\t\t\t\t\t\t\t\t开始日期:\n");
      out.write("\t\t\t\t\t\t\t\t<input id=\"startDate\" class=\"mini-datepicker\" value=\"2017-02-20\" onvaluechanged=\"queryHistory\"/>\n");
      out.write("\t\t\t\t\t\t\t\t结束日期:\n");
      out.write("\t\t\t\t\t\t\t\t<input id=\"endDate\" class=\"mini-datepicker\" value=\"2017-07-25\" onvaluechanged=\"queryHistory\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"historyGrid\" class=\"mini-datagrid\" onrowdblclick=\"onrowdblclick\" showPager=\"true\" resultAsTree=\"false\" \n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"width:100%;height:100%;\" borderStyle=\"border-top:0px solid #ccc;border-left:0;border-right:0;border-bottom:0;\"\n");
      out.write("\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/opDiagnose/getDiagHistoryList.do\" showTreeIcon=\"true\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div type=\"indexcolumn\">序号</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"diagTypeId\" headerAlign=\"center\" allowSort=\"true\" type=\"comboboxColumn\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t诊断类别 <input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/enums/diagType.json\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t onvaluechanged=\"onValueChanged3\" readonly=\"true\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"diagId\" required=\"true\" displayField=\"diagId\" headerAlign=\"center\" align=\"center\">诊断编码</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"diagName\" headerAlign=\"center\" displayField=\"diagName\" align=\"center\" width=\"200\">诊断名称</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"memo\" headerAlign=\"center\" align=\"center\" type=\"textboxcolumn\">备注</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"suspectedFlag\" type=\"checkboxcolumn\" readonly=\"true\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" value=\"0\" falseValue=\"0\">疑诊</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"mainFlag\" type=\"checkboxcolumn\" readonly=\"true\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t主诊断\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"validFlag\" type=\"checkboxcolumn\" readonly=\"true\" headerAlign=\"center\" value=\"1\" trueValue=\"1\"\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t falseValue=\"0\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t是否有效\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"operId\" type=\"comboboxColumn\" headerAlign=\"center\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t操作员 <input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysUser/getKVs.do\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"operTime\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\">操作时间</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"cancelOperId\" type=\"comboboxColumn\"  headerAlign=\"center\" align=\"center\">作废人\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysUser/getKVs.do\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"cancelTime\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\">作废时间</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\tmini.parse();\n");
      out.write("\t\tvar grid = mini.get(\"grid1\");\n");
      out.write("\t\tvar tab = mini.get(\"tabs1\");\n");
      out.write("\t\tvar historyGrid = mini.get(\"historyGrid\");\n");
      out.write("\t\tvar treePersonal = mini.get(\"treePersonal\");\n");
      out.write("\t\tvar treeDept = mini.get(\"treeDept\");\n");
      out.write("\t\tvar treeHos = mini.get(\"treeHos\");\n");
      out.write("\t\tquery();\n");
      out.write("\t\tsetEndDate();\n");
      out.write("\t\tqueryHistory();\n");
      out.write("\t\n");
      out.write("\t</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /commons/include/get.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /commons/include/get.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /commons/include/get.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("emr");
      // /commons/include/get.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(6,0) '${emrContextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${emrContextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
