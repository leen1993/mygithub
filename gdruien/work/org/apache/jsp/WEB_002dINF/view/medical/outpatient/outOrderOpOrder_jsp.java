/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.2
 * Generated at: 2018-05-14 07:27:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.medical.outpatient;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class outOrderOpOrder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1525761782870L));
    _jspx_dependants.put("/commons/include/html_doctype.html", Long.valueOf(1525761798654L));
    _jspx_dependants.put("/commons/include/get.jsp", Long.valueOf(1525827802831L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>门诊工作站-门诊医嘱</title>\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/boot.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/commons/dynamic.jsp\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/core.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/template/jquery.tmpl.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/default/css/web.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/report/CreateControl.js\" type=\"text/javascript\"></script>\n");
      out.write("<style>\n");
      out.write(".patientInfo {\n");
      out.write("\tcolor:#006aad;\n");
      out.write("\tfont-weight:bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".float {\n");
      out.write("\tfloat:left;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".mini-tab-active {\t\n");
      out.write("\tfont-size: 20px;\n");
      out.write("\tfont-weight: bold; \n");
      out.write("\tborder: 1px solid #ccc;\n");
      out.write("\tborder-bottom: 0px solid rgb(0, 141, 246);\n");
      out.write("\tbackground: #eee;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".mini-tab-text {\n");
      out.write("    display: inline-block;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    line-height: 16px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    margin: 5px 2px 0 0;  \n");
      out.write("}\n");
      out.write("\n");
      out.write("#win1 .mini-splitter-border {\n");
      out.write("    border: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".mini-splitter {\n");
      out.write("\tmargin:3px;\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("#win1 .mini-splitter-pane {\n");
      out.write("\tborder:0; \n");
      out.write("}\n");
      out.write("\n");
      out.write("#tabs1 .mini-tabs-header {\n");
      out.write("\tpadding: 3px 0 0 0; \n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t// 键盘监听事件\n");
      out.write("\tdocument.onkeydown = function(event) {\n");
      out.write("\t\tvar row = selectRow();\n");
      out.write("\t\tif (event.keyCode == 32) {\n");
      out.write("\t\t\tvar cell = grid.getCurrentCell();\n");
      out.write("\t\t\tif(cell) {\n");
      out.write("\t\t\t\tif (cell[1].field == \"emergencyFlag\" && (cell[0].orderState == \"SV\" || cell[0].orderState == \"New\")) {\n");
      out.write("\t\t\t\t\tgrid.updateRow(cell[0], {emergencyFlag: 1-cell[0].emergencyFlag\t});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\t\n");
      out.write("\t\t};\n");
      out.write("\t\tif (event.keyCode == 13) {\n");
      out.write("\t\t\tvar cell = grid.getCurrentCell();\n");
      out.write("\t\t\tif(cell) {\n");
      out.write("\t\t\t\tif ((cell[1].field == \"qtyUnit\") && cell[0].orderState == \"New\" && row.itemSysparentType == \"Drug\") { \n");
      out.write("\t\t\t\t\taddRow();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tif (event.keyCode == 9) {\n");
      out.write("\t\t\treturn false; \n");
      out.write("\t\t};\n");
      out.write("\t\t// 保存 F9\n");
      out.write("\t\tif(event.keyCode == 120) {\n");
      out.write("\t\t\tsaveOrder();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// ESC 退出所有弹窗窗口\n");
      out.write("\t\tif(event.keyCode == 27) {\n");
      out.write("\t\t\twin1.hide();\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 单行点击事件，显示该行医嘱的详细信息\n");
      out.write("\tfunction onselect(e) {\n");
      out.write("\t\tif(!e.record.itemId) {\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t// 设置重置的值\n");
      out.write("\t\tresetGroupNo.setValue(e.record.subcombNo);\n");
      out.write("\t\tresetOrdDosage.setValue(e.record.ordDosage);\n");
      out.write("\t\t// 显示详细信息\n");
      out.write("\t\tvar itemNo = e.record.itemNo ? e.record.itemNo : \"\";\n");
      out.write("\t\tvar specs = e.record.specs? e.record.specs : \"\";\n");
      out.write("\t\tvar showInfo = \"【药品名称: \" + itemNo +\" \"+ e.record.itemName +\"】【规格:\"+ specs \n");
      out.write("\t\t\t\t\t   +\"】【单价 :\" + e.record.itemPrice +\"元/\"+ e.record.qtyUnit +\"】\";\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getSingleDetail.do\";\n");
      out.write("\t\tvar data = {itemId : e.record.itemId, registerId : e.record.registerId};\n");
      out.write("\t\tvar fn = function(info) {\n");
      out.write("\t\t\tshowInfo += \"\\n\" + info;\n");
      out.write("\t\t\torderInfo.setValue(showInfo);\n");
      out.write("\t\t}\n");
      out.write("\t\t$.post(url, data, fn);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 存组套\n");
      out.write("\tfunction saveGroup() {\n");
      out.write("\t\tvar rows = getSelectedRows();\n");
      out.write("\t\tfor(var i = 0 ; i < rows.length; i++) {\n");
      out.write("\t\t\trows[i].frequencyId = rows[i].freqId;\n");
      out.write("\t\t\trows[i].days = rows[i].freqDays;\n");
      out.write("\t\t}\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/opEditor.do?orderClassifyType=O&sysType=O\";\n");
      out.write("\t\tmini.open({\n");
      out.write("\t\t\turl : url,\n");
      out.write("\t\t\ttitle:\"组套管理\",\n");
      out.write("\t\t\twidth:\"1024\", height:\"600\",\n");
      out.write("\t\t\tonLoad:function(){\n");
      out.write("\t\t\t\tvar iframe = this.getIFrameEl();\n");
      out.write("\t\t\t\tvar data = mini.clone(rows);\n");
      out.write("\t\t\t\tiframe.contentWindow.setData(data);\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tondestroy : function(r) {\n");
      out.write("\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\tif (r == \"ok\") { \n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t// top.mini.error(r, '提示');\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 复制组套\n");
      out.write("\tfunction copyToGroup (groupType) {\n");
      out.write("\t\tvar group = tree.getSelectedNode();\n");
      out.write("\t\tif (group && group.id) {\n");
      out.write("\t\t\t$.post(\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/copyToGroup.do\",\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tgroupId: group.id,\n");
      out.write("\t\t\t\t\tgroupType: groupType\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\tmini.showTips({content: \"保存成功！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t);\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// tree拖拽投放前发生\n");
      out.write("\tfunction onbeforedrop(e) {\n");
      out.write("\t\tvar classifyId = e.dropNode.id; \n");
      out.write("\t\tvar groupId = e.dragNode.id; \n");
      out.write("\t\tvar action = e.action; \n");
      out.write("\t\tif (e.dragNode.kind != e.dropNode.kind) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"不同类别间不允许拖动!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t};\n");
      out.write("\t\tif (e.dragNode.prop == \"classify\" && e.dropNode.prop == \"group\") {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"文件夹不允许这样移动!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t};\n");
      out.write("\t\tif (e.dropNode.id == \"Doct\" || e.dropNode.id == \"Dept\" || e.dropNode.id == \"Hos\") {\n");
      out.write("\t\t\tif (e.dragNode.prop == \"group\" && e.dragNode.pid) {\n");
      out.write("\t\t\t\taddGroupToClassify(e.dragNode,e.dropNode);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\tif (e.action == \"before\" || e.action == \"after\") {\n");
      out.write("\t\t\te.cancel=true;\n");
      out.write("\t\t\tif (e.dragNode.prop == \"group\" && e.dropNode.prop == \"classify\") {\n");
      out.write("\t\t\t\taddGroupToClassify(e.dragNode, e.dropNode);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar way,pid;\n");
      out.write("\t\t\tif (e.dragNode.prop == \"classify\" && e.dropNode.prop == \"classify\") {\n");
      out.write("\t\t\t\tway = \"classify_sort\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif (e.dragNode.prop==\"group\" && e.dropNode.prop==\"group\") {\n");
      out.write("\t\t\t\tif (e.dragNode.pid) {\n");
      out.write("\t\t\t\t\tway = \"upd_position\";\n");
      out.write("\t\t\t\t\tpid = e.dragNode.pid;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tway = \"group_sort\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tupdGroupSortNo(groupId, classifyId, action, way, pid);\n");
      out.write("\t\t}; \n");
      out.write("\t\tif (e.action == \"add\") {\n");
      out.write("\t\t\tif (e.dragNode.prop == \"classify\") {\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\tupdGroupSortNo(groupId,classifyId,\"after\",\"classify_sort\",\"\");\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\taddGroupToClassify(e.dragNode,e.dropNode);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 行选中前\n");
      out.write("\tfunction onbeforeselect(e) {\n");
      out.write("\t\tif(selectRow()) {\n");
      out.write("\t\t\tif(selectRow().seeNo != e.record.seeNo) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"只能选中同一处方内的医嘱！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 添加组套到分类中\n");
      out.write("\tfunction addGroupToClassify(dragNode,dropNode) {\n");
      out.write("\t\ttop.mini.confirm(\"是否将【\"+ dragNode.text +\"】移到【\"+ dropNode.text +\"】下\",\"信息提示\", function(action){\n");
      out.write("\t\t\tif (action==\"ok\") {\n");
      out.write("\t\t\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/addGroupToClassify.do\";\n");
      out.write("\t\t\t\t$.post(url,{groupId:dragNode.id,classifyId:dropNode.id},function(r){\n");
      out.write("\t\t\t\t\tif (r==\"ok\") {\n");
      out.write("\t\t\t\t\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/getTree.do?orderClassifyType=O&sysType=O\");\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取组套详情列表\n");
      out.write("\tfunction onNodedblclick(e) {\n");
      out.write("\t\tif(e.row.isLeaf == false) {\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\tif(orderFeeSure()) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"该处方在您操作期间已经收费，请新开处方进行操作！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t};\n");
      out.write("\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\tif(!activeTab) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请先添加一个处方\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\tgrid2.load({\n");
      out.write("\t\t\tgroupId: e.node.id\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\twin1.setTitle(\"<span style='font-weight:bold;'>　组套详情</span>\");\n");
      out.write("\t\twin1.show();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 通过组套添加\n");
      out.write("\tfunction addGroupOrders() {\n");
      out.write("\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\tvar rows = grid2.getSelecteds();\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t        type: \"post\",  \n");
      out.write("\t        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/groupSelectOrder.do\",\n");
      out.write("\t        data: {groupLists: mini.encode(rows), order: mini.encode(activeTab.order)},\n");
      out.write("\t        async: false,  \n");
      out.write("\t        success: function(r) {  \n");
      out.write("\t\t\t\tif(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\tsetGroupNo(r.orderList);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// 添加皮试液\n");
      out.write("\t\t\t\t\tvar st = \"\";\n");
      out.write("\t            \tfor(var i = 0 ; i < r.stOrderList.length; i++) {\n");
      out.write("            \t\t\tst += \"【\" + r.stOrderList[i].itemName + \"】 \";\n");
      out.write("            \t\t}\n");
      out.write("\t            \t\n");
      out.write("\t            \tif(st != \"\") {\n");
      out.write("\t            \t\tmini.confirm(\"是否添加皮试液？\",\"提示\", function (action) {\n");
      out.write("           \t\t\t\t\tif (action == \"ok\") {\n");
      out.write("           \t\t\t\t\t\tsetGroupNo(r.stOrderList);\n");
      out.write("          \t            \t\ttop.mini.alert(\"已经添加皮试液\" + st + \"到医嘱中！\");\n");
      out.write("           \t\t\t\t\t} \n");
      out.write("\t             \t\t});\n");
      out.write("\t            \t}\n");
      out.write("\t\t\t\t\tsetTotCost();\n");
      out.write("\t\t\t\t\twin1.hide();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == 0) {\n");
      out.write("\t\t\t\t\ttop.mini.alert(r.message);\n");
      out.write("\t\t\t\t\tsetGroupNo(r.orderList);\n");
      out.write("\t\t\t\t\tsetTotCost();\n");
      out.write("\t\t\t\t\twin1.hide();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t        }\n");
      out.write("\t    }); \n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 根据combId改subcombNo 和 sortNo\n");
      out.write("\tfunction setGroupNo(orders) {\n");
      out.write("\t\tvar resultOrders = [];\n");
      out.write("\t\tfor(var i = 0; i < orders.length; i++) {\n");
      out.write("\t\t\tvar order = orders[i];\n");
      out.write("\t\t\tif(i == 0) {\n");
      out.write("\t\t\t\torder.subcombNo = getMaxSubcombNo();\n");
      out.write("\t\t\t\torder.sortNo = order.subcombNo + \"01\";\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tif (orders[i].combId == orders[i-1].combId) {\n");
      out.write("\t\t\t\t\torder.subcombNo = resultOrders[resultOrders.length-1].subcombNo;\n");
      out.write("\t\t\t\t\torder.sortNo = parseInt(resultOrders[resultOrders.length-1].sortNo) + 1;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\torder.subcombNo = getMaxSubcombNo();\n");
      out.write("\t\t\t\t\torder.sortNo = order.subcombNo + \"01\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tresultOrders.push(order);\n");
      out.write("\t\t\tgrid.addRow(order);\n");
      out.write("\t\t}\t\t\n");
      out.write("\t\tcomboRender();\n");
      out.write("\t\tremoveBadOrder();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 通过组套添加医嘱设置组号和顺序号\n");
      out.write("\tfunction groupSort(order0, order1) {\n");
      out.write("\t\tif(order1.combId == order0.combId) {\n");
      out.write("\t\t\torder1.subcombNo = order0.subcombNo;\n");
      out.write("\t\t\torder1.sortNo = \"\"; \n");
      out.write("\t\t} else {\n");
      out.write("\t\t\torder1.subcombNo = getMaxSubcombNo();\n");
      out.write("    \t\torder1.sortNo = order1.subcombNo + \"01\";\n");
      out.write("\t\t}\n");
      out.write("\t\treturn order1;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 渲染组套列表\n");
      out.write("\tfunction groupDrawCell(e) {\n");
      out.write("\t\tif (e.column.field == \"qty\") {\n");
      out.write("\t\t\te.cellHtml = \"<span>\"+e.row.qty + e.row.qtyUnit+\"</span>\";\n");
      out.write("\t\t} else if(e.column.field == \"emergencyFlag\") {\n");
      out.write("\t\t\tif(e.value == \"1\") {\n");
      out.write("\t\t\t\te.cellHtml = \"急\";\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\te.cellHtml = \"普通\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 移除无效医嘱\n");
      out.write("\tfunction removeBadOrder() {\n");
      out.write("\t\tvar list = grid.getList();\n");
      out.write("\t\tfor(var i = 0; i < list.length; i++) {\n");
      out.write("\t\t\tif(!list[i].itemId) {\n");
      out.write("\t\t\t\tgrid.removeRow(list[i]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t} \n");
      out.write("\t\n");
      out.write("\t// 刷新当前这条医嘱\n");
      out.write("\tfunction refreshOrder() {\n");
      out.write("\t\tremoveBadOrder();\n");
      out.write("\t\taddRow();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 节点编辑完成后事件\n");
      out.write("\tfunction onendedit(e){\n");
      out.write("\t\tvar url,node = \"\";\n");
      out.write("\t\tif (e.node.prop==\"group\") {\n");
      out.write("\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/curd.do\";\n");
      out.write("\t\t\tnode = {groupId:e.node.id,\n");
      out.write("\t\t\t\t\tgroupName: e.node.text,\n");
      out.write("\t\t\t\t\tgroupType: e.node.kind,\n");
      out.write("\t\t\t\t\t_state: \"modified\",\n");
      out.write("\t\t\t\t\tsysType: 'O',\n");
      out.write("\t\t\t\t\torderClassifyType: \"O\"\n");
      out.write("\t\t\t};\n");
      out.write("\t\t}\n");
      out.write("\t\n");
      out.write("\t\tif (e.node.prop==\"classify\") {\n");
      out.write("\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/curd.do\";\n");
      out.write("\t\t\tnode = {classifyId: e.node.id,\n");
      out.write("\t\t\t\t\tclassifyName: e.node.text,\n");
      out.write("\t\t\t\t\tgroupKind: e.node.kind,\n");
      out.write("\t\t\t\t\t_state: \"modified\",\n");
      out.write("\t\t\t\t\tsysType: 'O',\n");
      out.write("\t\t\t\t\torderClassifyType: \"O\"\n");
      out.write("\t\t\t};\n");
      out.write("\t\t}\n");
      out.write("\t\tvar data = mini.encode(node);\n");
      out.write("\t\t$.post(url,{data:data },function(r){\n");
      out.write("\t\t\tif(r==\"ok\"){\n");
      out.write("\t\t\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/getTree.do?orderClassifyType=O&sysType=O\");\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 刷新节点\n");
      out.write("\tfunction onLoad() {\n");
      out.write("\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/getTree.do?orderClassifyType=O&sysType=O\");\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 鼠标右键菜单\n");
      out.write("\tfunction onBeforeOpen(e) {\n");
      out.write("\t    var menu = e.sender;\n");
      out.write("\t    e.htmlEvent.preventDefault();\n");
      out.write("\t    e.cancel = false;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t//tree菜单右键前事件\n");
      out.write("\tfunction treeMenuBeforeOpen (e) {\n");
      out.write("\t    var menu = e.sender;\n");
      out.write("\t    var selectedNode = tree.getSelectedNode();\n");
      out.write("\t    if (selectedNode) {\n");
      out.write("\t        //阻止浏览器默认右键菜单\n");
      out.write("\t        e.htmlEvent.preventDefault();\n");
      out.write("\t    } else {\n");
      out.write("\t    \te.cancel = true;\n");
      out.write("\t    \treturn;\n");
      out.write("\t    }\n");
      out.write("\t    var reloadMenu = mini.getbyName(\"reload\",menu);\n");
      out.write("\t    var doctMenu = mini.getbyName(\"copyDoct\",menu);\n");
      out.write("\t    var deptMenu = mini.getbyName(\"copyDept\",menu);\n");
      out.write("\t    var hosMenu = mini.getbyName(\"copyHos\",menu);\n");
      out.write("    \tvar addMenu = mini.getbyName(\"add\",menu);\n");
      out.write("    \tvar editMenu = mini.getbyName(\"edit\",menu);\n");
      out.write("    \tvar removeMenu = mini.getbyName(\"remove\",menu);\n");
      out.write("    \treloadMenu.show();\n");
      out.write("    \tif (selectedNode._level == 0 && selectedNode.groupKind) {\n");
      out.write("    \t\tdoctMenu.hide();\n");
      out.write("    \t\tdeptMenu.hide();\n");
      out.write("    \t\thosMenu.hide();\n");
      out.write("    \t\taddMenu.show();\n");
      out.write("    \t\teditMenu.hide();\n");
      out.write("    \t\tremoveMenu.hide();\n");
      out.write("    \t} else if (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\n");
      out.write("    \t\tif (selectedNode.children && selectedNode.children.length > 0) {\n");
      out.write("    \t\t\tdoctMenu.hide();\n");
      out.write("        \t\tdeptMenu.hide();\n");
      out.write("        \t\thosMenu.hide();\n");
      out.write("        \t\taddMenu.show();\n");
      out.write("        \t\teditMenu.show();\n");
      out.write("        \t\tremoveMenu.hide();\n");
      out.write("    \t\t} else {\n");
      out.write("    \t\t\tdoctMenu.hide();\n");
      out.write("        \t\tdeptMenu.hide();\n");
      out.write("        \t\thosMenu.hide();\n");
      out.write("        \t\taddMenu.show();\n");
      out.write("        \t\teditMenu.show();\n");
      out.write("        \t\tremoveMenu.show();\n");
      out.write("    \t\t}\n");
      out.write("    \t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\n");
      out.write("    \t\tif (selectedNode.groupType == \"Hos\") {\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Dept\")) {\n");
      out.write("    \t    \t\tdeptMenu.show();\n");
      out.write("    \t\t\t} else {\n");
      out.write("    \t\t\t\tdeptMenu.hide();\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t\tdoctMenu.show();\n");
      out.write("    \t\t\thosMenu.hide();\n");
      out.write("\t    \t\taddMenu.hide();\n");
      out.write("    \t\t} else if (selectedNode.groupType == \"Dept\") {\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Hos\")) {\n");
      out.write("    \t\t\t\thosMenu.show();\n");
      out.write("    \t\t\t} else {\n");
      out.write("    \t\t\t\thosMenu.hide();\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t\tdoctMenu.show();\n");
      out.write("        \t\tdeptMenu.hide();\n");
      out.write("    \t\t} else {\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Hos\")) {\n");
      out.write("    \t\t\t\thosMenu.show();\n");
      out.write("    \t\t\t} else {\n");
      out.write("    \t\t\t\thosMenu.hide();\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Dept\")) {\n");
      out.write("    \t    \t\tdeptMenu.show();\n");
      out.write("    \t\t\t} else {\n");
      out.write("    \t\t\t\tdeptMenu.hide();\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t\tdoctMenu.hide();\n");
      out.write("    \t\t}\n");
      out.write("    \t\taddMenu.hide();\n");
      out.write("    \t\teditMenu.show();\n");
      out.write("    \t\tremoveMenu.show();\n");
      out.write("    \t} else {\n");
      out.write("    \t\tdoctMenu.hide();\n");
      out.write("    \t\tdeptMenu.hide();\n");
      out.write("    \t\thosMenu.hide();\n");
      out.write("    \t\taddMenu.hide();\n");
      out.write("    \t\teditMenu.hide();\n");
      out.write("    \t\tremoveMenu.hide();\n");
      out.write("    \t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 草药开立(新)\n");
      out.write("\tfunction recipeHROrder() {\n");
      out.write("\t\tvar changedOrders = getChangedRow();\n");
      out.write("\t\tif(changedOrders.length > 0 ) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"处方已更改，请先保存！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\topenHrWindow();\n");
      out.write("\t\t}\n");
      out.write("\t} \n");
      out.write("\t\n");
      out.write("\t// 打开草药界面\n");
      out.write("\tfunction openHrWindow() {\n");
      out.write("\t\tif(orderFeeSure()) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"该处方在您操作期间已经收费，请新开处方进行操作！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t};\n");
      out.write("\t\tvar order = grid.getSelected();\n");
      out.write("\t\tvar hrFlag = true; \n");
      out.write("\t\tif(!order) { // 如果没有选中或者选中的不是草药\n");
      out.write("\t\t\torder = tab.getActiveTab().order; \n");
      out.write("\t\t\tvar maxSubcombNo = getMaxSubcombNo();\n");
      out.write("\t\t\torder.billId = getBillId();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\torder.subcombNo = maxSubcombNo;\n");
      out.write("\t\t\torder.sortNo = maxSubcombNo + \"01\";\n");
      out.write("\t\t} else if(order.itemSysType != \"HR\") {\n");
      out.write("\t\t\torder = tab.getActiveTab().order; \n");
      out.write("\t\t\tvar maxSubcombNo = getMaxSubcombNo();\n");
      out.write("\t\t\torder.billId = getBillId();\n");
      out.write("\t\t\torder.subcombNo = maxSubcombNo ;\n");
      out.write("\t\t\torder.sortNo = maxSubcombNo + \"01\";\n");
      out.write("\t\t} else if(order.itemSysType == \"HR\") {\n");
      out.write("\t\t\thrFlag = false;\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t           type: \"post\", \n");
      out.write("\t\t       url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/openHerbOrder.do\", \n");
      out.write("\t\t       cache : false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data: {data: mini.encode(order),\n");
      out.write("\t\t    \t\t  rows: mini.encode(getRows()),\n");
      out.write("\t\t    \t\t  hrFlag: hrFlag\n");
      out.write("\t\t       },\n");
      out.write("\t\t\t   success: function(r) {\n");
      out.write("\t\t\t\t\tmini.open({\n");
      out.write("\t\t\t\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/opHrList.do?registerId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&orderClassifyType=S\",\n");
      out.write("\t\t\t\t\t\ttitle: \"<span style='font-weight:bold;'>中草药列表</span>\",\n");
      out.write("\t\t\t\t\t\twidth: \"1100\",\n");
      out.write("\t\t\t\t\t\theight: \"500\",\n");
      out.write("\t\t\t\t\t\tonLoad: function() {\n");
      out.write("\t\t\t\t\t\t\tvar iframe = this.getIFrameEl();\n");
      out.write("\t\t\t\t\t\t\tiframe.contentWindow.setData(r);\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\tondestroy: function(r) {\n");
      out.write("\t\t\t\t\t\t\tshowOrders();\n");
      out.write("\t\t\t\t\t\t\t//保存草药成功后刷新患者总金额\n");
      out.write("\t\t\t\t\t\t\tparent.reflashTotCost();\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t   }\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 诊出\n");
      out.write("\tfunction updateSeenInfo(e) {\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/opExpRegister/updateSeenInfo.do\";\n");
      out.write("\t\t$.post(url, {\n");
      out.write("\t\t\t\tregisterId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\t\tisSeen : true\n");
      out.write("\t\t}, function(r) {\n");
      out.write("\t\t\tif (parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"诊出成功\", state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\ttop.tabs.setActiveIndex(0);\n");
      out.write("\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 5000});\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\ttop.mini.error(r.message);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 右键组合医嘱\n");
      out.write("\tfunction groupOrder() {\n");
      out.write("\t\tvar rows = grid.getSelecteds(); \n");
      out.write("\t\tgroupByMouse(rows);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 右键组合医嘱\n");
      out.write("\tfunction groupByMouse(rows) {\n");
      out.write("\t\tif(rows.length < 2) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请先选择多条医嘱！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tvar selectGoupNos = [];\n");
      out.write("\t\tvar flag = true; \n");
      out.write("\t\tfor (var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tselectGoupNos.push(rows[i].subcombNo);\n");
      out.write("\t\t\tif(rows[0].seeNo != rows[i].seeNo) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"处方号不相同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(rows[i].orderState != \"SV\" && rows[i].orderState != \"New\") {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"医嘱已经收费，不能组合\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].itemSysType != rows[i].itemSysType) {\n");
      out.write("\t\t\t\tvar text2 = \"WM|CM\";\n");
      out.write("\t\t\t\tif (text2.indexOf(rows[0].itemSysType) == -1 || text2.indexOf(rows[i].itemSysType) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: \"系统类别不相同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(rows[0].freqId != rows[i].freqId || rows[0].usageId != rows[i].usageId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"频次或用法不相同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].execDeptId != rows[i].execDeptId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"执行科室不相同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].checkPointId != rows[i].checkPointId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"部位不同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].sampleId != rows[i].sampleId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"样本不同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].useDays != rows[i].useDays) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"天数或付数不同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].injectNumber != rows[i].injectNumber) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"院注次数不同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[i].itemSysType==\"UL\") {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"不允许手动组合检查检验医嘱，系统将会根据合管规则自动组合!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tsureGroup(selectGoupNos);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 组合前改变频次和用法\n");
      out.write("\tfunction syschGroupPro(targetSubCombId) {\n");
      out.write("\t\tvar row = grid.findRow(function(current) {\n");
      out.write("\t\t\tif(current.subcombNo == targetSubCombId && current.orderId != selectRow().orderId && current.showFlag == \"1\") return true;\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\tif(!!row) {\n");
      out.write("\t\t\tgrid.updateRow(selectRow(), {\n");
      out.write("\t\t\t\tfreqId: row.freqId,\n");
      out.write("\t\t\t\tfreqDays: row.freqDays,\n");
      out.write("\t\t\t\tusageId: row.usageId,\n");
      out.write("\t\t\t\texecTimes: row.execTimes,\n");
      out.write("\t\t\t\tfreqCycleType: row.freqCycleType,\n");
      out.write("\t\t\t\tusageName: row.usageName,\n");
      out.write("\t\t\t\tinjectNumber: row.injectNumber\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\tgetQty(selectRow());\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 实际组合\n");
      out.write("\tfunction sureGroup(selectGoupNos) {\n");
      out.write("\t\t//获取combId\n");
      out.write("\t    var url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getComboNo.do\";\n");
      out.write("\t\tvar combId;\n");
      out.write("\t\t$.ajax({  \n");
      out.write("\t        type : \"post\",  \n");
      out.write("\t        url : url,  \n");
      out.write("\t        async : false,  \n");
      out.write("\t        success : function(data){  \n");
      out.write("\t            data = eval(\"(\" + data + \")\");  \n");
      out.write("\t            combId = data;\n");
      out.write("\t        }\n");
      out.write("\t    }); \n");
      out.write("\t\t\n");
      out.write("\t\t// 将选中的医嘱更改成相同的组号\n");
      out.write("\t\tif (combId) {\n");
      out.write("\t\t\tvar gridList = getRecipeOrders();\n");
      out.write("\t\t\tvar updateList = [];\n");
      out.write("\t\t\tfor (var i = 0; i < gridList.length; i++) {\n");
      out.write("\t\t\t\tif (selectGoupNos.indexOf(gridList[i].subcombNo) != -1) {\n");
      out.write("\t\t\t\t\tupdateList.push(gridList[i]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tfor (var i = 0; i < updateList.length; i++) {\n");
      out.write("\t\t\t\tvar num = i + 1;\n");
      out.write("\t\t\t\tvar sortNo = 0;\n");
      out.write("\t\t\t\tif (num > 9) {\n");
      out.write("\t\t\t\t\tsortNo = updateList[0].subcombNo + \"\" + num;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tsortNo = updateList[0].subcombNo + \"0\" + num;\n");
      out.write("\t\t\t\t} \n");
      out.write("\t\t\t\tgrid.updateRow(updateList[i], {\n");
      out.write("\t\t\t\t\tsubcombNo: updateList[0].subcombNo,\n");
      out.write("\t\t\t\t\tsortNo: sortNo,\n");
      out.write("\t\t\t\t\tcombId: combId\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\ttop.mini.error(\"获取combId失败!\");\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tsetTotCost();\n");
      out.write("\t\tsortGrid();\n");
      out.write("\t\tcomboRender();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 键盘组合医嘱\n");
      out.write("\tfunction group(rows) {\n");
      out.write("\t\tif(rows.length < 2) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请先选择多条医嘱！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tvar selectGoupNos = [];\n");
      out.write("\t\tvar flag = true; \n");
      out.write("\t\t\n");
      out.write("\t\t/*\n");
      out.write("\t\t\tif (qaulity == 3) {\n");
      out.write("\t\t\t\treturn \"精二\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\tif (qaulity == 2) {\n");
      out.write("\t\t\t\treturn \"毒麻精一\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (qaulity == 1) {\n");
      out.write("\t\t\t\treturn \"普通\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t*/\n");
      out.write("\t\t// ① 毒药和麻药精一类药物不可组合使用 ② 毒药和精二不可组合使用 ③ 麻药和精二不可组合使用\n");
      out.write("\t\tvar qualitys = [];\n");
      out.write("\t\tfor (var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tqualitys.push(rows[i].drugQuality);\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif(qualitys.indexOf(\"2\") > -1 && (qualitys.indexOf(\"1\") > -1 || qualitys.indexOf(\"3\") > -1)) {\n");
      out.write("\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\ttop.mini.showTips({content: \"毒药和麻药精一类药物不可组合使用!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn ;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(qualitys.indexOf(\"2\") > -1 && qualitys.indexOf(\"4\") > -1 ) {\n");
      out.write("\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\ttop.mini.showTips({content: \"毒药和精二不可组合使用!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(qualitys.indexOf(\"1\") > -1 && qualitys.indexOf(\"4\") > -1 ) {\n");
      out.write("\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\ttop.mini.showTips({content: \"麻药和精二不可组合使用\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(qualitys.indexOf(\"3\") > -1 && qualitys.indexOf(\"4\") > -1 ) {\n");
      out.write("\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\ttop.mini.showTips({content: \"精一和精二不可组合使用\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfor (var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tselectGoupNos.push(rows[i].subcombNo);\n");
      out.write("\t\t\tif(rows[0].seeNo != rows[i].seeNo) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"处方号不相同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(rows[i].orderState != \"SV\" && rows[i].orderState != \"New\") {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"医嘱已经收费，不能组合\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif (rows[0].itemSysType != rows[i].itemSysType) {\n");
      out.write("\t\t\t\tvar text2 = \"WM|CM\";\n");
      out.write("\t\t\t\tif (text2.indexOf(rows[0].itemSysType) == -1 || text2.indexOf(rows[i].itemSysType) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: \"系统类别不相同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].execDeptId != rows[i].execDeptId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"执行科室不相同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif (rows[0].checkPointId != rows[i].checkPointId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"部位不同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif (rows[0].sampleId != rows[i].sampleId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"样本不同!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value\t});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[i].itemSysType==\"UL\") {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"不允许手动组合检查检验医嘱，系统将会根据合管规则自动组合!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tgrid.updateRow(selectRow(), {subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\t\tgrid.accept();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].useDays != rows[i].useDays) {\n");
      out.write("\t\t\t\tsyschGroupPro(selectRow().subcombNo);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].freqDays != rows[i].freqDays) {\n");
      out.write("\t\t\t\tsyschGroupPro(selectRow().subcombNo);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (rows[0].injectNumber != rows[i].injectNumber) {\n");
      out.write("\t\t\t\tsyschGroupPro(selectRow().subcombNo);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(rows[0].freqId != rows[i].freqId || rows[0].usageId != rows[i].usageId) {\n");
      out.write("\t\t\t\tsyschGroupPro(selectRow().subcombNo);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tsureGroup(selectGoupNos);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 取消组合医嘱\n");
      out.write("\tfunction canelComboOrder() { \n");
      out.write("\t\tvar updateList = grid.getSelecteds();\n");
      out.write("\t\tfor (var i = 0; i < updateList.length-1; i++){\n");
      out.write("\t\t\tif (updateList[i].subcombNo != updateList[i+1].subcombNo){\n");
      out.write("\t\t\t\ttop.mini.alert(\"【\" + updateList[i].itemName + \"与\" + updateList[i+1].itemName + \"】不是组合医嘱 !\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// 根据条件查询同一组行对象\n");
      out.write("\t\tupdateList = grid.findRows(function(row){\n");
      out.write("\t\t    if(row.subcombNo == updateList[0].subcombNo && row.seeNo == updateList[0].seeNo) \n");
      out.write("\t\t    \treturn true;\n");
      out.write("\t\t});\n");
      out.write("\t\tvar maxRowsGroupNo = updateList[updateList.length-1].subcombNo;\n");
      out.write("\t\t\n");
      out.write("\t\t// 根据条件查询非本组行对象\n");
      out.write("\t\tvar addList = grid.findRows(function(row){\n");
      out.write("\t\t\tif(row.subcombNo != updateList[0].subcombNo && parseInt(row.subcombNo) > parseInt(maxRowsGroupNo) && row.seeNo == updateList[0].seeNo) {\n");
      out.write("\t\t    \treturn true;\n");
      out.write("\t\t    }\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\tvar subcombNo;\n");
      out.write("\t\tvar combId; \n");
      out.write("\t\tvar sortNo;\n");
      out.write("\t\tfor (var i = 1; i <= updateList.length; i++) {\n");
      out.write("\t\t\tif (i == 1) {\n");
      out.write("\t\t\t\tgrid.updateRow(updateList[0], {\n");
      out.write("\t\t\t\t\tsubcombNo : updateList[0].subcombNo,\n");
      out.write("\t\t\t\t\tsortNo : updateList[0].sortNo,\n");
      out.write("\t\t\t\t\tcombId : getComboNo()\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tsubcombNo = parseInt(updateList[0].subcombNo) + (i-1);\n");
      out.write("\t\t\t\tsortNo = subcombNo + \"01\";\n");
      out.write("\t\t\t\tgrid.updateRow(updateList[i-1], {\n");
      out.write("\t\t\t\t\tsubcombNo : subcombNo,\n");
      out.write("\t\t\t\t\tsortNo : sortNo,\n");
      out.write("\t\t\t\t\tcombId : getComboNo()\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar addNum = updateList.length - 1 ; \n");
      out.write("\t\tfor (var i = 0; i < addList.length; i++) {\n");
      out.write("\t\t\tsubcombNo = parseInt(addList[i].subcombNo) + addNum;\n");
      out.write("\t\t\tsortNo = addList[i].sortNo;\n");
      out.write("\t\t\tvar leftNum = parseInt(sortNo) % 100; \n");
      out.write("\t\t\tsortNo = subcombNo + \"0\" + leftNum;\n");
      out.write("\t\t\tgrid.updateRow(addList[i], {\n");
      out.write("\t\t\t\tsubcombNo : subcombNo,\n");
      out.write("\t\t\t\tsortNo : sortNo\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\tchangeQtyCost();\n");
      out.write("\t\tsortGrid();\n");
      out.write("\t\tcomboRender();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 医嘱排序\n");
      out.write("\tfunction sortGrid () {\n");
      out.write("\t\t var list = grid.getList();\n");
      out.write("\t\t list.sort(function (a,b) {\n");
      out.write("\t\t\tif (parseInt(a.subcombNo) > parseInt(b.subcombNo)) {\n");
      out.write("\t\t\t\treturn 1;\n");
      out.write("\t\t\t} else if (parseInt(a.subcombNo) < parseInt(b.subcombNo)) {\n");
      out.write("\t\t\t\treturn -1;\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tif (parseInt(a.sortNo) > parseInt(b.sortNo)) {\n");
      out.write("\t\t\t\t\treturn 1;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\treturn -1;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}); \n");
      out.write("\t\t grid.clearRows(); \n");
      out.write("\t\t grid.setData(list); \t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取组合号\n");
      out.write("\tfunction getComboNo () {\n");
      out.write("\t\tvar comboNo = \"\";\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getComboNo.do\",\n");
      out.write("            data: {},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("            \tcomboNo = r;\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t\treturn comboNo;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取处方号\n");
      out.write("\tfunction getBillId() {\n");
      out.write("\t\tvar comboNo = \"\";\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getBillId.do\",\n");
      out.write("            data: {},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("            \tbillId = r;\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t\treturn billId;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 对标题部分做计算操作\n");
      out.write("\tfunction calcTotCost(seeNo , rows) {\n");
      out.write("\t\t var totalCost = 0;\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(rows[i].seeNo == seeNo) {\n");
      out.write("\t\t\t\ttotalCost += rows[i].totCost;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t return totalCost.toFixed(2); \n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 弹出右键菜单\n");
      out.write("\tfunction onMenuOpen(e) {\n");
      out.write("\t\tvar menu = e.sender;\n");
      out.write("\t\te.htmlEvent.preventDefault();\n");
      out.write("\t\te.cancel = false;\n");
      out.write("\t\treturn;\n");
      out.write("\t\tvar row = grid.getSelected();\n");
      out.write("\t\tvar rowIndex = grid.indexOf(row);\n");
      out.write("\t\tif (!row || rowIndex == 0) {\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t\te.htmlEvent.preventDefault();\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 根据系统分类查找项目信息\n");
      out.write("\tfunction onValueChanged4(e) {\n");
      out.write("\t\tif(e.value == \"HR\") {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"不允许在此界面开立草药医嘱！请点击【草药】按钮开立草药!\", state: \"danger\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\tgrid.updateRow(grid.getSelected(), {itemSysType : \"\"});\n");
      out.write("\t\t\te.sender.setText(\"\");\n");
      out.write("\t\t\te.sender.setValue(\"\");\n");
      out.write("\t\t\tgrid.beginEditCell(selectRow(), \"itemSysType\");\n");
      out.write("\t\t\treturn ;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 修改药品的查询条件， 类别\n");
      out.write("\tfunction changeSysType(type) {\n");
      out.write("\t\t\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 单元格提交事件\n");
      out.write("\tfunction cellcommitedit(e) {\n");
      out.write("\t\tif(e.field == \"freqDays\" || e.field == \"qty\") {\n");
      out.write("\t\t\tif(!/^\\d+$/.test(e.value)) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"请输入数值！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t};\n");
      out.write("\t\t}; \n");
      out.write("\t\tif(e.field == \"ordDosage\") {\n");
      out.write("\t\t\tif(!/^\\d+\\.?(\\d+)?$/.test(e.value)) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"请输入一个整数或小数！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t}; \n");
      out.write("\t\tif(e.field == \"itemName\") {\n");
      out.write("\t\t\tif(!e.selected) {\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif(e.value == \"\") {\n");
      out.write("\t\t\t\tgrid.updateRow(selectRow(), {itemSysType: \"\", itemId: \"\"});\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 单元格编辑前事件\n");
      out.write("\tfunction oncellbeginedit(e) {\n");
      out.write("\t\tvar editing = grid.isEditing();\n");
      out.write("\t\tvar row = e.row; \n");
      out.write("\t\tvar field = e.field;\n");
      out.write("\t\tif (row.orderState == 'FE' || row.orderState == 'DC') {\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// 如果一行存于编辑状态，那么其他行锁定不可编辑\n");
      out.write("\t\tif(field == \"checkColumn\") {\n");
      out.write("\t\t\te.cancel = true; \n");
      out.write("\t\t\treturn ; \n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif(e.field == \"qtyUnit\") { \n");
      out.write("\t\t\tif (e.row.itemSysparentType == \"Drug\") {\n");
      out.write("\t\t\t\t$.ajax({  \n");
      out.write("\t\t\t        type: \"post\",  \n");
      out.write("\t\t\t        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pharmacy/common/comDrug/getUnit.do\",\n");
      out.write("\t\t\t        data: {itemId: e.row.itemId},\n");
      out.write("\t\t\t        async: false,  \n");
      out.write("\t\t\t        success: function(r){  \n");
      out.write("\t\t\t\t\t\te.editor.setData(r);\n");
      out.write("\t\t\t        }\n");
      out.write("\t\t\t    });\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\tgrid.setCurrentCell([e.row,\"execDeptId\"]);\n");
      out.write("\t\t\t\tgrid.beginEditCell();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif(field == \"groupNoFlag\") {\n");
      out.write("\t\t\tif(e.row.itemSysType == \"UL\" || e.row.itemSysType == \"UC\") {\n");
      out.write("\t\t\t\tfocusCell(\"execDeptId\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif(e.row.itemSysType == \"UM\" || e.row.itemSysType == \"UO\" || e.row.itemSysType == \"MC\" || e.row.itemSysType == \"UN\"|| e.row.itemSysType == \"MF\"|| e.row.itemSysType == \"U\") {\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\tgrid.setCurrentCell([e.row,\"freqId\"]);\n");
      out.write("\t\t\t\tgrid.beginEditCell();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\t \n");
      out.write("\t\tif(field == \"ordDosageUnit\") {\n");
      out.write("\t\t\tif(e.row.itemSysType == \"UZ\") {\n");
      out.write("\t\t\t\tfocusCell(\"freqId\");\n");
      out.write("\t\t\t};\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif(field == \"itemName\") {\n");
      out.write("\t\t\tif(getSameGroup(e.row).length > 1) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"请先取消组合再编辑\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(field == \"freqId\" || field == \"itemName\" || field == \"ordDosage\" || field == \"usageId\" || field==\"freqDays\" || field == \"qty\") {\n");
      out.write("\t\t\tgrid.deselectAll();\n");
      out.write("\t\t\tgrid.setSelected(e.row);\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif (field == \"subcombNo\") {\n");
      out.write("\t\t\tgrid.deselectAll();\n");
      out.write("\t\t\tgrid.setSelected(e.row);\n");
      out.write("\t\t\tresetGroupNo.setValue(e.value);\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif (field == \"ordDosage\") {\n");
      out.write("\t\t\tresetOrdDosage.setValue(e.value);\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"stockDeptId\") {\n");
      out.write("\t\t\tif (e.row.chargeFlag == 1 && e.row.itemSysparentType == \"Drug\") {\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"stockDeptId\", e.row);\n");
      out.write("\t\t\t\teditor.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getStockDeptKVs.do?distributionType=1&drugId=\" + e.row.itemId + \"&recipeDeptId=\" + e.row.recipeDeptId);\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"execDeptId\") {\n");
      out.write("\t\t\tif (e.row.chargeFlag == 1 && e.row.itemSysparentType == \"NonDrug\") {\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"execDeptId\", e.row);\n");
      out.write("\t\t\t\teditor.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getExecDept.do?nonDrugId=\" + e.row.itemId);\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif ((e.field == \"usageId\") && (row.itemSysType == \"UM\" || row.itemSysType == \"UO\"|| row.itemSysType == \"MC\"|| e.row.itemSysType == \"UN\"|| e.row.itemSysType == \"MF\"|| e.row.itemSysType == \"U\")) {\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row, \"qty\"]);\n");
      out.write("\t\t\tgrid.beginEditCell();\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif ((e.field == \"usageId\") && row.itemSysparentType == \"NonDrug\") {\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"freqDays\"]);\n");
      out.write("\t\t\tgrid.beginEditCell();\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// 系统类型\n");
      out.write("\t\tif(field == \"itemSysType\" && row.itemId) {\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t} \n");
      out.write("\t\t\n");
      out.write("\t\t// 系统类别为非药品\n");
      out.write("\t\tif((row.itemSysparentType==\"NonDrug\") && (field == \"createdTime\" || field == \"recipeDoctorId\" || field == \"ordDosage\" || field == \"ordDosageUnit\" || field == \"freqId\" || field == \"usageId\" || field == \"freqDays\" || e.field == \"qty\" || field == \"stFlag\")) {\n");
      out.write("\t\t\te.cancel = true;\n");
      out.write("\t\t}  \n");
      out.write("\t\t\n");
      out.write("\t\t // 检验 \n");
      out.write("\t\tif((row.itemSysType == \"UL\") && (field == \"itemId\")) {\n");
      out.write("\t\t\te.cancel = false; \n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t \n");
      out.write("\t\t// 草药\n");
      out.write("\t\tif((row.itemSysType == \"HR\") && (field == \"itemName\")) {\n");
      out.write("\t\t\te.cancel = true; \n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write(" \t\t// 检查\n");
      out.write("\t\tif((row.itemSysType == \"UC\") && (field == \"qty\")) {\n");
      out.write("\t\t\te.cancel = false; \n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// 材料 \n");
      out.write("\t\tif((row.itemSysType == \"UM\" || row.itemSysType == \"UO\") && (field == \"freqId\" || field == \"qty\")) {\n");
      out.write("\t\t\te.cancel = false; \n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t // 手术\n");
      out.write("\t\tif((row.itemSysType == \"UO\") && (field == \"freqId\" || field == \"qty\")) {\n");
      out.write("\t\t\te.cancel = false; \n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t} \n");
      out.write("\t\t\n");
      out.write("\t\t// 治疗 UZ\n");
      out.write("\t\tif((row.itemSysType == \"UZ\") && (field == \"ordDosage\" || field == \"freqId\" || field ==\"freqDays\" || field == \"qty\")) {\n");
      out.write("\t\t\te.cancel = false; \n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// 会诊 MC\n");
      out.write("\t\tif((row.itemSysType == \"MC\" || row.itemSysType == \"U\" || row.itemSysType == \"MF\"|| row.itemSysType == \"UN\") && (field == \"freqId\" || field == \"qty\")) {\n");
      out.write("\t\t\te.cancel = false; \n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 按名称快速查找组套(不请求后台)\n");
      out.write("\tfunction searchGroupClassify() {\n");
      out.write("\t\tvar key = mini.get(\"groupclassify-search\").getValue();\n");
      out.write("\t\tif (key == \"请输入组套分类名称\" || key == \"\") {\n");
      out.write("\t\t\ttree.clearFilter();\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tkey = key.toLowerCase();\n");
      out.write("\t\t\ttree.filter(function(node) {\n");
      out.write("\t\t\t\tvar text = node.id + node.text;\n");
      out.write("\t\t\t\tif (text.indexOf(key) != -1) {\n");
      out.write("\t\t\t\t\treturn true;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 加载完成后加载的事件\n");
      out.write("\tfunction query() {\n");
      out.write("\t\tgrid.load({registerId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 刷新\n");
      out.write("\tfunction refresh() {\n");
      out.write("\t\tvar rows = grid.getChanges();\n");
      out.write("\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\tif(rows.length > 0) {\n");
      out.write("\t\t\ttop.mini.confirm(\"该处方中有<span style='color:red;'>未保存的医嘱</span>，刷新将还原处方。<br>确定刷新?\", \"提示\", function(action) {\n");
      out.write("\t\t\t\tif(action == \"ok\") {\n");
      out.write("\t\t\t\t\tinitRecipe();\n");
      out.write("\t\t\t\t\tif(activeTab) {\n");
      out.write("\t\t\t\t\t\tvar currentTab = getTab(activeTab.id);\n");
      out.write("\t\t\t\t\t\tif(currentTab) {\n");
      out.write("\t\t\t\t\t\t\ttab.activeTab(getTab(activeTab.id));\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\tinitRecipe();\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t} \n");
      out.write("\t\t\t});\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tinitRecipe();\n");
      out.write("\t\t\tif(activeTab) {\n");
      out.write("\t\t\t\ttab.activeTab(getTab(activeTab.id));\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// billId获取tab\n");
      out.write("\tfunction getTab(billId) {\n");
      out.write("\t\tvar tabs = tab.getTabs();\n");
      out.write("\t\tfor(var i = 0; i < tabs.length; i++) {\n");
      out.write("\t\t\tif(tabs[i].id == billId) {\n");
      out.write("\t\t\t\treturn tabs[i];\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn null;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 增加一条医嘱\n");
      out.write("\tfunction addRow() {\n");
      out.write("\t\tchangeSysType();\n");
      out.write("\t\tif(!validIntact()) return;\n");
      out.write("\t\tvar groupNo = getMaxSubcombNo();\n");
      out.write("\t\tvar sortNo = groupNo + \"01\";\n");
      out.write("\t\tvar rowIndex = grid.indexOf(selectRow());\n");
      out.write("\t\tif(rowIndex == -1) {\n");
      out.write("\t\t\trowIndex = grid.getList().length;\n");
      out.write("\t\t};\n");
      out.write("\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\tif(!activeTab) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请选中一个处方\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn ; \n");
      out.write("\t\t};\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t           type: \"post\", \n");
      out.write("\t\t       url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getOrder.do\", \n");
      out.write("\t\t       cache: false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data: {groupNo: groupNo, \n");
      out.write("\t\t    \t\t  sortNo: sortNo,\n");
      out.write("\t\t    \t\t  seeNo: activeTab.order.seeNo,\n");
      out.write("\t\t    \t\t  registerId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t    \t\t  billId: activeTab.order.billId\n");
      out.write("\t\t       },\n");
      out.write("\t\t\t   success: function(r) {\n");
      out.write("\t\t\t\t\tif(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\t\tgrid.deselectAll(false);\n");
      out.write("\t\t\t\t\t\tremoveBadOrder();\n");
      out.write("\t\t\t\t\t\tvar newRow = r.order;\n");
      out.write("\t\t\t\t\t\tgrid.addRow(newRow);\n");
      out.write("\t\t\t\t\t\tgrid.setSelected(newRow);\n");
      out.write("\t\t\t\t\t\tfocusCell(\"taskName\"); \n");
      out.write("\t\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: r, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t  }\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 改变\n");
      out.write("\tfunction changeSysType() {\n");
      out.write("\t\tvar editor = grid.getCellEditor(\"taskName\", selectRow());\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getDrugList.do\";\n");
      out.write("\t\teditor.load(url);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tvar groupOrders = [];\n");
      out.write("\t// 组套添加医嘱\n");
      out.write("\tfunction groupAdd(orders) { \n");
      out.write("\t\tvar list = getRecipeOrders();\n");
      out.write("\t\tvar groupNo;\n");
      out.write("\t\tif(list.length == 1 && !list[0].itemId) {\n");
      out.write("\t\t\tgroupNo = 1;\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tgroupNo = getMaxSubcombNo();\n");
      out.write("\t\t};\n");
      out.write("\t\tfor(var i = 0; i < orders.length; i++) {\n");
      out.write("\t\t\tvar sortNo = groupNo + \"01\";\n");
      out.write("\t\t\tvar newRow = orders[i];\n");
      out.write("\t\t\tvar rowIndex = grid.indexOf(selectRow());\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t           type: \"post\", \n");
      out.write("\t\t       url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getOrder.do\", \n");
      out.write("\t\t       cache : false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data: {groupNo : groupNo, \n");
      out.write("\t\t    \t\t   sortNo : sortNo,\n");
      out.write("\t\t    \t\t   seeNo : selectRow().seeNo,\n");
      out.write("\t\t    \t\t   registerId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t    \t\t   billId : selectRow().billId\n");
      out.write("\t\t       },\n");
      out.write("\t\t\t   success: function(r) {\n");
      out.write("\t\t\t\t\tif(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/fillOrder.do\";\n");
      out.write("\t\t\t\t\t\tvar data = {itemId: newRow.itemId,\n");
      out.write("\t\t\t\t\t\t\t\t\torder: mini.encode(r.order)\n");
      out.write("\t\t\t\t\t\t\t};\n");
      out.write("\t\t\t\t\t\t$.post(url, data, function(R) {\n");
      out.write("\t\t\t\t\t\t\tif(parseInt(R.state) == -1) {\n");
      out.write("\t\t\t\t\t\t\t\ttop.mini.alert(R.message);\n");
      out.write("\t\t\t\t\t\t\t} else if(parseInt(R.state) == 1) { \n");
      out.write("\t\t\t\t\t\t\t\tgrid.addRow(R.order, rowIndex);\n");
      out.write("\t\t\t\t\t\t\t\tsortGrid();\n");
      out.write("\t\t\t\t\t\t\t};\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\tgroupNo++;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 验证已添加的行是否填写\n");
      out.write("\tfunction validIntact() {\n");
      out.write("\t\tvar changeOrders = grid.getChanges();\n");
      out.write("\t\tfor(var n = 0; n < changeOrders.length; n++) {\n");
      out.write("\t\t\tif(!changeOrders[n].itemId) {\n");
      out.write("\t\t\t\t// top.mini.showTips({content: \"已添加的数据行存在未填写的数据！！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn true;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取当前处方下的所有医嘱\n");
      out.write("\tfunction getRecipeOrders() {\n");
      out.write("\t\tvar list = grid.getList();\n");
      out.write("\t\tvar recipeOrders = [];\n");
      out.write("\t\tfor(var i = 0; i < list.length; i++) {\n");
      out.write("\t\t\tif(selectRow()) {\n");
      out.write("\t\t\t\tif(list[i].subMaterialFlag == \"0\" && list[i].itemId) {\n");
      out.write("\t\t\t\t\trecipeOrders.push(list[i]);\n");
      out.write("\t\t\t\t};\n");
      out.write("\t\t\t} \n");
      out.write("\t\t}\n");
      out.write("\t\treturn recipeOrders;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取同组\n");
      out.write("\tfunction getSameGroup(row) {\n");
      out.write("\t\tvar list = grid.getList();\n");
      out.write("\t\tvar combOrders = [];\n");
      out.write("\t\tfor(var i = 0; i < list.length; i++) {\n");
      out.write("\t\t\tif(list[i].combId == row.combId && list[i].subMaterialFlag == \"0\" && list[i].itemId) {\n");
      out.write("\t\t\t\tcombOrders.push(list[i]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\treturn combOrders; \n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取辅材\n");
      out.write("\tfunction getSubOrders() {\n");
      out.write("\t\tvar list = grid.getList();\n");
      out.write("\t\tvar subOrders = [];\n");
      out.write("\t\tfor(var i = 0; i < list.length; i++) {\n");
      out.write("\t\t\tif(selectRow()) {\n");
      out.write("\t\t\t\tif(list[i].combId == selectRow().combId && parseInt(list[i].subMaterialFlag) == 1 && parseInt(list[i].mainItemFlag) == 0) {\n");
      out.write("\t\t\t\t\tsubOrders.push(list[i]);\n");
      out.write("\t\t\t\t};\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"选中了多条医嘱！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\t};\n");
      out.write("\t\t};\n");
      out.write("\t\treturn subOrders; \n");
      out.write("\t} \n");
      out.write("\t\n");
      out.write("\t// 获取当前行\n");
      out.write("\tfunction selectRow() {\n");
      out.write("\t\tvar rows = grid.getSelecteds();\n");
      out.write("\t\tif(rows.length == 1) {\n");
      out.write("\t\t\treturn rows[0];\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tvar rows = grid.getList();\n");
      out.write("\t\t\tif(rows.length > 0) {\n");
      out.write("\t\t\t\treturn rows[0];\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\t// top.mini.showTips({content: \"页面没有医嘱！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\t// 获取改变的\n");
      out.write("\tfunction getChangedRow() {\n");
      out.write("\t\tvar rows = grid.getChanges();\n");
      out.write("\t\tvar changedRows = [];\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(rows[i].itemId) {\n");
      out.write("\t\t\t\tchangedRows.push(rows[i]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn changedRows;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取当前grid所有行\n");
      out.write("\tfunction getRows() {\n");
      out.write("\t\treturn grid.getList().length > 0 ? grid.getList(): [];\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取选中\n");
      out.write("\tfunction getSelectedRows() {\n");
      out.write("\t\tvar rows = grid.getSelecteds();\n");
      out.write("\t\tvar selectRows = [];\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(rows[i].subMaterialFlag == \"0\") {\n");
      out.write("\t\t\t\tselectRows.push(rows[i]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn selectRows;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 判断前端是否已经收费  bbb\n");
      out.write("\tfunction orderFeeSure() {\n");
      out.write("\t\tvar rows = getRecipeOrders();\n");
      out.write("\t\tif(rows.length > 0) {\n");
      out.write("\t\t\tif(rows[0].orderState == \"FE\") {\n");
      out.write("\t\t\t\treturn true;\n");
      out.write("\t\t\t} \n");
      out.write("\t\t} else {\n");
      out.write("\t\t\treturn false; \n");
      out.write("\t\t}\n");
      out.write("\t\t// 后端判断处方是否已经收费\n");
      out.write("\t \t$.ajax({ \n");
      out.write("           type: \"post\", \n");
      out.write("\t       url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/orderFeeSure.do\", \n");
      out.write("\t       cache : false, \n");
      out.write("\t       async: false,\n");
      out.write("\t       data : {seeNo : rows[0].seeNo,\n");
      out.write("\t    \t\t   registerId: rows[0].registerId   \n");
      out.write("\t       },\n");
      out.write("\t       dataType: \"text\",\n");
      out.write("\t\t   success: function(r){ \n");
      out.write("\t\t\t\tif(r == \"true\") {\n");
      out.write("\t\t\t\t\treturn true;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t} \n");
      out.write("\t\t   } \n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取当前处方下最大组号\n");
      out.write("\tfunction getMaxSubcombNo() {\n");
      out.write("\t\tvar maxSubcombNo = 1;\n");
      out.write("\t\tfor(var i = 0; i < getRows().length; i++) {\n");
      out.write("\t\t\tvar num = parseInt(getRows()[i].subcombNo);\n");
      out.write("\t\t\tif(maxSubcombNo < num) {\n");
      out.write("\t\t\t\tmaxSubcombNo = num;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn maxSubcombNo + 1;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 新增处方\n");
      out.write("\tfunction addNewRecipe() {\n");
      out.write("\t\tif(!checkRecipe())return ;\n");
      out.write("\t\tgrid.deselectAll(true);\n");
      out.write("// \t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/addNewRecipe.do\";\n");
      out.write("\t\tvar groupNo = getMaxSubcombNo();\n");
      out.write("\t\tvar sortNo = groupNo + \"01\";\n");
      out.write("\t\tvar data = {\n");
      out.write("\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("\t\t\tgroupNo: groupNo,\n");
      out.write("\t\t\tsortNo: sortNo\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t           type: \"post\", \n");
      out.write("\t\t       url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/addNewRecipe.do\", \n");
      out.write("\t\t       cache : false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data : data,\n");
      out.write("\t\t\t   success: function(data) {\n");
      out.write("\t\t\t\t\tif (parseInt(data.state) == 1) {\n");
      out.write("\t\t\t\t\t\tgrid.clearRows();\n");
      out.write("\t\t\t\t\t\tvar newRow = data.order;\n");
      out.write("\t\t\t\t\t\tvar newRecipe = {\n");
      out.write("\t\t\t\t\t\t\t id: newRow.seeNo,\n");
      out.write("\t\t\t\t\t\t\t name: \"new\",\n");
      out.write("\t\t\t\t\t\t\t title: \"处方【\"+newRow.seeNo+\"】\",\n");
      out.write("\t\t\t\t\t\t\t order : newRow,\n");
      out.write("\t\t\t\t\t\t\t showCloseButton: true\n");
      out.write("\t\t\t\t\t\t};\n");
      out.write("\t\t\t\t\t\taddTab(newRecipe);\n");
      out.write("\t\t\t\t\t\tgrid.addRow(newRow);\n");
      out.write("\t\t\t\t\t\tfocusCell(\"taskName\");\n");
      out.write("\t\t\t\t\t} else if(parseInt(data.state) == -1) {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: data.message, state: \"warning\", x: \"center\",  y: \"center\", timeout: 2000 });\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 实际删除\n");
      out.write("\tfunction remove() {\n");
      out.write("\t\tvar rows = getRecipeOrders();\n");
      out.write("\t\tvar dataRow = [];\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(grid.isSelected(rows[i])) {\n");
      out.write("\t\t\t\trows[i]._state = \"removed\";\n");
      out.write("\t\t\t\tdataRow.push(rows[i]);\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tif(!rows[i]._state) {\n");
      out.write("\t\t\t\t\tdataRow.push(rows[i]);\n");
      out.write("\t\t\t\t};\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t           type: \"post\", \n");
      out.write("\t\t       url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/save.do\", \n");
      out.write("\t\t       cache : false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data : {data: mini.encode(dataRow)},\n");
      out.write("\t\t\t   success: function(r) {\n");
      out.write("\t\t\t\t   if(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: \"删除医嘱成功！\",  state: \"success\", x: \"center\", y: \"center\",  timeout: 2000});\n");
      out.write("\t\t\t\t\t\tremoveOrderGroup();\n");
      out.write("\t\t\t\t\t\tcomboRender();\n");
      out.write("\t\t\t\t\t\t//删除医嘱成功后刷新患者总金额\n");
      out.write("\t\t\t\t\t\tparent.reflashTotCost();\n");
      out.write("\t\t\t\t\t\t// showOrders();\n");
      out.write("\t\t\t\t\t\tgrid.removeRows(getSelectedRows(), false);\n");
      out.write("\t\t\t\t\t\tsetTotCost();\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: r, state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t  }\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 移除医嘱及其对应的辅材\n");
      out.write("\tfunction removeOrderGroup() {\n");
      out.write("\t\tvar selectRows = grid.getSelecteds();\n");
      out.write("\t\tvar rows = getRows();\n");
      out.write("\t\tfor(var i = 0; i < selectRows.length; i++) {\n");
      out.write("\t\t\tvar deleteOrders = [];\n");
      out.write("\t\t\tfor(var j = 0; j < rows.length; j++) {\n");
      out.write("\t\t\t\tif(selectRows[i].combId == rows[j].combId && parseInt(rows[j].subMaterialFlag) == 1) {\n");
      out.write("\t\t\t\t\tdeleteOrders.push(rows[j]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\t\t\t\n");
      out.write("\t\t\tgrid.removeRows(deleteOrders, false);\n");
      out.write("\t\t}\n");
      out.write("\t\tgrid.removeRows(selectRows, false);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 删除处方按钮\n");
      out.write("\tfunction removeRecipe0(e) {\n");
      out.write("\t\te.cancel = true; \n");
      out.write("\t\tif(orderFeeSure()) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"该处方在您操作期间已经收费，请新开处方进行操作！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t};\n");
      out.write("\t\ttop.mini.confirm(\"确定删除该条处方?\", \"提示\", function(action) {\n");
      out.write("\t\t\tif(action == \"ok\") {\n");
      out.write("\t\t\t\tremoveRecipe();\n");
      out.write("\t\t\t\tremoveTab();\n");
      out.write("\t\t\t\tshowOrders();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\te.cancel = true; \n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 删除医嘱\n");
      out.write("\tfunction removeOrder() {\n");
      out.write("\t\tif(orderFeeSure()) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"该处方在您操作期间已经收费，请新开处方进行操作！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t};\n");
      out.write("\t\tvar rows = getSelectedRows();\n");
      out.write("\t\tif(rows.length <= 0 ) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请选中一条医嘱进行删除！\", state: \"default\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t// 删除不用走后台的医嘱\n");
      out.write("\t\tif(directRemove().length <= 0) {\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\ttop.mini.confirm(\"确定删除这\"+ rows.length +\"条医嘱?\", \"提示\", function(action) {\n");
      out.write("\t\t\tif(action == \"ok\") {\n");
      out.write("\t\t\t\tremove();\n");
      out.write("\t\t\t\tif(getRows().length <= 0) {\n");
      out.write("\t\t\t\t\tremoveTab();\n");
      out.write("\t\t\t\t\tshowOrders();\n");
      out.write("\t\t\t\t}\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 直接删除、 不走后台\n");
      out.write("\tfunction directRemove() {\n");
      out.write("\t\tvar rows = grid.getSelecteds();\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(!rows[i].itemId || rows[i]._state == \"added\") {\n");
      out.write("\t\t\t\tgrid.removeRow(rows[i]);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn grid.getSelecteds();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 点击关闭前\n");
      out.write("\tfunction onbeforecloseclick(e) {\n");
      out.write("\t\t// 验证是否已经收费\n");
      out.write("\t\te.cancel = true; \n");
      out.write("\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\tif(activeTab.id != e.tab.id) {\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\tif(orderFeeSure()) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"该处方在您操作期间已经收费，请新开处方进行操作！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\ttop.mini.confirm(\"确定删除该条处方?\", \"提示\", function(action) {\n");
      out.write("\t\t\tif(action == \"ok\") {\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tremoveRecipe();\n");
      out.write("\t\t\t\tremoveTab();\n");
      out.write("\t\t\t\tshowOrders();\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\te.cancel = true; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 删除处方\n");
      out.write("\tfunction removeRecipe() {\n");
      out.write("\t\tvar rows = getRecipeOrders();\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\t rows[i]._state = \"removed\";\n");
      out.write("\t\t}\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/save.do\";\n");
      out.write("\t\t$.post(url, {data: mini.encode(rows)}, function(r) {\n");
      out.write("\t\t\tif(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"删除医嘱成功！\",  state: \"success\", x: \"center\", y: \"center\",  timeout: 2000});\n");
      out.write("\t\t\t\tshowOrders();\n");
      out.write("\t\t\t\t//刷新患者总金额\n");
      out.write("\t\t\t\tparent.reflashTotCost();\n");
      out.write("\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: r.message, state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: r, state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 根节点组套和类节点增加文件夹\n");
      out.write("\tfunction onAdd() {\n");
      out.write("\t\tvar node = tree.getSelectedNode();\n");
      out.write("\t\t// 根节点增加\n");
      out.write("\t\tif (node.id == \"Doct\" || node.id ==\"Dept\" || node.id == \"Hos\") {\n");
      out.write("\t\t\tnode.id = \"\";\n");
      out.write("\t\t}\n");
      out.write("\t\tvar newNode = { text : \"新建文件夹\",\n");
      out.write("\t\t\t\t\t  isLeaf : \"false\",\n");
      out.write("\t\t\t\t\t  asyncLoad : \"false\",\n");
      out.write("\t\t\t\t\t  classifyName : \"新建文件夹\",\n");
      out.write("\t\t\t\t\t  groupKind : node.kind,\n");
      out.write("\t\t\t\t\t  parentId : node.id,\n");
      out.write("\t\t\t\t\t  orderClassifyType : \"O\",\n");
      out.write("\t\t\t\t\t  sysType : 'O' };\n");
      out.write("\t\t\n");
      out.write("\t\ttree.addNode(newNode, 0, node);\n");
      out.write("\t\ttree.selectNode(newNode);\n");
      out.write("\t\tvar data = mini.encode(newNode);\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/curd.do\";\n");
      out.write("\t\t$.post(url, {data : data}, function(r) {\n");
      out.write("\t\t\tif (r==\"ok\") {\n");
      out.write("\t\t\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/getTree.do?orderClassifyType=O&sysType=O\");\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 修改组套名称\n");
      out.write("\tfunction onEdit() {\n");
      out.write("\t\tvar node = tree.getSelectedNode();\n");
      out.write("\t\ttree.beginEdit(node);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 删除组套\n");
      out.write("\tfunction onRemove() {\n");
      out.write("\t\tvar node = tree.getSelectedNode();\n");
      out.write("\t\tvar data,url = \"\";\n");
      out.write("\t\tif (node.prop==\"classify\") {\n");
      out.write("\t\t\tdata = {classifyId:node.id, _state:\"removed\"};\n");
      out.write("\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/curd.do\";\n");
      out.write("\t\t}\n");
      out.write("\t\tif (node.prop==\"group\") {\n");
      out.write("\t\t\tdata = {groupId:node.id ,_state:\"removed\"};\n");
      out.write("\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/curd.do\";\n");
      out.write("\t\t}\n");
      out.write("\t\tdata = mini.encode(data);\n");
      out.write("\t\tmini.confirm(\"是否删除组套文件夹【\"+node.text+\"】\",\"信息提示\",function(action){\n");
      out.write("\t\t\tif (action==\"ok\") {\n");
      out.write("\t\t\t\t$.post(url, {data:data}, function(r){\n");
      out.write("\t\t\t\t\tif(r == \"ok\"){\n");
      out.write("\t\t\t\t\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/getTree.do?orderClassifyType=O&sysType=O\");\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 保存医嘱\n");
      out.write("\tfunction saveOrder() {\n");
      out.write("\t\tgrid.commitEdit();\n");
      out.write("\t\tvar changeRow = grid.getChanges();\n");
      out.write("\t\tif(changeRow.length <= 0) {\n");
      out.write("\t\t\ttop.mini.showTips({ content: \"数据没有改变！！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar data = getRecipeOrders();\n");
      out.write("\t\tif (data.length == 0) {\n");
      out.write("\t\t\ttop.mini.showTips({ content: \"请先添加一行数据\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfor (var i = 0; i < data.length; i++) {\n");
      out.write("\t\t\tif (!data[i].itemId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"添加的记录中有必填数据没填 !!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tfocusCell(\"taskName\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// 组合号赋值\n");
      out.write("\t\tfor(var i = 0; i < data.length; i++) {\n");
      out.write("\t\t\tvar timestampComb = data[i].combId;\n");
      out.write("\t\t\tvar regExp = /\\d{10,20}/;\n");
      out.write("\t\t\tif(regExp.test(timestampComb)) {\n");
      out.write("\t\t\t\tvar combId = null;\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\tasync: false, \n");
      out.write("\t\t\t\t\ttype : \"post\", \n");
      out.write("\t\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getComboNo.do\", \n");
      out.write("\t\t\t\t\tdataType : 'json', \n");
      out.write("\t\t\t\t\tsuccess : function(r) { \n");
      out.write("\t\t\t\t\t\tcombId = r;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});  \n");
      out.write("\t\t\t\tfor(var j = i; j < data.length; j++) {\n");
      out.write("\t\t\t\t\tif(timestampComb == data[j].combId) {\n");
      out.write("\t\t\t\t\t\tdata[j].combId = combId;\n");
      out.write("\t\t\t\t\t\tdata[j].sortNo = parseInt(data[j].subcombNo + \"0\" + j);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/save.do\",\n");
      out.write("\t\t\tdata:  {data : mini.encode(data)},\n");
      out.write("\t\t\tasync: false ,\n");
      out.write("\t\t\tsuccess: function(r) {\n");
      out.write("\t\t\t\tif (parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\t// 保存成功之后将当前tab的name属性改成save\n");
      out.write("\t\t\t\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\t\t\t\ttab.updateTab(activeTab, {name: \"save\"});\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: \"保存医嘱成功！\",  state: \"success\", x: \"center\", y: \"center\",  timeout: 2000});\n");
      out.write("\t\t\t\t\tshowOrders();\n");
      out.write("\t\t\t\t\ttab.updateTab(activeTab, {headerStyle: \"color:#090;\"});\n");
      out.write("\t\t\t\t\t//刷新患者总金额\n");
      out.write("\t\t\t\t\tparent.reflashTotCost();\n");
      out.write("\t\t\t\t\t \n");
      out.write("\t\t\t\t\t$.ajax({  \n");
      out.write("\t\t\t\t\t    url: \"http://wxservice.phd91.com/weixinservice/message/notice.do\",    //请求的url地址  \n");
      out.write("\t\t\t\t\t    dataType: \"json\",   //返回格式为json  \n");
      out.write("\t\t\t\t\t    async: true,//请求是否异步，默认为异步，这也是ajax重要特性  \n");
      out.write("\t\t\t\t\t    data: {openId: r.openId,\n");
      out.write("\t\t\t\t\t    \tpatientName: r.patientName,\n");
      out.write("\t\t\t\t\t    \tcardNo: r.cardNo,\n");
      out.write("\t\t\t\t\t    \tstatus: r.status,\n");
      out.write("\t\t\t\t\t    \tregisterId: r.registerId,\n");
      out.write("\t\t\t\t\t    \ttime: mini.formatDate(new Date(), \"yyyy-MM-dd HH:mm:ss\"),\n");
      out.write("\t\t\t\t\t    \tcontent: \"您有新的处方需要处理：\"\n");
      out.write("\t\t\t\t\t    },    //参数值  \n");
      out.write("\t\t\t\t\t    \n");
      out.write("\t\t\t\t\t    type: \"POST\",   //请求方式 get 或者post  \n");
      out.write("\t\t\t\t\t    success: function(req){  \n");
      out.write("\t\t\t\t\t\t\ttop.mini.alert(\"微信推送成功！\");\n");
      out.write("\t\t\t\t\t    },\n");
      out.write("\t\t\t\t\t    error: function(r) {\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t});  \n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: r.message, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == 0) {\n");
      out.write("\t\t\t\t\t// TODO 确定  取消   双选框\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\ttop.mini.error(r.tip);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 当项目名称发生变化的时候\n");
      out.write("\tfunction onValueChanged1(e) {\n");
      out.write("\t\tif(!e.selected) {\n");
      out.write("\t\t\trefreshOrder();\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t} \n");
      out.write("\t\t\n");
      out.write("\t\tif(e.selected.tag.state != \"ok\") {\n");
      out.write("\t\t\ttop.mini.showTips({content: e.selected.tag.state, state: \"warning\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\trefreshOrder();\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t}\n");
      out.write("\t\tfillOrder(e.selecteds[0].itemId);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 项目名称输入改变\n");
      out.write("\tfunction onshowpopup(e) {\n");
      out.write("\t\te.sender.on(\"drawcell\", function(r){\n");
      out.write("\t\t\tif(r.item.tag.state != \"ok\") {\n");
      out.write("\t\t\t\tr.cellStyle = \"color: #f00\";\n");
      out.write("\t\t\t\tif(r.field == \"tag.state\") {\n");
      out.write("\t\t\t\t\tr.cellHtml = \"<span class='showCellTooltip' title='\"+ r.item.tag.state +\"'>无效</span>\";\n");
      out.write("\t\t\t\t};\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tif(r.field == \"tag.state\") {\n");
      out.write("\t\t\t\t\tr.cellHtml = \"可用\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\tvar row = selectRow();\n");
      out.write("\t\tvar editor = grid.getCellEditor(\"taskName\", selectRow());\n");
      out.write("\t\tvar sysType = row.itemSysType == null? \"\" : row.itemSysType;\n");
      out.write("\t\teditor.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getDrugList.do?sysType=\" + sysType);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 项目回车时\n");
      out.write("\tfunction onitementer(e) {\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 复制医嘱\n");
      out.write("\tfunction copyOrder() {\n");
      out.write("\t\tparent.copyOrders = grid.getSelecteds();\n");
      out.write("\t\tif (parent.copyOrders.length > 0 ) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"复制成功！\", state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t}; \n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 粘贴添加 \n");
      out.write("\tfunction pasteOrder() {\n");
      out.write("\t\tif(orderFeeSure()) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"该处方在您操作期间已经收费，请新开处方进行操作！\", state: \"danger\", x: \"center\", y: \"center\", timeout:2000});\n");
      out.write("\t\t\treturn; \n");
      out.write("\t\t};\n");
      out.write("\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\tvar pasteOrders = parent.copyOrders;\n");
      out.write("\t\tfor(var i = 0; i < pasteOrders.length; i++) {\n");
      out.write("\t\t\tpasteOrders[i].billId = activeTab.order.billId;\n");
      out.write("\t\t\tpasteOrders[i].seeNo = activeTab.order.seeNo;\n");
      out.write("\t\t\tpasteOrders[i].registerId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/pasteOrder.do\",\n");
      out.write("            data: {data: mini.encode(pasteOrders)},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (data) {\n");
      out.write("            \tif(parseInt(data.state) == 1) {\n");
      out.write("\t            \tsetGroupNo(data.mainResult);\n");
      out.write("\t            \tvar st = \"\";\n");
      out.write("\t            \tfor(var i = 0 ; i < data.stOrderList.length; i++) {\n");
      out.write("            \t\t\tst += \"【\" + data.stOrderList[i].itemName + \"】 \";\n");
      out.write("            \t\t}\n");
      out.write("\t            \t\n");
      out.write("\t            \tif(st != \"\") {\n");
      out.write("\t            \t\tmini.confirm(\"是否添加皮试液？\",\"提示\", function (action) {\n");
      out.write("           \t\t\t\t\tif (action == \"ok\") {\n");
      out.write("           \t\t\t\t\t\tsetGroupNo(data.stOrderList);\n");
      out.write("          \t            \t\ttop.mini.alert(\"已经添加皮试液\" + st + \"到医嘱中！\");\n");
      out.write("           \t\t\t\t\t} \n");
      out.write("\t             \t\t});\n");
      out.write("\t            \t}\n");
      out.write("\t            \tsetTotCost();\n");
      out.write("            \t} \n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t\tremoveBadOrder();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 根据combId改subcombNo和sortNo\n");
      out.write("\tfunction setGroupNo(orders) {\n");
      out.write("\t\tvar resultOrders = [];\n");
      out.write("\t\tvar groupCombs = [];\n");
      out.write("\t\tvar copyOrders = mini.clone(orders);\n");
      out.write("\t\tfor(var i = 0; i < orders.length; i++) {\n");
      out.write("\t\t\tvar combId = getComboNo();\t\t\n");
      out.write("\t\t\tvar order = copyOrders[i];\n");
      out.write("\t\t\tif(i == 0) {\n");
      out.write("\t\t\t\torder.combId = combId;\n");
      out.write("\t\t\t\torder.subcombNo = getMaxSubcombNo();\n");
      out.write("\t\t\t\torder.sortNo = order.subcombNo + \"01\";\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tif (orders[i].combId == orders[i-1].combId) {\n");
      out.write("\t\t\t\t\torder.combId = resultOrders[resultOrders.length-1].combId;\n");
      out.write("\t\t\t\t\torder.subcombNo = resultOrders[resultOrders.length-1].subcombNo;\n");
      out.write("\t\t\t\t\torder.sortNo = parseInt(resultOrders[resultOrders.length-1].sortNo) + 1;\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\torder.combId = combId;\t\t\t\t\t\n");
      out.write("\t\t\t\t\torder.subcombNo = getMaxSubcombNo();\n");
      out.write("\t\t\t\t\torder.sortNo = order.subcombNo + \"01\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tresultOrders.push(order);\n");
      out.write("\t\t\tgrid.addRow(order);\n");
      out.write("\t\t}\n");
      out.write("\t\tcomboRender();\n");
      out.write("\t\tremoveBadOrder();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction repeat(itemId) {\n");
      out.write("\t\t// 判断是否重复\n");
      out.write("\t\tvar rows = grid.findRows(function(row){\n");
      out.write("\t\t    if(row.itemId == itemId) return true;\n");
      out.write("\t\t});\n");
      out.write("\t\tif(rows.length > 1) {\n");
      out.write("\t\t\treturn true;\n");
      out.write("\t\t}\n");
      out.write("\t\treturn false; \n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 医嘱信息回填( 手动  )\n");
      out.write("\tfunction fillOrder(itemId) {\n");
      out.write("\t\tvar rows = getRecipeOrders();\n");
      out.write("\t\tfor(var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\tif(rows[i].itemId == itemId) {\n");
      out.write("\t\t\t\ttop.mini.alert(\"存在重复的医嘱！\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar order = grid.getSelected();\n");
      out.write("\t\t\n");
      out.write("\t\t// 不可以开立重复的医嘱\n");
      out.write("\t\tvar data = {\n");
      out.write("\t\t\t\titemId: itemId,\n");
      out.write("\t\t\t\torder: mini.encode(order)\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/fillOrder.do\",\n");
      out.write("\t\t\tdata: data,\n");
      out.write("\t\t\tasync: false ,\n");
      out.write("\t\t\tsuccess: function(r) {\n");
      out.write("\t\t\t\tif(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\tfocusCell(\"taskName\");\n");
      out.write("\t\t\t\t\ttop.mini.showTips({ content: r.message, state: \"danger\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\tgrid.updateRow(selectRow(), {itemName: \"\", itemId: \"\", itemNo: \"\"});\n");
      out.write("\t\t\t\t\trefreshOrder();\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == 1) { \n");
      out.write("\t\t\t\t\tif(r.order.itemSysType == \"HR\") {\n");
      out.write("\t\t\t\t\t\ttop.mini.showTips({content: \"不允许在界面开立草药医嘱！请点击【草药按钮开立草药】\", state: \"danger\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t\trefreshOrder();\n");
      out.write("\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tif(r.order.tag.tip != \"\") {\n");
      out.write("\t\t\t\t\t\ttop.mini.alert(r.order.tag.tip);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tgrid.updateRow(selectRow(), r.order);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == 0) { // 是否皮试\n");
      out.write("\t\t\t\t\tif(r.kind == \"stFlag\") {\n");
      out.write("\t\t\t\t\t\ttop.mini.confirm(r.question, ' 提示 ', function(o) {\n");
      out.write("\t\t\t\t\t\t\tif (o == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\tgrid.updateRow(selectRow(), {stFlag : \"ND\", usageId: \"40011\"});\n");
      out.write("\t\t\t\t\t\t\t\tfillOrder(itemId);\n");
      out.write("\t\t\t\t\t\t\t\t// 添加皮试药品\n");
      out.write("\t\t\t\t\t\t\t\taddTestDrug(itemId, selectRow());\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tgrid.updateRow(selectRow(), {stFlag : \"WO\"});\n");
      out.write("\t\t\t\t\t\t\t\tfillOrder(itemId);\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 添加皮试药品\n");
      out.write("\tfunction addTestDrug(itemId, row) {\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getTestDrug.do\",\n");
      out.write("\t\t\tdata: {itemId: itemId, order: mini.encode(row)},\n");
      out.write("\t\t\tasync: false,\n");
      out.write("\t\t\tsuccess: function (r) {\n");
      out.write("\t\t\t\tif(parseInt(r.state) == -1) {\n");
      out.write("\t\t\t\t\ttop.mini.alert(\"添加皮试液失败：\"+ r.message);\n");
      out.write("\t\t\t\t} else if(parseInt(r.state) == 1) {\n");
      out.write("\t\t\t\t\tfor(var i = 0; i < r.orderList.length; i++) {\n");
      out.write("\t\t\t\t\t\tgrid.addRow(r.orderList[i]);\n");
      out.write("\t\t\t\t\t\tsortGrid();\n");
      out.write("\t\t\t\t\t\tcomboRender();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tgrid.addRow();\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 编辑某个单元格\n");
      out.write("\tfunction focusCell(cellName) {\n");
      out.write("\t\tgrid.beginEditCell(selectRow(), cellName);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 渲染表格\n");
      out.write("\tfunction ondrawcell(e) {\n");
      out.write("\t\tif (e.column.field == \"orderState\") {\n");
      out.write("\t\t\tif (e.value == \"SV\") {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>新</span>\";\n");
      out.write("\t\t\t\te.cellStyle = \"background:#9f3;\";\n");
      out.write("\t\t\t} else if (e.value == \"New\") {\n");
      out.write("\t\t\t\te.cellHtml =\"<span>暂</span>\";\n");
      out.write("\t\t\t} else if (e.value == \"DC\") {\n");
      out.write("\t\t\t\te.cellHtml =\"<span style='color:red'>废</span>\";\n");
      out.write("\t\t\t} else if (e.value == \"FE\") {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>收费</span>\";\n");
      out.write("\t\t\t\te.cellStyle = \"background:#99f;\";\n");
      out.write("\t\t\t} \n");
      out.write("\t\t\t// 退费\n");
      out.write("\t\t\tif(parseInt(e.row.backQty) > 0 && parseInt(e.row.backQty) < parseInt(e.row.tag.qty)) {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>半退</span>\";\n");
      out.write("\t\t\t\te.cellStyle = \"background:#ffa;\";\n");
      out.write("\t\t\t} else if(parseInt(e.row.backQty) == parseInt(e.row.tag.qty) && parseInt(e.row.backQty) > 0) {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>全退</span>\";\n");
      out.write("\t\t\t\te.cellStyle = \"background:#ff0;\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(e.row.memo) {\n");
      out.write("\t\t\tif (e.row.memo.indexOf(\"过敏药物\") != -1 || e.row.tag.mark == \"A\") {\n");
      out.write("\t\t\t\te.cellStyle = \"background:#aaa;\"; \n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(e.column.field == \"itemName\") { \n");
      out.write("\t\t\tif(e.row.itemName) {\n");
      out.write("\t\t\t\tvar specs = e.row.specs;\n");
      out.write("\t\t\t\tif(!specs) {\n");
      out.write("\t\t\t\t\tspecs = \"<span style=''><span>\";\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tspecs = \"【<span style=''>\"+ specs +\"<span>】\";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\te.cellHtml = e.row.itemName +  specs ;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(e.column.field == \"itemSysType\" && !e.row.itemSysType) { // 系统类别\n");
      out.write("\t\t\te.cellHtml = \"全部\";\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif(e.row.subMaterialFlag == '1') {\n");
      out.write("\t\t\te.cellStyle = 'display:none;';\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif(e.column.field == \"stFlag\") {\n");
      out.write("\t\t\tif (e.value == \"ND\") {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>需要皮试</span>\";\n");
      out.write("\t\t\t} else if(e.value == 'WO') {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>不需皮试</span>\";\n");
      out.write("\t\t\t} else if(e.value == \"FR\") {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>面试</span>\";\n");
      out.write("\t\t\t} else if(e.value == \"NT\") {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>阴性</span>\";\n");
      out.write("\t\t\t} else if(e.value == \"PT\") {\n");
      out.write("\t\t\t\te.cellHtml = \"<span>阳性</span>\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t// WO不需皮示；ND需皮示；FR 免试；NT 阴性；PT 阳性\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 医嘱验证\n");
      out.write("\tfunction oncellvalidation(e) {\n");
      out.write("\t\tvar field = e.field;\n");
      out.write("\t\tvar value = e.value;\n");
      out.write("\t\tvar row = e.row;\n");
      out.write("\t\tif((field == \"subcombNo\" || field == \"combId\" || field == \"ordDosage\" || field == \"qty\" || field == \"freqDays\") && !value) {\n");
      out.write("\t\t\ttop.mini.alert(\"数值必须大于0！\");\n");
      out.write("\t\t\treturn ;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 单元格单击事件\n");
      out.write("\tfunction onclick(e) {\n");
      out.write("\t\tchangeQtyCost()\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 单元格编辑后事件\n");
      out.write("\tfunction cellendedit (e) {\n");
      out.write("\t\tif (e.field == \"stockDeptId\") {\n");
      out.write("\t\t\tvar editor = grid.getCellEditor(\"stockDeptId\", e.row);\n");
      out.write("\t\t\teditor.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\");\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"execDeptId\") {\n");
      out.write("\t\t\tvar editor = grid.getCellEditor(\"execDeptId\", e.row);\n");
      out.write("\t\t\teditor.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\");\n");
      out.write("\t\t\taddRow();\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"itemSysType\" && e.row.itemSysType == \"HR\") {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"不允许在此界面开立草药医嘱!请点击【草药】按钮开立草药!\", state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn ;\n");
      out.write("\t\t};\n");
      out.write("\t\t\n");
      out.write("\t\t// 计算总量\n");
      out.write("\t\tgetQty(e.row);\n");
      out.write("\t\tif (e.field == \"ordDosage\") {\n");
      out.write("\t\t\tif (e.value <= 0) {\n");
      out.write("\t\t\t\tgrid.updateRow(e.row, {ordDosage: resetOrdDosage.value });\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tgrid.updateRow(e.row, {ordDosage: e.row.ordDosage});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(e.field == \"itemName\") {\n");
      out.write("\t\t\tif(!e.value) {\n");
      out.write("\t\t\t\tgrid.updateRow(e.row, {itemId : \"\"});\n");
      out.write("\t\t\t\treturn; \n");
      out.write("\t\t\t};\n");
      out.write("\t\t\tif(e.row.itemSysparentType == \"NonDrug\") {\n");
      out.write("\t\t\t\tgetQty(e.row);\n");
      out.write("\t\t\t};\n");
      out.write("\t\t}\n");
      out.write("\t\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"freqId\") {\n");
      out.write("\t\t\tvar freq = getFreq(e.row.freqId);\n");
      out.write("\t\t\tvar groupOrder = getSameGroup(e.row);\n");
      out.write("\t\t\tfor(var i = 0; i < groupOrder.length; i++) {\n");
      out.write("\t\t\t\tvar row = groupOrder[i];\n");
      out.write("\t\t\t\tgrid.updateRow(row, {freqId : e.value, execTimes: freq.execTimes, freqCycleType: freq.cycleType });\n");
      out.write("\t\t\t\tsetInjectNumber(row);\n");
      out.write("\t\t\t\tgetQty(row);\n");
      out.write("\t\t\t} ;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"qtyUnit\") {\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"freqDays\") {\n");
      out.write("\t\t\tvar groupOrder = getSameGroup(e.row);\n");
      out.write("\t\t\tfor(var i = 0; i < groupOrder.length; i++) {\n");
      out.write("\t\t\t\tvar row = groupOrder[i];\n");
      out.write("\t\t\t\tgrid.updateRow(row, {freqDays : e.value});\n");
      out.write("\t\t\t\tsetInjectNumber(row);\n");
      out.write("\t\t\t\tgetQty(row);\n");
      out.write("\t\t\t} \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif (e.field == \"usageId\") {\n");
      out.write("\t\t\tvar usageName = (e.column.editor.text).split(\"\\.\")[1];\n");
      out.write("\t\t\tvar groupOrder = getSameGroup(e.row);\n");
      out.write("\t\t\tfor(var i = 0; i < groupOrder.length; i++) {\n");
      out.write("\t\t\t\tvar row = groupOrder[i];\n");
      out.write("\t\t\t\tgrid.updateRow(row, {usageName: usageName, usageId : e.value});\n");
      out.write("\t\t\t\tsetInjectNumber(row);\n");
      out.write("\t\t\t\tgetQty(row);\n");
      out.write("\t\t\t} \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(e.field == \"qty\") {\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t// 改变组号自动组合， 保存的时候自动添加\n");
      out.write("\t\tif (e.field == \"subcombNo\") { \n");
      out.write("\t\t\t// 首先对输入的值进行校验\n");
      out.write("\t\t\tif (e.value <= 0 || (parseInt(e.value) + \"\") == resetGroupNo.value || !isNumber(e.value)) {\n");
      out.write("\t\t\t\tgrid.updateRow(e.row,{subcombNo: resetGroupNo.value});\n");
      out.write("\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// 验证通过 那么执行组合\n");
      out.write("\t\t    var list = getRecipeOrders();\n");
      out.write("\t\t\tvar rows = [];\n");
      out.write("\t\t\trows.push(e.row);\n");
      out.write("\t\t\tfor(var i = 0; i < list.length; i++) {\n");
      out.write("\t\t\t\tif(list[i].subcombNo == e.value) {\n");
      out.write("\t\t\t\t\trows.push(list[i]);\n");
      out.write("\t\t\t\t};\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// 将所有的辅材的组号改成相同的\n");
      out.write("\t\t\tgroup(rows);\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 当单元格改变时改变总量和总价\n");
      out.write("\tfunction changeQtyCost() {\n");
      out.write("\t\tvar rows = grid.getSelecteds();\n");
      out.write("\t\tif(rows.length != 1) {\n");
      out.write("\t\t\ttop.mini.showTips({content: \"请选中一行进行编辑\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000 });\n");
      out.write("\t\t\treturn ;\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tgetQty(selectRow());\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 获取总量\n");
      out.write("\tfunction getQty (outOrder) {\n");
      out.write("\t\tvar qty = 1;\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getQty.do\",\n");
      out.write("            data: {data: mini.encode(outOrder)},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("\t\t\t\tgrid.updateRow(outOrder, r);\n");
      out.write("\t\t\t\tsetTotCost();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取总价\n");
      out.write("\tfunction setTotCost() {\n");
      out.write("\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\tvar json = mini.encode(getRecipeOrders());\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getTotCost.do\",\n");
      out.write("            data: {json: json },\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("            \tif(parseInt(r.state) == 1) { \n");
      out.write("            \t\tvar title = activeTab.title.replace(/【.*】/g, \"【\"+ r.totCost +\"元】\"); \n");
      out.write("        \t\t\ttab.updateTab(activeTab, {title: title});\n");
      out.write("            \t} else if(parseInt(r.state) == -1) {\n");
      out.write("            \t\ttop.mini.showTips({content: r.message , state: \"warning\", x: \"center\", y: \"center\", timeout: 2000 });\n");
      out.write("            \t} else {\n");
      out.write("            \t\t// top.mini.showTips({content: \"错误:\" + r , state: \"danger\", x: \"center\", y: \"center\", timeout: 2000 });\n");
      out.write("            \t}\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 设置院注次数\n");
      out.write("\tfunction setInjectNumber(row) {\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getInjectNumber.do\",\n");
      out.write("            data: {data: mini.encode(row)},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("            \tif(r) {\n");
      out.write("    \t\t\t\tgrid.updateRow(row, r);\n");
      out.write("    \t\t\t}\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 根据频次ID获取频次信息\n");
      out.write("\tfunction getFreq (freqId) {\n");
      out.write("\t\tvar freq = {};\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/frequency/getById.do\",\n");
      out.write("            data: {freqId: freqId},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("            \tfreq = r;\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t\treturn freq;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 医嘱验证_频次和用法\n");
      out.write("\tfunction checkValid(row) {\n");
      out.write("\t\tvar kinds = [\"WM\", ];\n");
      out.write("\t\tif(row.itemSysType == \"WM\") {\n");
      out.write("\t\t\tif(!row.freqId || !row.usageId) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"用法和频次不能为空\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 医嘱加载时事件\n");
      out.write("\tfunction comboRender() { \n");
      out.write("\t\tvar data = getRecipeOrders();\n");
      out.write("\t\tvar hist = {};\n");
      out.write("\t\tfor (var index in data) { \n");
      out.write("\t\t\tvar row = data[index];\n");
      out.write("\t\t\tif(hist[row.combId]) {\n");
      out.write("\t\t\t\thist[row.combId].push(index);\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tif (row.combId && parseInt(row.mainItemFlag) == 1) {\n");
      out.write("\t\t\t\t\thist[row.combId] = [index];\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\n");
      out.write("\t\tfor (var it in hist) {\n");
      out.write("\t\t\tif (hist[it].length > 1) {\n");
      out.write("\t\t\t\tvar ary = hist[it];\n");
      out.write("\t\t\t\tif(data[ary[0]].mainItemFlag == \"1\") {\n");
      out.write("\t\t\t\t\tgrid.updateRow(data[ary[0]], {groupNoFlag : \"┑\"});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tfor (var i = 1; i < ary.length-1; i++) {\n");
      out.write("\t\t\t\t\tgrid.updateRow(data[ary[i]], {groupNoFlag : \"┆\"});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tgrid.updateRow(data[ary[ary.length - 1]], {groupNoFlag : \"┙\"});\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tvar ary = hist[it];\n");
      out.write("\t\t\t\tgrid.updateRow(data[ary[0]], {groupNoFlag : \"\"});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 医嘱加载时事件\n");
      out.write("\tfunction comboGroupRender() { \n");
      out.write("\t\tvar data = grid2.getList();\n");
      out.write("\t\tvar hist = {};\n");
      out.write("\t\tfor (var index in data) { \n");
      out.write("\t\t\tvar row = data[index];\n");
      out.write("\t\t\tif(hist[row.combId]) {\n");
      out.write("\t\t\t\thist[row.combId].push(index);\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tif (row.combId) {\n");
      out.write("\t\t\t\t\thist[row.combId] = [index];\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t\n");
      out.write("\t\tfor (var it in hist) {\n");
      out.write("\t\t\tif (hist[it].length > 1) {\n");
      out.write("\t\t\t\tvar ary = hist[it];\n");
      out.write("\t\t\t\tgrid2.updateRow(data[ary[0]], {groupNoFlag : \"┑\"});\n");
      out.write("\t\t\t\tfor (var i = 1; i < ary.length-1; i++) {\n");
      out.write("\t\t\t\t\tgrid2.updateRow(data[ary[i]], {groupNoFlag : \"┆\"});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tgrid2.updateRow(data[ary[ary.length - 1]], {groupNoFlag : \"┙\"});\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tvar ary = hist[it];\n");
      out.write("\t\t\t\tgrid2.updateRow(data[ary[0]], {groupNoFlag : \"\"});\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tgrid2.accept();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//御空\n");
      out.write("\tfunction ifNull(value){\n");
      out.write("\t\tif(value==null && value==\"\"){\n");
      out.write("\t\t\tvalue = \"   \";\n");
      out.write("\t\t}\n");
      out.write("\t\treturn value;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//格式化当前日期\n");
      out.write("\tfunction FormatDate(){\n");
      out.write("\t\tvar date = new Date();\n");
      out.write("\t\tvar year=date.getFullYear() + \"\";\n");
      out.write("\t\tvar month=date.getMonth()+1+\"\";\n");
      out.write("\t\tvar day = date.getDate()+\"\";\n");
      out.write("\t\tvar str=\"\";\n");
      out.write("\t\tstr=year+month+day;\n");
      out.write("\t\treturn str;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 统计已缴款的单据以及交款总金额\n");
      out.write("\tfunction paidBills(){\n");
      out.write("\t\tvar data = mini.get(\"grid1\").getData();\n");
      out.write("\t\tvar paid = [];\n");
      out.write("\t\tpaid[0]=0;\n");
      out.write("\t\tfor(var k=0; k<data.length;k++){\n");
      out.write("\t\t\tif(data[k][\"orderState\"]==\"FE\"){\t\n");
      out.write("\t\t\t\tpaid.push(data[k]);\t\n");
      out.write("\t\t\t\tpaid[0]+=data[k][\"totCost\"];\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\treturn paid;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 分方归类\n");
      out.write("\tfunction sortPrescription(data){\n");
      out.write("\t\tvar prescription=[];\t\t  //未付款的单据\n");
      out.write("\t\tvar mapPrescription_cn = {}; //中草药处方单\n");
      out.write("\t\tvar mapPrescription = {};\t//普通处方单\n");
      out.write("\t\tvar mapInspect = {};       //检验单\n");
      out.write("\t\tvar mapCheck = {};\t\t  //检查单\n");
      out.write("\t\tvar mapTreat={};\t\t //治疗单\n");
      out.write("\t\t// 去掉不需要打印的单子——已缴费的不打印\n");
      out.write("\t\tfor(var k=0; k<data.length;k++){\n");
      out.write("\t\t\tif(data[k][\"orderState\"]!=\"FE\"){\t\n");
      out.write("\t\t\t\tprescription.push(data[k]);\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t// 分方归类——先按类型再按单号分\n");
      out.write("\t\tfor(var i = 0 ; i <  prescription.length;i++){\n");
      out.write("\t\t\tvar billId = prescription[i][\"billId\"].toString();\n");
      out.write("\t\t\t// 归类——处方单\n");
      out.write("\t\t\tif(  prescription[i][\"itemSysType\"]==\"WM\" || prescription[i][\"itemSysType\"]==\"CM\" || prescription[i][\"itemSysType\"]==\"HR\"){\n");
      out.write("\t\t\t\tif(mapPrescription[billId] == null ){\n");
      out.write("\t\t\t\t\tvar temp= [];\n");
      out.write("\t\t\t\t\ttemp.push(prescription[i]);\t\n");
      out.write("\t\t\t\t\tmapPrescription[billId]=temp;\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\tmapPrescription[billId].push(prescription[i]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// 归类——检验单\n");
      out.write("\t\t\tif(prescription[i][\"itemSysType\"]==\"UL\") {\n");
      out.write("\t\t\t\tif(mapInspect[billId] == null ){\n");
      out.write("\t\t\t\t\tvar temp= [];\n");
      out.write("\t\t\t\t\ttemp.push(prescription[i]);\t\n");
      out.write("\t\t\t\t\tmapInspect[billId]=temp;\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\tmapInspect[billId].push(prescription[i]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// 归类——检查单\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(prescription[i][\"itemSysType\"]==\"UC\") {\n");
      out.write("\t\t\t\tif(mapCheck[billId] == null ){\n");
      out.write("\t\t\t\t\tvar temp= [];\n");
      out.write("\t\t\t\t\ttemp.push(prescription[i]);\t\n");
      out.write("\t\t\t\t\tmapCheck[billId]=temp;\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\tmapCheck[billId].push(prescription[i]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t// 归类——治疗单\n");
      out.write("\t\t\tif(prescription[i][\"itemSysType\"]==\"UZ\"){\n");
      out.write("\t\t\t\tif(mapTreat[billId] == null ){\n");
      out.write("\t\t\t\t\tvar temp= [];\n");
      out.write("\t\t\t\t\ttemp.push(prescription[i]);\t\n");
      out.write("\t\t\t\t\tmapTreat[billId]=temp;\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\tmapTreat[billId].push(prescription[i]);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t// 汇总——返回结果\n");
      out.write("\t\tvar list={};\n");
      out.write("\t\tlist[\"M\"] = mapPrescription;\n");
      out.write("\t\tlist[\"UL\"] = mapInspect;\n");
      out.write("\t\tlist[\"UC\"] = mapCheck;\n");
      out.write("\t\tlist[\"UZ\"] = mapTreat;\n");
      out.write("\t\treturn list;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 设置通用表头信息\n");
      out.write("\tfunction printHeadInfo(Report){\n");
      out.write("\t\t//获取表头信息（固定）\n");
      out.write("\t\tvar sex = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.sexCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\tvar orgName = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${params.orgName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; //挂号科室\n");
      out.write("\t\tvar Id=FormatDate()+'-'+'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.dailySerialId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; //流水号\n");
      out.write("\t\tvar totFee = parent.document.getElementById(\"totCost\").innerText;\n");
      out.write("\t\t\n");
      out.write("\t\tvar paid = paidBills();\t\t//获取已交款的单据\n");
      out.write("\t\tif(sex==\"1\"){\n");
      out.write("\t\t\tsex=\"男\";\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\tsex=\"女\";\n");
      out.write("\t\t};\n");
      out.write("\t\t//付费类型\n");
      out.write("\t\tvar payType = {};\n");
      out.write("\t\tpayType[\"O\"] = \"普通\";\n");
      out.write("\t\tpayType[\"P\"] = \"公医\";\n");
      out.write("\t\tpayType[\"M\"] = \"医保(新)\";\n");
      out.write("\t\tvar patientPaytypeId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.patientPaytypeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\t//将数据载入到报表中  \n");
      out.write("\t\t\n");
      out.write("\t\tReport.ParameterByName(\"medicalCardNo\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.medicalCertificateNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.medicalCardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');// 医保卡号\n");
      out.write("\t\tReport.ParameterByName(\"Id\").AsString = ifNull(Id);\n");
      out.write("\t\t\n");
      out.write("\t\tReport.ParameterByName(\"patientName\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.patientName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\n");
      out.write("\t\t\n");
      out.write("\t\tReport.ParameterByName(\"sex\").AsString = ifNull(sex);\n");
      out.write("\t\tReport.ParameterByName(\"age\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.age}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\n");
      out.write("\t\tReport.ParameterByName(\"registerDeptName\").AsString = ifNull(orgName);\n");
      out.write("\t\tReport.ParameterByName(\"diagName\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.diagName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\t// 诊断信息\n");
      out.write("\t\tReport.ParameterByName(\"totalFee\").AsString = ifNull(totFee-paid[0]);\t\t\t\t\t//总费用\n");
      out.write("\t\tReport.ParameterByName(\"payType\").AsString = ifNull(payType[patientPaytypeId]);\n");
      out.write("\t\tReport.ParameterByName(\"barCode\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.patientId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\n");
      out.write("\t\treturn Report;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 匹配下拉框的值\n");
      out.write("\tfunction getValueFromKey(array,key) {\n");
      out.write("\t\tvar value;\n");
      out.write("\t\tfor(var i=0;i<array.length;i++){\n");
      out.write("\t\t\tif(array[i][\"id\"] == key ){\n");
      out.write("\t\t\t\tvalue = array[i][\"text\"];\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tif(value == null || value == \"\"){\n");
      out.write("\t\t\treturn \"\";\n");
      out.write("\t\t}\n");
      out.write("\t\tvalue = value.substring(value.indexOf(\".\")+1);\n");
      out.write("\t\treturn value;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 打印处方单(包括草药单和普通处方单)\n");
      out.write("\tfunction printPrescription(prescription){\n");
      out.write("\t\t \n");
      out.write("\t\tvar flag=flag;\n");
      out.write("\t\tvar orgName = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${params.orgName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; \t// 挂号科室\n");
      out.write("\t\tfor(var key in prescription){\t\t// 分单遍历\n");
      out.write("\t\t\tflag=true;\n");
      out.write("\t\t\tvar totCost = 0; \t\t\t\t// 药费\n");
      out.write("\t\t\tvar fee2=0;\t\t\t\t\t\t// 总注射费 / 煎药费\n");
      out.write("\t\t\tvar auxiliaryBill = [];\t\t\t// 辅材信息\n");
      out.write("\t\t\t//设置特有的表头信息\n");
      out.write("\t\t\tReport.LoadFromURL(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/report/template/pediatricPrescription.grf?t=\"+new Date().getTime());\n");
      out.write("\t\t\tReport.PrepareLoadData();\n");
      out.write("\t\t\t//获取通用表头信息\n");
      out.write("\t\t\tprintHeadInfo(Report);\n");
      out.write("\t\t\t//设置特有的表头信息\n");
      out.write("\t\t\tReport.ParameterByName(\"weight\").AsString = \">>未完成<<\";\n");
      out.write("\t\t\tReport.ParameterByName(\"address\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.presentAddress}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\n");
      out.write("\t\t\tReport.ParameterByName(\"phone\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.phone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); \n");
      out.write("\t\t\tReport.ParameterByName(\"patientId\").AsString = ifNull('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.patientId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');  //病历号\n");
      out.write("\t\t\n");
      out.write("\t\t\tvar Recordset = Report.DetailGrid.Recordset;\t//报表记录集对象\n");
      out.write("\t\t\tfor(var i=0;i<prescription[key].length;i++){\n");
      out.write("\t\t\t\t// 计算辅材的费用\n");
      out.write("\t\t\t\tif(prescription[key][i][\"showFlag\"] == 0 ){  // 辅材信息\n");
      out.write("\t\t\t\t\tauxiliaryBill.push(prescription[key][i]);\n");
      out.write("\t\t\t\t\tfee2 += prescription[key][i][\"totCost\"];\n");
      out.write("\t\t\t\t\tcontinue;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t// totCost总价\n");
      out.write("\t\t\t\tvar price = prescription[key][i][\"totCost\"];\t//单项药品总价\n");
      out.write("\t\t\t\ttotCost +=price;\t\t\t\t\t\t\t//药费\n");
      out.write("\t\t\t\t////////////////////////将药品信息推送到明细表中\n");
      out.write("\t\t\t\t//报表记录集的各个字段\n");
      out.write("\t\t\t\tvar id= Report.FieldByName(\"DetailID\");\n");
      out.write("\t\t\t\tvar itemName = Report.FieldByName(\"itemName\");\t\t\t//项目名称\n");
      out.write("\t\t\t\tvar ordDosage = Report.FieldByName(\"ordDosage\");\t\t//每次用量\n");
      out.write("\t\t\t\tvar specs = Report.FieldByName(\"specs\");\t\t//规格\n");
      out.write("\t\t\t\tvar usageId = Report.FieldByName(\"usageId\");\t\t\t//用法\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tRecordset.Append();\t\t//追加明细表数据\n");
      out.write("\t\t\t\tid.Value = i+1;\n");
      out.write("\t\t\t\titemName.Value = prescription[key][i][\"itemName\"];\t\t\n");
      out.write("\t\t\t\tordDosage.Value = prescription[key][i][\"ordDosage\"]+prescription[key][i][\"ordDosageUnit\"];\n");
      out.write("\t\t\t\tspecs.Value = prescription[key][i][\"specs\"];\n");
      out.write("\t\t\t\t \n");
      out.write("\t\t\t\tif(prescription[key][i][\"tag\"]['boilName']) {\n");
      out.write("\t\t\t\t\tusageId.Value = prescription[key][i][\"freqName\"] +\",\"+prescription[key][i][\"usageName\"] + \",\" + prescription[key][i][\"tag\"]['boilName'];\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\tusageId.Value = prescription[key][i][\"freqName\"] +\",\"+prescription[key][i][\"usageName\"];\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tRecordset.Post();\t\t//推送到明细表中\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tReport.ParameterByName(\"billId\").AsString = ifNull(key);   \t\t//处方单编号\n");
      out.write("\t\t\t//判读是否为草药单\n");
      out.write("\t\t\tif(prescription[key][0][\"itemSysType\"]==\"HR\"){\n");
      out.write("\t\t\t\tReport.ParameterByName(\"type\").AsString\t= \"草药\"; \n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\tReport.ParameterByName(\"type\").AsString\t= ifNull(orgName.substring(0,orgName.indexOf(\"科\")+1)); \n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar subtotallFee = totCost+fee2;\n");
      out.write("\t\t\tReport.ParameterByName(\"fee2\").AsString = \"￥ \"+fee2.toFixed(2);\t\t\t//总注射费/煎药费\n");
      out.write("\t\t\tReport.ParameterByName(\"fee1\").AsString = \"￥ \"+totCost.toFixed(2);\t\t//药费\n");
      out.write("\t\t\tReport.ParameterByName(\"subtotallFee\").AsString = \"￥ \"+subtotallFee.toFixed(2); //小结\n");
      out.write("\t\t\tReport.ParameterByName(\"staff1\").AsString = ifNull(\"\");\t\t\t//收费员\n");
      out.write("\t\t\tReport.ParameterByName(\"staff2\").AsString = ifNull(\"\");\t\t\t//审核药师\n");
      out.write("\t\t\tReport.ParameterByName(\"staff3\").AsString = ifNull(\"\");\t\t\t//调配药师/士\n");
      out.write("\t\t\tReport.ParameterByName(\"staff4\").AsString = ifNull(\"\");\t\t\t//核对、发药药师\t\t\n");
      out.write("\t\t\tReport.Print(true);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif(!flag){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\ttop.mini.showTips({content: \"无需要打印的处方单信息\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t}\n");
      out.write("\t\treturn ;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 打印所有的检测单\n");
      out.write("\tfunction printInspectBill(inspectBill){\n");
      out.write("\t\tvar execDeptData = mini.get(\"execDeptId\").getData(); //获取执行科室的下拉框列表所有值\n");
      out.write("\t\tvar sampleData = mini.get(\"sampleId\").getData();\t//获取样本类型下拉框的所有数据\n");
      out.write("\t\tvar flag = false;\n");
      out.write("\t\tfor(var key in inspectBill){\n");
      out.write("\t\t\tflag = true;\n");
      out.write("\t\t\tvar totCost = 0; \t\t\t\t//药费\n");
      out.write("\t\t\tvar fee2=0;\t\t\t\t\t\t//辅材费用\n");
      out.write("\t\t\tvar auxiliaryBill = [];\t\t\t//辅材信息\n");
      out.write("\t\t\tReport.LoadFromURL(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/report/template/inspectBill.grf?t=\"+new Date().getTime());\n");
      out.write("\t\t\tReport.PrepareLoadData();\n");
      out.write("\t\t\t//获取通用表头信息\n");
      out.write("\t\t\tReport = printHeadInfo(Report);\n");
      out.write("\t\t\t//设置特定表头信息\t\n");
      out.write("\t\t\tvar date = new Date();  \t// 就诊时间\n");
      out.write("\t\t\tvar seeTime = date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate(); //格式时间\n");
      out.write("\t\t\tReport.ParameterByName(\"seeTime\").AsString = ifNull(seeTime);\n");
      out.write("\t\t\tReport.ParameterByName(\"billId\").AsString = ifNull(key);   \t\t\t\t\t//处方单编号\n");
      out.write("\t\t\t//获取报表\n");
      out.write("\t\t\tvar Recordset = Report.DetailGrid.Recordset;\t//报表记录集对象\n");
      out.write("\t\t\tfor(var i = 0;i<inspectBill[key].length;i++){\n");
      out.write("\t\t\t\t// 计算辅材费用\n");
      out.write("\t\t\t\tif(inspectBill[key][i][\"showFlag\"] == 0 ){  //辅材信息\n");
      out.write("\t\t\t\t\tauxiliaryBill.push(inspectBill[key][i]);\n");
      out.write("\t\t\t\t\tfee2 += inspectBill[key][i][\"totCost\"];\n");
      out.write("\t\t\t\t\tcontinue;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t//计算检测总费用\n");
      out.write("\t\t\t\tvar price = inspectBill[key][i][\"totCost\"];\t\t//单项检测费用\n");
      out.write("\t\t\t\ttotCost += price;\n");
      out.write("\n");
      out.write("\t\t\t\t////////////////////////将检测信息推送到明细表中\n");
      out.write("\t\t\t\t//报表记录集的各个字段\n");
      out.write("\t\t\t\tvar itemPrice = Report.FieldByName(\"itemPrice\");\t//单项费用\n");
      out.write("\t\t\t\tvar itemName  = Report.FieldByName(\"itemName\");\t\t//单项名称\n");
      out.write("\t\t\t\tvar execDeptId= Report.FieldByName(\"execDeptId\");\t//检验地点\n");
      out.write("\t\t\t\tvar sampleId = Report.FieldByName(\"sampleId\");\t\t//样本类型\n");
      out.write("\t\t\t\t//匹配对应的检验地点名称和样本类型\n");
      out.write("\t\t\t\tvar execDeptName = getValueFromKey(execDeptData,inspectBill[key][i][\"execDeptId\"]);\n");
      out.write("\t\t\t\tvar sampleName = getValueFromKey(sampleData,inspectBill[key][i][\"sampleId\"]);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tRecordset.Append();\t\t//追加明细表数据\n");
      out.write("\t\t\t\titemPrice.Value = inspectBill[key][i][\"itemPrice\"];\n");
      out.write("\t\t\t\titemName.Value = inspectBill[key][i][\"itemName\"];\n");
      out.write("\t\t\t\texecDeptId.Value = execDeptName;\n");
      out.write("\t\t\t\tsampleId.Value = sampleName;\n");
      out.write("\t\t\t\tRecordset.Post();\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar subtotallFee = totCost+fee2;\n");
      out.write("\t\t\tReport.ParameterByName(\"fee1\").AsString = \"￥\"+totCost.toFixed(2);\t\t\t\t//收费\t\n");
      out.write("\t\t\tReport.ParameterByName(\"fee2\").AsString = \"￥\"+fee2.toFixed(2);\t\t\t\t\t//配套检查费用\n");
      out.write("\t\t\tReport.ParameterByName(\"subtotallFee\").AsString = \"￥\"+subtotallFee.toFixed(2);\t//小计\n");
      out.write("\t\t\tReport.ParameterByName(\"staff1\").AsString = \">>暂未数据<<\";\t\t//收费员\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tReport.Print(true);\n");
      out.write("\t\t}\n");
      out.write("\t\tif(!flag){\n");
      out.write("\t\t\ttop.mini.showTips({\n");
      out.write("\t\t\t\tcontent: \"无需要打印的检测单信息\",    \n");
      out.write("\t\t\t    state: \"success\",      \n");
      out.write("\t\t\t    x: \"center\",          \n");
      out.write("\t\t\t    y: \"center\",          \n");
      out.write("\t\t\t    timeout: 2000   \n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\treturn ;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 打印检查表\n");
      out.write("\tfunction printCheckBill(checkBill){\n");
      out.write("\t\tvar execDeptData = mini.get(\"execDeptId\").getData(); //获取执行科室的下拉框列表所有值\n");
      out.write("\t\tvar checkPointData = mini.get(\"checkPointId\").getData(); //获取检查部位的下拉框列表所有值\n");
      out.write("\t\tvar flag = false;\n");
      out.write("\t\tfor(var key in checkBill){\n");
      out.write("\t\t\tflag = true;\n");
      out.write("\t\t\tvar totCost = 0; \t\t\t\t//药费\n");
      out.write("\t\t\tvar fee2=0;\t\t\t\t\t\t//辅材费用\n");
      out.write("\t\t\tvar auxiliaryBill = [];\t\t\t//辅材信息\n");
      out.write("\t\t\tReport.LoadFromURL(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/report/template/checkBill.grf?t=\"+new Date().getTime());\n");
      out.write("\t\t\tReport.PrepareLoadData();\n");
      out.write("\t\t\t//获取通用表头信息\n");
      out.write("\t\t\tReport = printHeadInfo(Report);\n");
      out.write("\t\t\t//设置特定表头信息\t\n");
      out.write("\t\t\tvar date = new Date('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.seeTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');  \t//就诊时间\n");
      out.write("\t\t\tvar seeTime = date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate(); //格式时间\n");
      out.write("\t\t\tReport.ParameterByName(\"seeTime\").AsString = ifNull(seeTime);\n");
      out.write("\t\t\tReport.ParameterByName(\"billId\").AsString = ifNull(key);   \t\t\t\t\t//处方单编号\n");
      out.write("\t\t\t//获取报表\n");
      out.write("\t\t\tvar Recordset = Report.DetailGrid.Recordset;\t//报表记录集对象\n");
      out.write("\t\t\tfor(var i = 0;i<checkBill[key].length;i++){\n");
      out.write("\t\t\t\tif(checkBill[key][i][\"showFlag\"] == 0 ){  //辅材信息\n");
      out.write("\t\t\t\t\tauxiliaryBill.push(checkBill[key][i]);\n");
      out.write("\t\t\t\t\tfee2 += checkBill[key][i][\"totCost\"];\n");
      out.write("\t\t\t\t\tcontinue;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t//计算检测总费用\n");
      out.write("\t\t\t\tvar price = checkBill[key][i][\"totCost\"];\t\t\t//单项检查的总费用\n");
      out.write("\t\t\t\ttotCost += price;\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//////////////////////// 将检测信息推送到明细表中\n");
      out.write("\t\t\t\t//报表记录集的各个字段\n");
      out.write("\t\t\t\tvar itemName  = Report.FieldByName(\"itemName\");\t\t\t//单项名称\n");
      out.write("\t\t\t\tvar checkPointId = Report.FieldByName(\"checkPointId\");\t//检查部位\n");
      out.write("\t\t\t\tvar execDeptId= Report.FieldByName(\"execDeptId\");\t\t//检验地点\n");
      out.write("\t\t\t\tvar itemPrice = Report.FieldByName(\"itemPrice\");\t\t//单项费用\n");
      out.write("\t\t\t\tvar ordDosage = Report.FieldByName(\"ordDosage\");\t\t//总量\n");
      out.write("\t\t\t\t//匹配对应的检验地点名称和样本类型\n");
      out.write("\t\t\t\tvar execDeptName = getValueFromKey(execDeptData,checkBill[key][i][\"execDeptId\"]);\n");
      out.write("\t\t\t\tvar checkPointName = getValueFromKey(checkPointData,checkBill[key][i][\"checkPointId\"])\n");
      out.write("\t\t\t\tRecordset.Append();\t\t//追加明细表数据\n");
      out.write("\t\t\t\titemPrice.Value = checkBill[key][i][\"itemPrice\"];\n");
      out.write("\t\t\t\titemName.Value = checkBill[key][i][\"itemName\"];\n");
      out.write("\t\t\t\tordDosage.Value = checkBill[key][i][\"ordDosage\"]+checkBill[key][i][\"ordStdDosageUnit\"];\n");
      out.write("\t\t\t\tcheckPointId.Value = checkPointName\n");
      out.write("\t\t\t\texecDeptId.Value = execDeptName;\n");
      out.write("\t\t\t\tRecordset.Post();\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar subtotallFee = totCost+fee2;\n");
      out.write("\t\t\tReport.ParameterByName(\"fee1\").AsString = \"￥\"+totCost.toFixed(2);\t\t\t\t//收费\t\n");
      out.write("\t\t\tReport.ParameterByName(\"fee2\").AsString = \"￥\"+fee2.toFixed(2);\t\t\t\t\t//配套检查费用\n");
      out.write("\t\t\tReport.ParameterByName(\"subtotallFee\").AsString = \"￥\"+subtotallFee.toFixed(2);\t//小计\n");
      out.write("\t\t\tReport.ParameterByName(\"staff1\").AsString = \">>暂未数据<<\";\t\t//收费员\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tReport.Print(true);\n");
      out.write("\t\t}\n");
      out.write("\t\tif(!flag){\n");
      out.write("\t\t\ttop.mini.showTips({\n");
      out.write("\t\t\t\tcontent: \"无需要打印的检查单信息\",    \n");
      out.write("\t\t\t    state: \"success\",      \n");
      out.write("\t\t\t    x: \"center\",          \n");
      out.write("\t\t\t    y: \"center\",          \n");
      out.write("\t\t\t    timeout: 2000   \n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\treturn ;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 打印治疗单\n");
      out.write("\tfunction printTreatmentBill(treatmentBill){\n");
      out.write("\t\tvar execDeptData = mini.get(\"execDeptId\").getData(); //获取执行科室的下拉框列表所有值\n");
      out.write("\t\tvar flag = false;\n");
      out.write("\t\tfor(var key in treatmentBill){\n");
      out.write("\t\t\tflag = true;\n");
      out.write("\t\t\tvar totCost = 0; \t\t\t\t//药费\n");
      out.write("\t\t\tvar fee2=0;\t\t\t\t\t\t//辅材费用\n");
      out.write("\t\t\tvar auxiliaryBill = [];\t\t\t//辅材信息\n");
      out.write("\t\t\tReport.LoadFromURL(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/report/template/treatmentBill.grf?t=\"+new Date().getTime());\n");
      out.write("\t\t\tReport.PrepareLoadData();\n");
      out.write("\t\t\t//获取通用表头信息\n");
      out.write("\t\t\tReport = printHeadInfo(Report);\n");
      out.write("\t\t\t//设置特定表头信息\t\n");
      out.write("\t\t\tvar date = new Date('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.seeTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');  \t//就诊时间\n");
      out.write("\t\t\tvar seeTime = date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate(); //格式时间\n");
      out.write("\t\t\tReport.ParameterByName(\"seeTime\").AsString = ifNull(seeTime);\n");
      out.write("\t\t\tReport.ParameterByName(\"billId\").AsString = ifNull(key);   \t\t\t\t\t//处方单编号\n");
      out.write("\t\t\t//获取报表\n");
      out.write("\t\t\tvar Recordset = Report.DetailGrid.Recordset;\t//报表记录集对象\n");
      out.write("\t\t\tfor(var i = 0;i<treatmentBill[key].length;i++){\n");
      out.write("\t\t\t\t// 计算辅材的费用\n");
      out.write("\t\t\t\tif(treatmentBill[key][i][\"showFlag\"] == 0 ){  //辅材信息\n");
      out.write("\t\t\t\t\tauxiliaryBill.push(treatmentBill[key][i]);\n");
      out.write("\t\t\t\t\tfee2 += treatmentBill[key][i][\"totCost\"];\n");
      out.write("\t\t\t\t\tcontinue;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t//计算检测总费用\n");
      out.write("\t\t\t\tvar price = treatmentBill[key][i][\"totCost\"];\t\t\t//单项检查的总费用\n");
      out.write("\t\t\t\ttotCost += price;\n");
      out.write("\t\t\t\t////////////////////////将检测信息推送到明细表中\n");
      out.write("\t\t\t\t//报表记录集的各个字段\n");
      out.write("\t\t\t\tvar itemName  = Report.FieldByName(\"itemName\");\t\t\t//单项名称\n");
      out.write("\t\t\t\tvar execDeptId= Report.FieldByName(\"execDeptId\");\t\t//检验地点\n");
      out.write("\t\t\t\tvar itemPrice = Report.FieldByName(\"itemPrice\");\t\t//单项费用\n");
      out.write("\t\t\t\tvar ordDosage = Report.FieldByName(\"ordDosage\");\t\t//总量\n");
      out.write("\t\t\t\t//匹配对应的检验地点名称和样本类型\n");
      out.write("\t\t\t\tvar execDeptName = getValueFromKey(execDeptData,treatmentBill[key][i][\"execDeptId\"]);\n");
      out.write("\t\t\t\tRecordset.Append();\t\t//追加明细表数据\n");
      out.write("\t\t\t\titemPrice.Value = treatmentBill[key][i][\"itemPrice\"];\n");
      out.write("\t\t\t\titemName.Value = treatmentBill[key][i][\"itemName\"];\n");
      out.write("\t\t\t\tordDosage.Value = treatmentBill[key][i][\"ordDosage\"]+treatmentBill[key][i][\"ordStdDosageUnit\"];\n");
      out.write("\t\t\t\texecDeptId.Value = execDeptName;\n");
      out.write("\t\t\t\tRecordset.Post();\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar subtotallFee = totCost+fee2;\n");
      out.write("\t\t\tReport.ParameterByName(\"fee1\").AsString = \"￥\"+totCost.toFixed(2);\t\t\t\t//收费\t\n");
      out.write("\t\t\tReport.ParameterByName(\"fee2\").AsString = \"￥\"+fee2.toFixed(2);\t\t\t\t\t//配套检查费用\n");
      out.write("\t\t\tReport.ParameterByName(\"subtotallFee\").AsString = \"￥\"+subtotallFee.toFixed(2);\t//小计\n");
      out.write("\t\t\tReport.ParameterByName(\"staff1\").AsString = \">>暂未数据<<\";\t\t//收费员\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tReport.Print(true);\n");
      out.write("\t\t}\n");
      out.write("\t\tif(!flag){\n");
      out.write("\t\t\ttop.mini.showTips({content: \"无需要打印的治疗单信息\", state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t}\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 打印\n");
      out.write("\tfunction print(index, flag) {\n");
      out.write("\t\tvar isChange = mini.get(\"grid1\").isChanged();\n");
      out.write("\t\tif(isChange){\n");
      out.write("\t\t\ttop.mini.showTips({content: \"数据已经修改了，请保存后再打印！\", state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tvar data;\n");
      out.write("\t\tif(!flag){ // 采集用户选中的数据\n");
      out.write("\t\t\tdata = grid.getSelecteds();\n");
      out.write("\t\t\tif(data.length == 0) {\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"未选择任何处方！\", state: \"success\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tnowPrint(index, flag, data);\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\t$.ajax({ // 数据采集, 打印全部采集整个gird1的数据, 打印部分数据, 采集选中的数据\n");
      out.write("\t           type: \"post\",\n");
      out.write("\t\t       url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getOutOrderList.do\", \n");
      out.write("\t\t       cache : false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data: {registerId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"},\n");
      out.write("\t\t\t   success: function(orders) {\n");
      out.write("\t\t\t\t   var printOrders = [];\n");
      out.write("\t\t\t\t   for(var i = 0; i < orders.length; i++) {\n");
      out.write("\t\t\t\t\t\tif(orders[i].subMaterialFlag == \"0\" && orders[i].itemId) {\n");
      out.write("\t\t\t\t\t\t\tprintOrders.push(orders[i]);\n");
      out.write("\t\t\t\t\t\t};\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t   nowPrint(index, flag, printOrders);\n");
      out.write("\t\t\t   }\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\t// 打印单据 ———— index打印单据的类型, flag —— 是否全部打印\n");
      out.write(" \tfunction nowPrint(index, flag, data){\n");
      out.write("\t\t//获取分方后的数据\n");
      out.write("\t\tvar list={};\n");
      out.write("\t\tlist = sortPrescription(data);\n");
      out.write("\t\tswitch(index) {\n");
      out.write("\t\t\tcase 1:\t// 打印处方单\n");
      out.write("\t\t\t\tvar prescription=list[\"M\"];\n");
      out.write("\t\t\t\tprintPrescription(prescription);\t// 打印的处方单\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\tcase 2:\t// 打印检测单\n");
      out.write("\t\t\t\tvar inspectBill = list[\"UL\"];\n");
      out.write("\t\t\t\tprintInspectBill(inspectBill);\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\tcase 3:\t// 打印检查单\n");
      out.write("\t\t\t\tvar checkBill = list[\"UC\"];\n");
      out.write("\t\t\t\tprintCheckBill(checkBill);\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\tcase 4:\t// 打印治疗单\n");
      out.write("\t\t\t\tvar treatBill = list[\"UZ\"];\n");
      out.write("\t\t\t\tprintTreatmentBill(treatBill);\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\tcase 5: // 打印所有单据\n");
      out.write("\t\t\t\tvar prescription=list[\"M\"];\n");
      out.write("\t\t\t\tprintPrescription(prescription);\t// 打印的处方单\n");
      out.write("\t\t\t\tvar checkBill = list[\"UC\"];\n");
      out.write("\t\t\t\tprintCheckBill(checkBill);\t\t// 打印检查单\n");
      out.write("\t\t\t\tvar inspectBill = list[\"UL\"];\n");
      out.write("\t\t\t\tprintInspectBill(inspectBill);\t// 打印检测单\n");
      out.write("\t\t\t\tvar treatBill = list[\"UZ\"];\n");
      out.write("\t\t\t\tprintTreatmentBill(treatBill);\t// 打印治疗单\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\tdefault:\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"打印预览功能正在维护中\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t}\n");
      out.write("\t}\t\n");
      out.write("\t\n");
      out.write("\t// 诊断关联\n");
      out.write("\tfunction onItemClick(e) {\n");
      out.write("\t\ttop.mini.alert(\"存疑！\");\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 获取当前患者全部医嘱\n");
      out.write("\tfunction allOrders() {\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getOutOrderList.do\";\n");
      out.write("\t\tvar data = {registerId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"};\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t           type: \"post\", \n");
      out.write("\t\t       url: url, \n");
      out.write("\t\t       cache : false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data : data,\n");
      out.write("\t\t\t   success: function(orders) {\n");
      out.write("\t\t\t\t   return orders;\n");
      out.write("\t\t\t   }\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 初始加载\n");
      out.write("\tfunction initRecipe() {\n");
      out.write("\t\tgrid.clearRows();\n");
      out.write("\t\ttab.removeAll();\n");
      out.write("\t\tvar seeNoArr = [];\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getOutOrderList.do\";\n");
      out.write("\t\tvar data = {registerId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"};\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t           type: \"post\", \n");
      out.write("\t\t       url: url, \n");
      out.write("\t\t       cache : false, \n");
      out.write("\t\t       async: false,\n");
      out.write("\t\t       data : data,\n");
      out.write("\t\t\t   success: function(orders) {\n");
      out.write("\t\t\t\t    if(orders.length <= 0) {\n");
      out.write("\t\t\t\t    \taddNewRecipe();\n");
      out.write("\t\t\t\t    \treturn; \n");
      out.write("\t\t\t\t    }\n");
      out.write("\t\t\t\t    var num = tab.getTabs().length; \n");
      out.write("\t\t\t\t\tvar number = 1; \n");
      out.write("\t\t\t\t\tfor(var i = 0; i < orders.length; i++) {\n");
      out.write("\t\t\t\t\t\tvar seeNo = orders[i].seeNo;\n");
      out.write("\t\t\t\t\t\tif(seeNoArr.indexOf(seeNo) == -1) {\n");
      out.write("\t\t\t\t\t\t\tseeNoArr.push(orders[i].seeNo);\n");
      out.write("\t\t\t\t\t\t\t// 样式设定\n");
      out.write("\t\t\t\t\t\t\tvar order = orders[i];\n");
      out.write("\t\t\t\t\t\t\tvar style = \"color: #000;\";\n");
      out.write("\t\t\t\t\t\t\tif(order.orderState == \"New\") {\n");
      out.write("\t\t\t\t\t\t\t\tstyle = \"color: #000;\";\n");
      out.write("\t\t\t\t\t\t\t} else if(order.orderState == \"SV\") {\n");
      out.write("\t\t\t\t\t\t\t\tstyle = \"color: #090;\";\n");
      out.write("\t\t\t\t\t\t\t} else if(order.orderState == \"FE\") {\n");
      out.write("\t\t\t\t\t\t\t\tstyle = \"color: #99f;\";\n");
      out.write("\t\t\t\t\t\t\t} else if(order.orderState == \"DC\") {\n");
      out.write("\t\t\t\t\t\t\t\tstyle = \"color: #f00;\";\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\tvar recipe = {\n");
      out.write("\t\t\t\t\t\t\t  id: orders[i].seeNo,\n");
      out.write("\t\t\t\t\t\t\t  name: \"save\",\n");
      out.write("\t\t\t\t\t\t\t  title: \"方\"+ number +\"【<span>\"+ orders[i].tag.totCost +\"元</span>】\",\n");
      out.write("\t\t\t\t\t\t\t  order : order,\n");
      out.write("\t\t\t\t\t\t\t  showCloseButton: true,\n");
      out.write("\t\t\t\t\t\t\t  headerStyle: style,\n");
      out.write("\t\t\t\t\t\t\t  bodyStyle: \"\"\n");
      out.write("\t\t\t\t\t\t\t};\n");
      out.write("\t\t\t\t\t\t\taddTab(recipe);\n");
      out.write("\t\t\t\t\t\t\tnumber++;\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t};\n");
      out.write("\t\t\t\t\tvar tabArr = tab.getTabs(); \n");
      out.write("\t\t\t\t\ttab.activeTab(tabArr[0]);\t\t\t\n");
      out.write("\t\t\t\t\tvar activeTab = tab.getActiveTab();\n");
      out.write("\t\t\t  }\n");
      out.write("\t\t});\n");
      out.write("\t\t$(\"#toolbar\").show();\n");
      out.write("\t\t$(\".detail\").show();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t // 添加一个处方\n");
      out.write("\t function addTab(newRecipe) {\n");
      out.write("          var addTab = tab.addTab(newRecipe);\n");
      out.write("          tab.activeTab(addTab);\n");
      out.write("      }\n");
      out.write("\t \n");
      out.write("\t  // 移除一个处方\n");
      out.write("      function removeTab() {\n");
      out.write("          var tabs = mini.get(\"tabs1\");\n");
      out.write("          var tab = tabs.getActiveTab();\n");
      out.write("          if (tab) {\n");
      out.write("              tabs.removeTab(tab);\n");
      out.write("          };\n");
      out.write("      }\n");
      out.write("\t  \n");
      out.write("      function hideTab() {\n");
      out.write("          var tabs = mini.get(\"tabs1\");\n");
      out.write("          var tab = tabs.getTab(\"tab1\");\n");
      out.write("          if (tab) {\n");
      out.write("              tabs.updateTab(tab, { visible: false });\n");
      out.write("          }\n");
      out.write("      }\n");
      out.write("      \n");
      out.write("     // 显示处方\n");
      out.write("    function showOrders() {\n");
      out.write("    \tvar activeTab = tab.getActiveTab();\n");
      out.write("\t   \tif(!activeTab) {\n");
      out.write("\t   \t\tgrid.clearRows();\n");
      out.write("\t   \t\treturn; \n");
      out.write("\t   \t} \n");
      out.write("    \tvar rows = [];\n");
      out.write(" \t\t$.ajax({  \n");
      out.write("\t        type: \"post\",  \n");
      out.write("\t        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getOutOrderList.do\",\n");
      out.write("\t        data: {registerId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", seeNo: activeTab.order.seeNo},\n");
      out.write("\t        async: false,  \n");
      out.write("\t        success: function(orders){  \n");
      out.write("\t        \tfor(var i = 0; i < orders.length; i++) {\n");
      out.write("\t\t\t\t\tif(orders[i].seeNo == activeTab.id) {\n");
      out.write("\t\t\t\t\t\trows.push(orders[i]);\n");
      out.write("\t\t\t\t\t}\t\t\n");
      out.write("\t\t\t\t}\n");
      out.write("\t \t\t\tgrid.loadData(rows);\n");
      out.write("\t \t\t\tif(rows.length > 0) { \n");
      out.write("\t \t\t\t\tvar title = activeTab.title.replace(/【.*】/g, \"【\"+ rows[0].tag.totCost +\"元】\");\n");
      out.write("\t \t\t\t} else {\n");
      out.write("\t \t\t\t\t\n");
      out.write("\t \t\t\t}\n");
      out.write("\t \t\t\ttab.updateTab(activeTab, {title: title});\n");
      out.write("\t \t\t\tsortGrid();\n");
      out.write("\t \t\t\tcomboRender();\n");
      out.write("\t \t\t\tgrid.accept();\n");
      out.write("\t        }\n");
      out.write("\t    }); \n");
      out.write(" \t\t\n");
      out.write("     }\n");
      out.write("     \n");
      out.write("  \t// 医嘱加载时事件\n");
      out.write("  \tfunction load(e) {\n");
      out.write("\t\tconsole.log(e);\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t// 面板切换\n");
      out.write("  \tfunction activechanged(e) {\n");
      out.write("\t \tif(e.tab) {\n");
      out.write("\t \t\tif(e.tab.id && e.tab.name == \"save\") {\n");
      out.write("\t \t\t\tshowOrders();\n");
      out.write("\t \t\t} else {\n");
      out.write("\t \t\t\treturn;\n");
      out.write("\t \t\t}\n");
      out.write("\t \t}\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t// 面板切换前\n");
      out.write("  \tfunction beforeactivechanged(e) {\n");
      out.write("  \t\tif(!checkRecipe()) {\n");
      out.write("  \t\t\te.cancel = true; \n");
      out.write("  \t\t};\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write(" \t// 节点选中时事件\n");
      out.write("\tfunction onBeforeLabelEdit (e) {\n");
      out.write("\t\tgroupOldName.setValue(e.node.text);\n");
      out.write("\t}\n");
      out.write("  \t\n");
      out.write("\t// 拖拽树节点\n");
      out.write("\tfunction dragDrop (e) {\n");
      out.write("\t\tvar treeNode = e.dragNode;\n");
      out.write("\t\te.cancel = true;\n");
      out.write("\t\tif (treeNode._level == 0 && treeNode.groupKind) {\n");
      out.write("\t\t\tmini.showTips({\n");
      out.write("\t\t        content: \"根节点不可以移动!\",    \n");
      out.write("\t\t        state: \"warning\", \n");
      out.write("\t\t        x: \"center\",  \n");
      out.write("\t\t        y: \"center\", \n");
      out.write("\t\t        timeout: 2000     \n");
      out.write("\t\t    });\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tvar nodeAt = e.dropNode;\n");
      out.write("\t\t\tif (nodeAt) {\n");
      out.write("\t\t\t\tif (treeNode.tagType && treeNode.tagType == \"GroupClassify\") {\n");
      out.write("\t\t\t\t\tvar groupClassify = mini.clone(treeNode);\n");
      out.write("\t\t\t\t\tif (isCanDo(groupClassify,null,false)) {\n");
      out.write("\t\t\t\t\t\tif (nodeAt.tagType && nodeAt.tagType == \"GroupClassify\") {\n");
      out.write("\t\t\t\t\t\t\tvar groupClassify2 = mini.clone(nodeAt);\n");
      out.write("\t\t\t\t\t\t\tif (groupClassify.groupKind != groupClassify2.groupKind) {\n");
      out.write("\t\t\t\t\t\t\t\te.cancel = true;\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\n");
      out.write("\t\t\t\t\t\t\t        content: \"不同类别间不允许拖动！\",    \n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \n");
      out.write("\t\t\t\t\t\t\t    });\n");
      out.write("\t\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tif (groupClassify.parentId == groupClassify2.parentId) {\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否互换顺序?\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\tvar groupClassifyJson = mini.encode(groupClassify);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\tvar groupClassify2Json = mini.encode(groupClassify2);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/replaceGroupClassify.do\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tgroupClassifyJson: groupClassifyJson,\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tgroupClassify2Json: groupClassify2Json\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\tif (groupClassify.parentId == groupClassify2.parentId) {\n");
      out.write("\t\t\t\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否将【\" + groupClassify.text + \"】移到【\" + groupClassify2.text + \"】下?\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/updateGroupClassify.do\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: groupClassify.id,\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: groupClassify.sortNo,\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tparentId: groupClassify2.id\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t} else if (nodeAt._level == 0 && nodeAt.groupKind) {\n");
      out.write("\t\t\t\t\t\t\tif (groupClassify.groupKind != nodeAt.groupKind) {\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\n");
      out.write("\t\t\t\t\t\t\t        content:  \"不同类别间不允许拖动！\",    \n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \n");
      out.write("\t\t\t\t\t\t\t    });\n");
      out.write("\t\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tvar text = \"\";\n");
      out.write("\t\t\t\t\t\t\t\tif (groupClassify.parentId && groupClassify.parentId != text) {\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否将【\" + groupClassify.text + \"】移到根目录下?\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/updateGroupClassify.do\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: groupClassify.id,\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: groupClassify.sortNo,\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tparentId: text\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\tmini.showTips({content: \"文件夹不允许这样移动!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000 });\n");
      out.write("\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t} else if (treeNode.tagType && treeNode.tagType == \"Group\") {\n");
      out.write("\t\t\t\t\tvar group = mini.clone(treeNode);\n");
      out.write("\t\t\t\t\tif (isCanDo(null,group,false)) {\n");
      out.write("\t\t\t\t\t\tif (nodeAt.tagType && nodeAt.tagType == \"GroupClassify\") {\n");
      out.write("\t\t\t\t\t\t\tvar groupClassify2 = mini.clone(nodeAt);\n");
      out.write("\t\t\t\t\t\t\tif (group.groupType != groupClassify2.groupKind) {\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({content: \"不同类别间不允许拖动!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000 });\n");
      out.write("\t\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t\t} else if (group.classifyId == groupClassify2.id) {\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({content: \"目标节点已经是父级节点，不需要移动!\", state: \"warning\", x: \"center\", y: \"center\",timeout: 2000 });\n");
      out.write("\t\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t\t\t\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t\t\t\t\t\t    message: \"是否将【\" + group.text + \"】移到【\" + groupClassify2.text + \"】下?\",\n");
      out.write("\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t\t\t\t\t\t    callback: function(action){\n");
      out.write("\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/updateGroupInfo.do\",\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t{\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tgroupId: group.id,\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: group.sortNo,\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: groupClassify2.id\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t);\n");
      out.write("\t\t\t\t\t\t\t\t    \t} else {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\treturn;\n");
      out.write("\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t} else if (nodeAt.tagType && nodeAt.tagType == \"Group\") {\n");
      out.write("\t\t\t\t\t\t\tvar group2 = mini.clone(nodeAt);\n");
      out.write("\t\t\t\t\t\t\tif (group.groupType != group2.groupType) {\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\n");
      out.write("\t\t\t\t\t\t\t        content: \"不同类别间不允许拖动！\",    \n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \n");
      out.write("\t\t\t\t\t\t\t    });\n");
      out.write("\t\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t\t\t\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t\t\t\t\t\t    message: \"是否互换顺序?\",\n");
      out.write("\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t\t\t\t\t\t    callback: function(action){\n");
      out.write("\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tvar groupJson = mini.encode(group);\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tvar group2Json = mini.encode(group2);\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/replaceGroup.do\",\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t{\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tgroupJson: groupJson,\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tgroup2Json: group2Json\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t);\n");
      out.write("\t\t\t\t\t\t\t\t    \t} else {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\treturn;\n");
      out.write("\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t} else if (nodeAt._level == 0 && nodeAt.groupKind) {\n");
      out.write("\t\t\t\t\t\t\tif (group.groupType != nodeAt.groupKind) {\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\n");
      out.write("\t\t\t\t\t\t\t        content: \"不同类别间不允许拖动！\",    \n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \n");
      out.write("\t\t\t\t\t\t\t    });\n");
      out.write("\t\t\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\tvar text2 = \"\";\n");
      out.write("\t\t\t\t\t\t\t\tif (group.classifyId && group.classifyId != text2) {\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否将【\" + group.text + \"】移到根目录下?\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/updateGroupInfo.do\",\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tgroupId: group.id,\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: group.sortNo,\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: text2\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 刷新树\n");
      out.write("\tfunction refrshGroup () {\n");
      out.write("\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/refrshGroup.do?orderClassifyType=O&sysType=O\");\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 判断是否有操作住院组套权限\n");
      out.write("\tfunction isCanDo (groupClassify,group,isDelete) {\n");
      out.write("\t\tvar flag = false;\n");
      out.write("\t\tvar groupClassifyJson = mini.encode(groupClassify);\n");
      out.write("\t\tvar groupJson = mini.encode(group);\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/isCanDo.do\",\n");
      out.write("            data: {\n");
      out.write("            \tgroupClassifyJson: groupClassifyJson,\n");
      out.write("            \tgroupJson: groupJson,\n");
      out.write("            \tisDelete: isDelete\n");
      out.write("            },\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("            \tif (r == \"ok\") {\n");
      out.write("            \t\tflag = true;\n");
      out.write("            \t} else {\n");
      out.write("            \t\tmini.showTips({\n");
      out.write("\t\t\t\t        content: r,    \n");
      out.write("\t\t\t\t        state: \"warning\", \n");
      out.write("\t\t\t\t        x: \"center\",  \n");
      out.write("\t\t\t\t        y: \"center\", \n");
      out.write("\t\t\t\t        timeout: 2000     \n");
      out.write("\t\t\t\t    });\n");
      out.write("            \t\tflag = false;\n");
      out.write("            \t}\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t\treturn flag;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t// 双击组套(树)节点\n");
      out.write("\tfunction onDoubleClick (e) {\n");
      out.write("\t\tif (e.node && e.node.tagType == \"Group\") {\n");
      out.write("\t\t\t$.post(\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/checkGroupPriv.do\",\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tgroupType: e.node.groupType\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\tmini.open({\n");
      out.write("\t\t\t\t\t\t    url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/detail.do?orderClassifyType=L&groupId=\" + e.node.id,\n");
      out.write("\t\t\t\t\t\t    title: \"组套选择【\" + e.node.text + \"】\",      \n");
      out.write("\t\t\t\t\t\t    width: 900,    \n");
      out.write("\t\t\t\t\t\t    height: 600,     \n");
      out.write("\t\t\t\t\t\t    ondestroy: function (action) {  // 弹出页面关闭前\n");
      out.write("//\t\t\t \t\t\t        if (action == \"ok\") {       //如果点击“确定”\n");
      out.write("//\t\t\t \t\t\t            var iframe = this.getIFrameEl();\n");
      out.write("//\t\t\t \t\t\t            //获取选中、编辑的结果\n");
      out.write("//\t\t\t \t\t\t            var data = iframe.contentWindow.GetData();\n");
      out.write("//\t\t\t \t\t\t            data = mini.clone(data);    //必须。克隆数据。\n");
      out.write("//\t\t\t \t\t\t        }                        \n");
      out.write("\t\t\t\t\t\t    }\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.alert(r);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t);\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write(" \t\n");
      out.write("\t// 判断是否有操作住院组套权限\n");
      out.write("\tfunction checkGroupPriv (groupType) {\n");
      out.write("\t\tvar flag = false;\n");
      out.write("\t\t$.ajax({\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/checkGroupPriv.do\",\n");
      out.write("            data: {groupType: groupType},\n");
      out.write("            type: \"post\",\n");
      out.write("            async: false,\n");
      out.write("            success: function (r) {\n");
      out.write("            \tif (r == \"ok\") {\n");
      out.write("            \t\tflag = true;\n");
      out.write("            \t} else {\n");
      out.write("            \t\tflag = false;\n");
      out.write("            \t}\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\t\treturn flag;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 节点编辑完成后修改组套名称\n");
      out.write("\tfunction onAfterLabelEdit (e) {\n");
      out.write("\t\tvar selectedNode = e.node\n");
      out.write("\t\tif (!e.node.text.trim()) {\n");
      out.write("\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tif (groupOldName.value.trim() != e.node.text.trim()) {\n");
      out.write("\t\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\n");
      out.write("\t\t\t\tvar groupClassify = mini.clone(selectedNode);\n");
      out.write("\t\t\t\tif (!checkGroupPriv2(groupClassify)) {\n");
      out.write("\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t$.post(\n");
      out.write("\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/updateGroupClassifyName.do\",\n");
      out.write("\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\tclassifyId: selectedNode.id,\n");
      out.write("\t\t\t\t\t\tclassifyName: selectedNode.text\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\tmini.showTips({\n");
      out.write("\t        \t\t\t        content: \"修改成功！\",    \n");
      out.write("\t        \t\t\t        state: \"success\", \n");
      out.write("\t        \t\t\t        x: \"center\",  \n");
      out.write("\t        \t\t\t        y: \"center\", \n");
      out.write("\t        \t\t\t        timeout: 2000     \n");
      out.write("\t        \t\t\t    });\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\n");
      out.write("\t\t\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t);\n");
      out.write("\t\t\t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\n");
      out.write("\t\t\t\tvar group = mini.clone(selectedNode);\n");
      out.write("\t\t\t\tif (!checkGroupPriv2(group)) {\n");
      out.write("\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t};\n");
      out.write("\t\t\t\t$.post(\n");
      out.write("\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/updateGroupName.do\",\n");
      out.write("\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\tgroupId: selectedNode.id,\n");
      out.write("\t\t\t\t\t\tgroupname: selectedNode.text\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\t\tmini.showTips({content: \"修改成功！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\n");
      out.write("\t\t\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 删除组套\n");
      out.write("\tfunction deleteItem () {\n");
      out.write("\t\tvar selectedNode = tree.getSelectedNode();\n");
      out.write("\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\n");
      out.write("\t\t\tvar groupClassify = mini.clone(selectedNode);\n");
      out.write("\t\t\tif (!isCanDo(groupClassify,null,true)) {\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t    message: \"是否删除组套文件夹 \" + groupClassify.text,\n");
      out.write("\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t    callback: function(action){\n");
      out.write("\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/deleteGroupClassify.do\",\n");
      out.write("\t\t\t    \t\t\t{\n");
      out.write("\t\t\t    \t\t\t\tclassifyId: groupClassify.id\n");
      out.write("\t\t\t    \t\t\t},\n");
      out.write("\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t    \t\t\t\t\tmini.showTips({\n");
      out.write("\t\t\t        \t\t\t        content: \"删除成功！\",    \n");
      out.write("\t\t\t        \t\t\t        state: \"warning\", \n");
      out.write("\t\t\t        \t\t\t        x: \"center\",  \n");
      out.write("\t\t\t        \t\t\t        y: \"center\", \n");
      out.write("\t\t\t        \t\t\t        timeout: 2000     \n");
      out.write("\t\t\t        \t\t\t    });\n");
      out.write("\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t    \t\t\t\trefrshGroup();\n");
      out.write("\t\t\t    \t\t\t}\n");
      out.write("\t\t\t    \t\t);\n");
      out.write("\t\t\t    \t}\n");
      out.write("\t\t\t    }\n");
      out.write("\t\t\t});\n");
      out.write("\t\t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\n");
      out.write("\t\t\tvar group = mini.clone(selectedNode);\n");
      out.write("\t\t\tif (!isCanDo(null,group,true)) {\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tmini.showMessageBox({\n");
      out.write("\t\t\t    title: \"提示\",    \n");
      out.write("\t\t\t    message: \"是否删除组套 \" + group.text,\n");
      out.write("\t\t\t    buttons: [\"ok\", \"no\"],    \n");
      out.write("\t\t\t    iconCls: \"mini-messagebox-question\",\n");
      out.write("\t\t\t    callback: function(action){\n");
      out.write("\t\t\t    \tif (action == \"ok\") {\n");
      out.write("\t\t\t    \t\t$.post(\n");
      out.write("\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/deleteGroup.do\",\n");
      out.write("\t\t\t    \t\t\t{\n");
      out.write("\t\t\t    \t\t\t\tgroupId: group.id\n");
      out.write("\t\t\t    \t\t\t},\n");
      out.write("\t\t\t    \t\t\tfunction (r) {\n");
      out.write("\t\t\t    \t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t    \t\t\t\t\tmini.showTips({\n");
      out.write("\t\t\t        \t\t\t        content: \"删除成功！\",    \n");
      out.write("\t\t\t        \t\t\t        state: \"warning\", \n");
      out.write("\t\t\t        \t\t\t        x: \"center\",  \n");
      out.write("\t\t\t        \t\t\t        y: \"center\", \n");
      out.write("\t\t\t        \t\t\t        timeout: 2000     \n");
      out.write("\t\t\t        \t\t\t    });\n");
      out.write("\t\t\t    \t\t\t\t} else {\n");
      out.write("\t\t\t    \t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t    \t\t\t\trefrshGroup();\n");
      out.write("\t\t\t    \t\t\t}\n");
      out.write("\t\t\t    \t\t);\n");
      out.write("\t\t\t    \t}\n");
      out.write("\t\t\t    }\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 判断是否有操作住院组套权限\n");
      out.write("\tfunction checkGroupPriv2 (obj) {\n");
      out.write("\t\tvar flag = false;\n");
      out.write("\t\tif (obj.tagType && obj.tagType == \"Group\") {\n");
      out.write("\t\t\tvar groupJson = mini.encode(obj);\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/checkGroupPriv2.do\",\n");
      out.write("\t\t\t\tdata: {groupJson: groupJson},\n");
      out.write("\t\t\t\ttype: \"post\",\n");
      out.write("\t\t\t\tasync: false,\n");
      out.write("\t\t\t\tsuccess: function (r) {\n");
      out.write("\t\t\t\t\tif (r == \"ok\") {\n");
      out.write("\t            \t\tflag = true;\n");
      out.write("\t            \t} else {\n");
      out.write("\t            \t\tmini.showTips({content: r, state: \"warning\", x: \"center\", y: \"center\", timeout: 2000 });\n");
      out.write("\t            \t\tflag = false;\n");
      out.write("\t            \t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tif (obj.tagType && obj.tagType != \"GroupClassify\") {\n");
      out.write("\t\t\t\tmini.showTips({\n");
      out.write("\t\t\t        content: \"组套类型错误，请联系管理员！\",    \n");
      out.write("\t\t\t        state: \"warning\", \n");
      out.write("\t\t\t        x: \"center\",  \n");
      out.write("\t\t\t        y: \"center\", \n");
      out.write("\t\t\t        timeout: 2000     \n");
      out.write("\t\t\t    });\n");
      out.write("        \t\tflag = false;\n");
      out.write("        \t\treturn flag;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar groupClassifyJson = mini.encode(obj);\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/checkGroupPriv2.do\",\n");
      out.write("\t\t\t\tdata: {groupClassifyJson: groupClassifyJson},\n");
      out.write("\t\t\t\ttype: \"post\",\n");
      out.write("\t\t\t\tasync: false,\n");
      out.write("\t\t\t\tsuccess: function (r) {\n");
      out.write("\t\t\t\t\tif (r == \"ok\") {\n");
      out.write("\t            \t\tflag = true;\n");
      out.write("\t            \t} else {\n");
      out.write("\t            \t\tmini.showTips({\n");
      out.write("\t    \t\t\t        content: r,    \n");
      out.write("\t    \t\t\t        state: \"warning\", \n");
      out.write("\t    \t\t\t        x: \"center\",  \n");
      out.write("\t    \t\t\t        y: \"center\", \n");
      out.write("\t    \t\t\t        timeout: 2000     \n");
      out.write("\t    \t\t\t    });\n");
      out.write("\t            \t\tflag = false;\n");
      out.write("\t            \t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\treturn flag;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//修改组套名称\n");
      out.write("\tfunction changeGroupName () {\n");
      out.write("\t\tvar selectedNode = tree.getSelectedNode();\n");
      out.write("\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\n");
      out.write("\t\t\tif (!isCanDo(selectedNode,null,false)) {\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\n");
      out.write("\t\t\tif (!isCanDo(null,selectedNode,false)) {\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\ttree.beginEdit(selectedNode);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 增加文件夹\n");
      out.write("\tfunction addItem () {\n");
      out.write("\t\tvar selectedNode = tree.getSelectedNode();\n");
      out.write("\t\tvar groupClassify ={};\n");
      out.write("\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\n");
      out.write("\t\t\tgroupClassify = mini.clone(selectedNode);\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tif (!(selectedNode._level == 0 && selectedNode.groupKind)) {\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tgroupClassify.sysType = \"O\";\n");
      out.write("\t\t\tgroupClassify.groupKind = selectedNode.groupKind;\n");
      out.write("\t\t\tgroupClassify.orderClassifyType = \"O\";\n");
      out.write("\t\t}\n");
      out.write("\t\tif (isCanDo(groupClassify,null,false)) {\n");
      out.write("\t\t\tvar groupClassify2 = {\n");
      out.write("\t\t\t\t\tclassifyId: \"\",\n");
      out.write("\t\t\t\t\tclassifyName: \"新建文件夹\",\n");
      out.write("\t\t\t\t\tdeptId: top.orgCombo.value,\n");
      out.write("\t\t\t\t\tdoctId: top.document.getElementById(\"sysuser\").text.split(\"/\")[1],\n");
      out.write("\t\t\t\t\tsortNo: -1,\n");
      out.write("\t\t\t\t\tcreatedOperId: top.document.getElementById(\"sysuser\").text.split(\"/\")[1],\n");
      out.write("\t\t\t\t\toperId: top.document.getElementById(\"sysuser\").text.split(\"/\")[1],\n");
      out.write("\t\t\t\t\tsysType: \"O\",\n");
      out.write("\t\t\t\t\torderClassifyType: \"O\",\n");
      out.write("\t\t\t\t\tgroupKind: groupClassify.groupKind,\n");
      out.write("\t\t\t\t\tparentId: groupClassify.classifyId\n");
      out.write("\t\t\t};\n");
      out.write("\t\t\tvar groupClassify2Json = mini.encode(groupClassify2);\n");
      out.write("\t\t\t$.post(\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/saveGroupClassify.do\",\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tgroupClassify2Json: groupClassify2Json\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tfunction (r) {\n");
      out.write("\t\t\t\t\tif (r == \"ok\") {\n");
      out.write("\t\t\t\t\t\trefrshGroup();\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t);\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("  \t// 跳转前判断\n");
      out.write("  \tfunction checkRecipe() {\n");
      out.write("  \t\tvar rows = grid.getChanges();\n");
      out.write("  \t\tif(rows.length > 0) {\n");
      out.write("  \t\t\ttop.mini.showTips({content: \"更改请先保存？\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\n");
      out.write("\t  \t\treturn false; \n");
      out.write("  \t\t} else {\n");
      out.write("  \t\t\tif(getRows().length <= 0) {\n");
      out.write("  \t\t\t\tremoveTab();\n");
      out.write("  \t\t\t\tshowOrders();\n");
      out.write("  \t\t\t};\t\n");
      out.write("  \t\t}\n");
      out.write("  \t\treturn true; \n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t// 关闭组套选择窗口\n");
      out.write("  \tfunction cancel() {\n");
      out.write("  \t\twin1.hide();\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \t// 删除组套详情\n");
      out.write("  \tfunction removeGroupDetail() {\n");
      out.write("  \t\t\n");
      out.write("  \t}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<!-- 组套显示 -->\n");
      out.write("\t<div class=\"mini-fit\">\n");
      out.write("\t\t<div class=\"mini-splitter\" style=\"width:99%; height:99%;\" borderStyle=\"border-top:0;\">\n");
      out.write("\t\t\t<div size=\"330px;\" showCollapseButton=\"false\">\n");
      out.write("\t\t\t\t<div style=\"height:25px;\">\n");
      out.write("\t\t\t\t\t<input class=\"mini-textbox\" id=\"groupclassify-search\" borderStyle=\"border:0px;border-bottom:1px solid #ccc;\" style=\"width:100%\"\n");
      out.write("\t\t\t\t\t\temptyText=\"请输入组套分类名称\" onenter=\"searchGroupClassify\"/>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t\t\t<ul id=\"tree\" contextMenu=\"#treeMenu\" allowDrop=\"true\" allowDrag=\"true\" expandOnLoad=\"0\"\n");
      out.write("\t\t\t\t\t\tclass=\"mini-tree\" resultAsTree=\"false\" showArrow=\"true\" showTreeIcon=\"true\" \n");
      out.write("\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/refrshGroup.do?orderClassifyType=O&sysType=O\"  \n");
      out.write("\t\t\t\t\t\tonbeforedrop=\"dragDrop\" onnodedblclick=\"onNodedblclick\" onnodeselect=\"onBeforeLabelEdit\" onendedit=\"onAfterLabelEdit\"\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 100%; height: 100%; margin: 0; padding: 2px;\">\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<div showCollapseButton=\"false\">\n");
      out.write("\t\t\t\t<ul class=\"mini-menubar\" id=\"toolbar\" style=\"width: 100%;display:none;\" borderStyle=\"border-top:0;border-left:0;border-right:0;\">\n");
      out.write("\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"addNewRecipe\">新增处方</li>\n");
      out.write("\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"addRow\">新增</li>\n");
      out.write("\t\t\t\t\t<li iconCls=\"fa fa-remove\" onclick=\"removeOrder\">删除</li>\n");
      out.write("\t\t\t\t\t<li iconCls=\"fa fa-remove\" onclick=\"removeRecipe0\">删除处方</li>\n");
      out.write("\t\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t\t\t<span>组合</span>\n");
      out.write("\t\t\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-minus-circle\" onclick=\"groupOrder\">组合</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"canelComboOrder\">取消组合</li>\n");
      out.write("\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t<li iconCls=\"fa fa-file-o\" onclick=\"recipeHROrder\">草药</li>\n");
      out.write("\t\t\t\t\t<li iconCls=\"fa fa-save\" onclick=\"saveOrder\">保存</li>\n");
      out.write("\t\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t\t<span>打印</span>\n");
      out.write("\t\t\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-minus-circle\" onclick=\"print(1,false)\">处方单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(2,false)\">检验单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(3,false)\">检查单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(4,false)\">治疗单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(0,false)\">预览打印</li>\n");
      out.write("\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t\t<span>全部打印</span>\n");
      out.write("\t\t\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-minus-circle\" onclick=\"print(1,true)\">所有处方单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(2,true)\">所有检验单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(3,true)\">所有检查单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(4,true)\">所有治疗单</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"print(5,true)\">所有单据</li>\n");
      out.write("\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t\t<li iconCls=\"fa fa-minus-circle\" onclick=\"updateSeenInfo\">诊出</li>\n");
      out.write("\t\t\t\t\t<!-- <li><span>诊断关联</span>\n");
      out.write("\t\t\t\t\t\t<ul>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-minus-circle\" onclick=\"onItemClick\">设置关联</li>\n");
      out.write("\t\t\t\t\t\t\t<li iconCls=\"fa fa-plus-square\" onclick=\"onItemClick\">删除所有关联</li>\n");
      out.write("\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t</li> -->\n");
      out.write("\t\t\t\t\t\t<li iconCls=\"fa fa-refresh\" onclick=\"refresh\">刷新</li>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div id=\"tabs1\" class=\"mini-tabs\" activeIndex=\"0\" style=\"width:100%;height:40px;padding:5px;\" onbeforeactivechanged=\"beforeactivechanged\"\n");
      out.write("\t\t\t\t    arrowPosition=\"side\" showNavMenu=\"true\" onactivechanged=\"activechanged\" onbeforecloseclick=\"onbeforecloseclick\">\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<ul class=\"mini-contextmenu\" id=\"gridMenu\" onbeforeopen=\"onMenuOpen\" style=\"display:none;\">\n");
      out.write("\t\t\t\t\t<li onclick=\"copyOrder\">复制</li>\n");
      out.write("\t\t\t\t\t<li onclick=\"addRow\">新增医嘱</li>\n");
      out.write("\t\t\t\t\t<li onclick=\"pasteOrder\">粘贴</li>\n");
      out.write("\t\t\t\t\t<li onclick=\"groupOrder\">组合</li>\n");
      out.write("\t\t\t\t\t<li onclick=\"canelComboOrder\">取消组合</li>\n");
      out.write("\t\t\t\t\t<li onclick=\"removeOrder\">删除选中项目</li>\n");
      out.write("\t\t\t\t\t<li onclick=\"removeRecipe0\">删除处方</li>\n");
      out.write("\t\t\t\t\t<li onclick=\"saveGroup\">存组套</li>\n");
      out.write("\t\t\t\t</ul>\n");
      out.write("\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t\t\t<div id=\"grid1\" class=\"mini-datagrid\" borderStyle=\"border:0;border-top:1px solid #ccc;\" ondrawcell=\"ondrawcell\" oncellbeginedit=\"oncellbeginedit\" oncellendedit=\"cellendedit\"\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 100%; height: 100%;\" contextMenu=\"#gridMenu\" oncellvalidation=\"oncellvalidation\" onselect=\"onselect\" editNextOnEnterKey=\"true\" oncellcommitedit=\"cellcommitedit\"\n");
      out.write("\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getOutOrderList.do\" showPager=\"false\" multiSelect=\"true\" allowCellValid=\"true\" onload=\"load\"\n");
      out.write("\t\t\t\t\t\tallowCellEdit=\"true\" allowCellSelect=\"true\" sortMode=\"client\" showModified=\"true\" onbeforeselect=\"onbeforeselect\">\n");
      out.write("\t\t\t\t\t   <div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t\t<div field=\"checkColumn\" type=\"checkColumn\"></div>\n");
      out.write("\t\t\t\t\t\t\t<!-- <div field=\"backQty\">回退</div> -->\n");
      out.write("\t\t\t\t\t\t\t<div field=\"orderState\" width=\"50\" align=\"center\" headerAlign=\"center\" visible=\"true\">状态</div>\n");
      out.write("\t\t\t\t\t\t\t<!-- <div field=\"orderId\" width=\"50\" align=\"center\" headerAlign=\"center\" visible=\"true\">医嘱ID</div> -->\n");
      out.write("\t\t\t\t\t\t\t<!-- 退药状态显示 -->\n");
      out.write("\t\t\t\t\t\t\t<div field=\"subcombNo\" type=\"textboxColumn\" width=\"60\" headerAlign=\"center\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t组号<input property=\"editor\" class=\"mini-textbox\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<!-- \n");
      out.write("\t\t\t\t\t\t\t<div field=\"combId\" width=\"100\">组号</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"injectNumber\">注射次数</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"billId\" width=\"100\">处方号</div> \n");
      out.write("\t\t\t\t\t\t\t-->\n");
      out.write("\t\t\t\t\t\t\t");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<div field=\"itemSysType\" name=\"itemSysType\" type=\"comboboxcolumn\" autoShowPopup=\"true\" width=\"70\" headerAlign=\"center\" align=\"center\">系统类别\n");
      out.write("\t\t\t\t\t\t\t\t <input property=\"editor\" class=\"mini-combobox\"  onvaluechanged=\"onValueChanged4\" showPopup=\"true\"\n");
      out.write("\t\t\t\t\t\t\t\t \turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/enums/opItemSysType.json\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<div name=\"taskName\" autoShowPopup=\"true\" field=\"itemName\"  displayField=\"itemName\" width=\"350\"  headerAlign=\"center\" vtype=\"required\" renderer=\"rendererItemName\">项目名称\n");
      out.write("\t\t\t\t\t\t\t\t<div property=\"editor\" class=\"mini-autocomplete\" style=\"width:100%;\" onshowpopup=\"onshowpopup\" popupWidth=\"570\" showPopup=\"true\" allowInput=\"true\" textField=\"itemName\" valueField=\"itemId\" \n");
      out.write("\t\t\t\t\t\t\t\t\tonvaluechanged=\"onValueChanged1\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/outpatient/outOrder/getDrugList.do\" onitemclick=\"\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div field=\"tag.state\" headerAlign=\"center\" align=\"center\" width=\"25\">标记</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"编号\" field=\"itemId\" headerAlign=\"center\" align=\"center\" width=\"50\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"名称\" field=\"itemName\" width=\"200px\" headerAlign=\"center\" align=\"center\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"单价\" field=\"itemPrice\" headerAlign=\"center\" align=\"center\" width=\"30\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"规格\" field=\"specs\" headerAlign=\"center\" align=\"center\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"单位\" field=\"ordDosageUnit\" headerAlign=\"center\" align=\"center\" width=\"25\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"系统分类\" field=\"itemSysType\" type=\"comboboxcolumn\" headerAlign=\"center\" align=\"center\" visible=\"true\">系统分类\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t <input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=ITEM_SYS_TYPE\" readOnly=\"true\"/>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"编号\" field=\"itemNo\" headerAlign=\"center\" align=\"center\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<div field=\"groupNoFlag\" width=\"30\"  headerAlign=\"center\" align=\"center\" renderer=\"groupRenderer\">*</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"ordDosage\" headerAlign=\"center\" align=\"center\" width=\"65\">每次用量\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t <input property=\"editor\" class=\"mini-textbox\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<div field=\"ordDosageUnit\" headerAlign=\"center\" align=\"center\" width=\"65\">用量单位\n");
      out.write("\t\t\t\t\t\t\t\t <input property=\"editor\" class=\"mini-textbox\" readOnly=\"true\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"freqId\" name=\"freqId\" type=\"comboboxColumn\" headerAlign=\"center\"  autoShowPopup=\"true\" align=\"center\" width=\"120\">频次\n");
      out.write("\t\t\t\t\t\t\t\t <div property=\"editor\" class=\"mini-combobox\" popupWidth=\"400\" required=\"true\"  showPopup=\"true\" valueFromSelect=\"true\"\n");
      out.write("\t\t\t\t\t\t\t\t \t  allowInput=\"true\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/frequency/getKVs.do\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"名称\" field=\"text\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"频次编码\" field=\"id\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"次数\" field=\"execCount\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"usageId\" type=\"comboboxColumn\" headerAlign=\"center\" autoShowPopup=\"true\" align=\"center\" >用法\n");
      out.write("\t\t\t\t\t\t\t\t<div property=\"editor\" class=\"mini-combobox\" popupWidth=\"400\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medUsage/getKVs.do\" \n");
      out.write("\t\t\t\t\t\t\t\t\t required=\"true\" allowInput=\"true\" showPopup=\"true\" valueFromSelect=\"true\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"编号\" field=\"id\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div header=\"药品用法\" field=\"text\"></div>\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<div field=\"freqDays\" name=\"freqDays\" headerAlign=\"center\" align=\"center\" width=\"60\">天/付数\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-textbox\" style=\"width: 100%;\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<!-- <div field=\"totCost\" headerAlign=\"center\" align=\"center\">总价 </div> --> \n");
      out.write(" \t\t\t\t\t\t\t<div field=\"qty\" name=\"qty\" type=\"textboxColumn\" width=\"50\" headerAlign=\"center\" align=\"center\">总量\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-textbox\"/>\n");
      out.write("\t\t\t\t\t\t\t</div> \n");
      out.write("\t\t\t\t\t\t\t<div field=\"qtyUnit\" type=\"comboboxColumn\" width=\"50\" headerAlign=\"center\" align=\"center\" renderer=\"unitRenderer\">单位\n");
      out.write("\t\t\t\t\t\t\t    <input property=\"editor\" class=\"mini-combobox\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"stockDeptId\" name=\"stockDeptId\" type=\"comboboxcolumn\" headerAlign=\"center\" align=\"center\" width=\"130\">地点\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" style=\"width:100%;\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\" />\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"execDeptId\" name=\"execDeptId\" type=\"comboboxcolumn\" headerAlign=\"center\" align=\"center\" width=\"120\">执行科室\n");
      out.write("\t\t\t\t\t\t\t\t<input id=\"execDeptId\" property=\"editor\" allowInput=\"true\" valueFromSelect=\"true\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"memo\" headerAlign=\"center\" align=\"center\">备注\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-textbox\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"emergencyFlag\" type=\"checkboxcolumn\" width=\"50\" trueValue=\"1\" falseValue=\"0\" headerAlign=\"center\">急</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"stFlag\" headerAlign=\"center\" align=\"center\">\n");
      out.write("\t\t\t\t\t\t\t\t皮试\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"recipeDoctorId\" type=\"comboboxColumn\" headerAlign=\"center\" align=\"center\">开立医生\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" required=\"true\" readOnly=\"true\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysUser/getKVs.do\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"createdTime\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\" width=\"150\">开立时间</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"sampleId\" type=\"comboboxColumn\" headerAlign=\"center\" align=\"center\">样本类型\n");
      out.write("\t\t\t\t\t\t\t\t<input id=\"sampleId\" property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=BD_SAMPLETYPE\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"checkPointId\" type=\"comboboxColumn\" headerAlign=\"center\" align=\"center\">检查部位\n");
      out.write("\t\t\t\t\t\t\t\t<input id=\"checkPointId\"  property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=BD_CHECKPART\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div class=\"detail\" style=\"width:100%;height:150px;border-top:1px solid #ccc;display:none;\">\n");
      out.write("\t\t\t\t\t<div style=\"border-bottom:1px solid #ccc; padding-left :10px;\">详细信息</div>\n");
      out.write("\t\t\t\t\t<div class=\"mini-textarea\" id=\"orderInfo\" style=\"width:100%;height:100%;\" borderStyle=\"border:0;\"></div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<!-- 组套窗口 -->\n");
      out.write("\t<div id=\"win1\" class=\"mini-window\" style=\"width:50%;height:460px;display:none;padding:10px; \">\n");
      out.write("\t\t<div class=\"mini-splitter\" style=\"width:99%;height:98%;\" vertical=\"true\" allowResize=\"false\" handlerSize=\"6\">\n");
      out.write("\t\t    <div size=\"10%;\" showCollapseButton=\"false\">\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-check\" onclick=\"addGroupOrders\">确定</a>\n");
      out.write("\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-window-close\" onclick=\"cancel\">取消</a>\n");
      out.write("\t\t\t\t<!-- <a class=\"mini-button\" iconCls=\"fa fa-remove\" onclick=\"removeGroupDetail\">删除</a> -->\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t    <div showCollapseButton=\"false\">\n");
      out.write("\t\t\t\t<div class=\"mini-fit\">\n");
      out.write("\t\t\t         <div id=\"grid2\" class=\"mini-datagrid\" showPager=\"false\" allowCellSelect=\"true\" allowCellEdit=\"false\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupList/showGroupDetail.do\" multiSelect=\"true\"\n");
      out.write("\t\t\t\t\t\t resultAsTree=\"false\" showTreeIcon=\"true\" style=\"width:100%; height:100%;\" onload=\"comboGroupRender\" borderStyle=\"border-bottom:0;\" allowCellEdit=\"true\" ondrawcell=\"groupDrawCell\">\n");
      out.write("\t\t\t\t\t\t <div property=\"columns\">\n");
      out.write("\t\t\t\t\t\t \t<div type=\"checkcolumn\"></div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"orderType\" width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxcolumn\" >医嘱类别\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" style=\"width:100%;\" \n");
      out.write("\t\t\t\t\t\t\t    url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/enums/orderType.json\" /> \n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"itemSysType\" width=\"70\" type=\"comboboxcolumn\" headerAlign=\"center\" align=\"center\">系统类别\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" style=\"width:100%;\" \n");
      out.write("\t\t\t\t\t\t\t    url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=ITEM_SYS_TYPE\" />\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"itemNo\" width=\"90\" headerAlign=\"center\" align=\"center\">项目编码</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"itemName\" width=\"350\" headerAlign=\"center\" align=\"center\" >项目名称</div>\n");
      out.write("\t\t\t\t\t\t \t<div field=\"combId\" width=\"100\" headerAlign=\"center\" align=\"center\">.</div>\n");
      out.write("\t\t\t\t\t\t \t<div field=\"groupNoFlag\" width=\"40\" headerAlign=\"center\" align=\"center\">.</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"\" width=\"80\" headerAlign=\"center\" align=\"center\" renderer=\"insuranceRenderer\">医保标记</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"usageId\" width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">用法\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medUsage/getKVs.do\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"frequencyId\" width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">频次\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/frequency/getKVs.do\" />\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"ordDosage\" width=\"120\" headerAlign=\"center\" align=\"center\" renderer=\"ordDosageRenderer\">每次用量</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"qty\" width=\"100\" headerAlign=\"center\" align=\"center\" renderer=\"qtyRenderer\">总量</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"days\" width=\"100\" headerAlign=\"center\" align=\"center\" renderer=\"daysRenderer\">天数/付数</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"sampleId\" width=\"80\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">样本\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=BD_SAMPLETYPE\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"checkPointId\" width=\"80\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">部位\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=BD_CHECKPART\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"emergencyFlag\" width=\"50\" headerAlign=\"center\" align=\"center\" renderer=\"emergencyFlagRenderer\">急\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"memo\" width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">备注\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" valueField=\"text\"\n");
      out.write("\t\t\t\t\t\t\t\turl =\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=BD_PCCMEMO\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"deptId\" width=\"150\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">地点\n");
      out.write("\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\"/>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<div field=\"operId\">操作ID</div>\n");
      out.write("\t\t      \t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t    </div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<!-- 左侧tree右键菜单 -->\n");
      out.write("\t<ul id=\"treeMenu\" class=\"mini-contextmenu\" style=\"display:none;\" onbeforeopen=\"treeMenuBeforeOpen\">        \n");
      out.write("\t    <li name=\"reload\" iconCls=\"fa fa-refresh\" onclick=\"refrshGroup()\">刷新组套列表</li>\n");
      out.write("\t    <li name=\"copyDoct\" iconCls=\"\" onclick=\"copyToGroup('Doct')\">复制为个人组套</li>\n");
      out.write("\t    <li name=\"copyDept\" iconCls=\"\" onclick=\"copyToGroup('Dept')\">复制为科室组套</li>\n");
      out.write("\t\t<li name=\"copyHos\" iconCls=\"\" onclick=\"copyToGroup('Hos')\">复制为全院组套</li>      \n");
      out.write(" \t    <li name=\"add\" iconCls=\"fa fa-plus-square\" onclick=\"addItem()\">增加文件夹</li> \n");
      out.write("\t\t<li name=\"edit\" iconCls=\"fa fa-edit\" onclick=\"changeGroupName()\">修改组套名称</li>\n");
      out.write("\t\t<li name=\"remove\" iconCls=\"fa fa-remove\" onclick=\"deleteItem()\">删除组套</li> \n");
      out.write("\t</ul>\n");
      out.write("\t\n");
      out.write("\t<input id=\"resetGroupNo\" class=\"mini-hidden\" style=\"display:none;\" value=\"0\"/>\n");
      out.write("    <input id=\"resetOrdDosage\" class=\"mini-hidden\"  style=\"display:none;\" value=\"0\"/>\n");
      out.write("    <input id=\"groupOldName\" class=\"mini-hidden\" style=\"display:none;\" value=\"\"/>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\tmini.parse();\n");
      out.write("\t\tvar grid = mini.get(\"grid1\");\n");
      out.write("\t\tvar grid2 = mini.get(\"grid2\");\n");
      out.write("\t\tvar win1 = mini.get(\"win1\");\n");
      out.write("\t\tvar tab = mini.get(\"tabs1\");\n");
      out.write("\t\tvar tree = mini.get(\"tree\");\n");
      out.write("\t\tvar orderInfo = mini.get(\"orderInfo\");\t\n");
      out.write("\t\tvar resetGroupNo = mini.get(\"resetGroupNo\");\t\n");
      out.write("\t\tvar resetOrdDosage = mini.get(\"resetOrdDosage\");\t\n");
      out.write("\t\tvar groupOldName = mini.get(\"groupOldName\");\n");
      out.write("\t\tinitRecipe();\n");
      out.write("\t\t\n");
      out.write("\t</script>\n");
      out.write("\t<div>\n");
      out.write("\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\tCreateReport(\"Report\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t</script>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /commons/include/get.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /commons/include/get.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /commons/include/get.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("emr");
      // /commons/include/get.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(6,0) '${emrContextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${emrContextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
