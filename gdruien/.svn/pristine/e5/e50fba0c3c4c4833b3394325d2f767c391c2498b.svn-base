<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<security:http pattern="/scripts/**" security="none" />
	<security:http pattern="/commons/**" security="none" />
	<security:http pattern="/report/**" security="none" />
	<security:http pattern="/403*" security="none" />
	<security:http pattern="/404*" security="none" />
	<security:http pattern="/500*" security="none" />

	<security:http entry-point-ref="multipleAuthenticationLoginEntry"
		servlet-api-provision="true">
		<!-- <security:intercept-url pattern="/servlet/ValidCode" filters="none"/> -->
		<!-- <security:session-management invalid-session-url="/loginRedirect.do"> 
			<security:concurrency-control error-if-maximum-exceeded="false" max-sessions="1" 
			expired-url="/loginRedirect.do"/> </security:session-management> -->

		<!--使用表单登录 -->
		<security:csrf disabled="true" />
		<security:http-basic />
		<security:remember-me key="bpm3PrivateKey" />
		<security:logout logout-url="/logout"
			logout-success-url="/loginRedirect.do" />
		<security:custom-filter ref="aopFilter" after="FORM_LOGIN_FILTER" />
		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR"
			ref="permissionFilter" />
		<security:access-denied-handler ref="accessDeniedHandler" />
		<security:custom-filter position="SWITCH_USER_FILTER"
			ref="switchUserProcessingFilter" />
		<security:headers>
			<security:content-type-options
				disabled="true" />
			<security:frame-options disabled="true" />
		</security:headers>
	</security:http>

	<bean id="actionPageMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="mobile" value="/mobileLogin.jsp"></entry>
			</map>
		</constructor-arg>
	</bean>

	<bean id="switchUserProcessingFilter" class="com.rekj.core.web.filter.HtSwitchUserFilter">
		<property name="userDetailsService" ref="sysUserDao" />
		<property name="switchUserUrl" value="/j_spring_security_switch_user" />
		<property name="exitUserUrl" value="/j_spring_security_exit_user" />
		<property name="targetUrl" value="/platform/console/main.do" />
	</bean>

	<!--登录入口定义 -->
	<bean id="multipleAuthenticationLoginEntry"
		class="com.rekj.core.web.security.MultipleAuthenticationLoginEntry">
		<property name="defaultLoginUrl" value="/login.jsp" />
		<property name="directUrlResolvers">
			<list>
				<!-- <ref bean="mobileLoginEntry" /> -->
			</list>
		</property>
	</bean>

	<!-- 跳转到手机登陆页 -->
	<!-- <bean id="mobileLoginEntry" class="com.rekj.core.web.security.RequestUriDirectUrlResolver"> 
		<property name="pattern" value="/mobile" /> <property name="directUrl" value="/mobileLogin.jsp"/> 
		</bean> -->

	<bean id="accessDeniedHandler" class="com.rekj.core.web.security.GenericAccessDeniedHandler">
		<property name="accessDeniedUrl" value="/commons/403.jsp"></property>
	</bean>

	<!-- <bean id="shaEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/> -->
	<bean id="dummyEncoder" class="com.rekj.core.web.security.DummyPasswordEncoder" />

	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<!-- <security:authentication-manager alias="authenticationManager"> <security:authentication-provider 
		user-service-ref="sysUserDao"> <security:password-encoder ref="dummyEncoder"> 
		</security:password-encoder> </security:authentication-provider> </security:authentication-manager> -->

	<!-- <security:authentication-manager alias="authenticationManager"> <security:authentication-provider 
		user-service-ref="sysUserDao"> <security:password-encoder hash="sha-256" 
		base64="true" /> </security:authentication-provider> </security:authentication-manager> -->

	<bean id="aopFilter" class="com.rekj.core.web.filter.AopFilter"></bean>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，我们的所有控制将在这三个类中实现 -->

	<bean id="permissionFilter" class="com.rekj.core.web.filter.PermissionFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<bean id="accessDecisionManager" class="com.rekj.core.web.security.GenericAccessDecisionManager" />

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<bean id="securityMetadataSource"
		class="com.rekj.core.web.security.GenericSecurityMetadataSource"
		scope="singleton">
		<property name="anonymousUrls">
			<set>
				<value>/loginRedirect.do</value>
				<value>/login.jsp</value>
				<value>/login.do</value>
				<value>/timeout.jsp</value>
			</set>
		</property>
	</bean>
</beans>