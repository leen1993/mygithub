/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.2
 * Generated at: 2018-05-11 09:00:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.medical.inpatient;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class nurseInOrderShort_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1525761782870L));
    _jspx_dependants.put("/commons/include/html_doctype.html", Long.valueOf(1525761798654L));
    _jspx_dependants.put("/commons/include/get.jsp", Long.valueOf(1525827802831L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>护士医嘱-临时</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/boot.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/commons/dynamic.jsp\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/core.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/template/jquery.tmpl.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/default/css/web.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t.patientInfo {\r\n");
      out.write("\t\tcolor:#006aad;\r\n");
      out.write("\t\tfont-weight:bold;\r\n");
      out.write("\t}\r\n");
      out.write("\t.mini-tabs-bodys {\r\n");
      out.write("\t\tpadding:0;\r\n");
      out.write("\t}\r\n");
      out.write("\t#formLogin,#dcForm{\r\n");
      out.write("\twidth:100%;height:100%;\r\n");
      out.write("\tmargin:auto;text-align:center;\r\n");
      out.write("\tbackground: url(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/login/images/bg_login.jpg) repeat;\r\n");
      out.write("\t}\r\n");
      out.write("\t#dcForm label{\r\n");
      out.write("\t\tfont-size:16px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.login-input{\r\n");
      out.write("\t\tpadding:10px 0 10px 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t.login-input input{\r\n");
      out.write("\t\theight:20px;width:250px; \r\n");
      out.write("\t\tpadding-left:5px;font-size:16px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.confirm {\r\n");
      out.write("\t\twidth:255px; background:#006aad;\r\n");
      out.write("\t\theight:25px;margin:10px auto;\r\n");
      out.write("\t\tpadding-top:5px;border-radius:3px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.confirm .login_btn{\r\n");
      out.write("\t\tcolor:white;text-decoration:none;font-size:16px;\r\n");
      out.write("\t} \r\n");
      out.write("\t#formLogin .confirm:hover{\r\n");
      out.write("\t\tbackground:#4f81bd;\r\n");
      out.write("\t} \r\n");
      out.write("\t.mini-panel-border{\r\n");
      out.write("\t\tborder:0;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("    \t\r\n");
      out.write("<script type=\"text/javascript\">\t \r\n");
      out.write("\t//拖拽树节点\r\n");
      out.write("\tfunction dragDrop (e) {\r\n");
      out.write("\t\tvar treeNode = e.dragNode;\r\n");
      out.write("\t\te.cancel = true;\r\n");
      out.write("\t\tif (treeNode._level == 0 && treeNode.groupKind) {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"根节点不可以移动!\",    \r\n");
      out.write("\t\t        state: \"warning\", \r\n");
      out.write("\t\t        x: \"center\",  \r\n");
      out.write("\t\t        y: \"center\", \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tvar nodeAt = e.dropNode;\r\n");
      out.write("\t\t\tif (nodeAt) {\r\n");
      out.write("\t\t\t\tif (treeNode.tagType && treeNode.tagType == \"GroupClassify\") {\r\n");
      out.write("\t\t\t\t\tvar groupClassify = mini.clone(treeNode);\r\n");
      out.write("\t\t\t\t\tif (isCanDo(groupClassify,null,false)) {\r\n");
      out.write("\t\t\t\t\t\tif (nodeAt.tagType && nodeAt.tagType == \"GroupClassify\") {\r\n");
      out.write("\t\t\t\t\t\t\tvar groupClassify2 = mini.clone(nodeAt);\r\n");
      out.write("\t\t\t\t\t\t\tif (groupClassify.groupKind != groupClassify2.groupKind) {\r\n");
      out.write("\t\t\t\t\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t\t\t\t        content: \"不同类别间不允许拖动！\",    \r\n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (groupClassify.parentId == groupClassify2.parentId) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否互换顺序?\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\tvar groupClassifyJson = mini.encode(groupClassify);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\tvar groupClassify2Json = mini.encode(groupClassify2);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/replaceGroupClassify.do\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tgroupClassifyJson: groupClassifyJson,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tgroupClassify2Json: groupClassify2Json\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (groupClassify.parentId == groupClassify2.parentId) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否将【\" + groupClassify.text + \"】移到【\" + groupClassify2.text + \"】下?\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/updateGroupClassify.do\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: groupClassify.id,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: groupClassify.sortNo,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tparentId: groupClassify2.id\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} else if (nodeAt._level == 0 && nodeAt.groupKind) {\r\n");
      out.write("\t\t\t\t\t\t\tif (groupClassify.groupKind != nodeAt.groupKind) {\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t\t\t\t        content:  \"不同类别间不允许拖动！\",    \r\n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar text = \"\";\r\n");
      out.write("\t\t\t\t\t\t\t\tif (groupClassify.parentId && groupClassify.parentId != text) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否将【\" + groupClassify.text + \"】移到根目录下?\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/updateGroupClassify.do\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: groupClassify.id,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: groupClassify.sortNo,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tparentId: text\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t\t\t        content: \"文件夹不允许这样移动!\",    \r\n");
      out.write("\t\t\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else if (treeNode.tagType && treeNode.tagType == \"Group\") {\r\n");
      out.write("\t\t\t\t\tvar group = mini.clone(treeNode);\r\n");
      out.write("\t\t\t\t\tif (isCanDo(null,group,false)) {\r\n");
      out.write("\t\t\t\t\t\tif (nodeAt.tagType && nodeAt.tagType == \"GroupClassify\") {\r\n");
      out.write("\t\t\t\t\t\t\tvar groupClassify2 = mini.clone(nodeAt);\r\n");
      out.write("\t\t\t\t\t\t\tif (group.groupType != groupClassify2.groupKind) {\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t\t\t\t        content: \"不同类别间不允许拖动!\",    \r\n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t} else if (group.classifyId == groupClassify2.id) {\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t\t\t\t        content: \"目标节点已经是父级节点，不需要移动!\",    \r\n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t\t\t\t    message: \"是否将【\" + group.text + \"】移到【\" + groupClassify2.text + \"】下?\",\r\n");
      out.write("\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/updateGroupInfo.do\",\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tgroupId: group.id,\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: group.sortNo,\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: groupClassify2.id\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t);\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} else if (nodeAt.tagType && nodeAt.tagType == \"Group\") {\r\n");
      out.write("\t\t\t\t\t\t\tvar group2 = mini.clone(nodeAt);\r\n");
      out.write("\t\t\t\t\t\t\tif (group.groupType != group2.groupType) {\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t\t\t\t        content: \"不同类别间不允许拖动！\",    \r\n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t\t\t\t    message: \"是否互换顺序?\",\r\n");
      out.write("\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tvar groupJson = mini.encode(group);\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tvar group2Json = mini.encode(group2);\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/replaceGroup.do\",\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tgroupJson: groupJson,\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tgroup2Json: group2Json\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t);\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t} else if (nodeAt._level == 0 && nodeAt.groupKind) {\r\n");
      out.write("\t\t\t\t\t\t\tif (group.groupType != nodeAt.groupKind) {\r\n");
      out.write("\t\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t\t\t\t        content: \"不同类别间不允许拖动！\",    \r\n");
      out.write("\t\t\t\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar text2 = \"\";\r\n");
      out.write("\t\t\t\t\t\t\t\tif (group.classifyId && group.classifyId != text2) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    message: \"是否将【\" + group.text + \"】移到根目录下?\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/updateGroupInfo.do\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tgroupId: group.id,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tsortNo: group.sortNo,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tclassifyId: text2\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 双击组套(树)节点\r\n");
      out.write("\tfunction onDoubleClick (e) {\r\n");
      out.write("\t\tif (e.node && e.node.tagType == \"Group\") {\r\n");
      out.write("\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/checkGroupPriv.do\",\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tgroupType: e.node.groupType\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tfunction (action) {\r\n");
      out.write("\t\t\t\t\tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\tmini.open({\r\n");
      out.write("\t\t\t\t\t\t    url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/detail.do?orderClassifyType=S&registerId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&groupId=\" + e.node.id,\r\n");
      out.write("\t\t\t\t\t\t    title: \"组套选择【\" + e.node.text + \"】\",      \r\n");
      out.write("\t\t\t\t\t\t    width: 900,    \r\n");
      out.write("\t\t\t\t\t\t    height: 600,     \r\n");
      out.write("\t\t\t\t\t\t    ondestroy: function (r) {  //弹出页面关闭前\r\n");
      out.write("\t\t\t\t\t\t    \tif (r.action == \"ok\") {\r\n");
      out.write("\t\t\t \t\t\t        \tvar count = 1;\r\n");
      out.write("\t\t\t\t\t\t    \t\tvar lastCombId = \"\";\r\n");
      out.write("\t\t\t\t\t\t    \t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\t\t    \t\tfor (var i = 0; i < r.list.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t    \t\t\tvar order = r.list[i];\r\n");
      out.write("\t\t\t\t\t\t    \t\t\torder.registerId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t    \t\t\torder.bedNo = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.bedNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.patientNursestationId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.admitNursestationId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.orgId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.orgId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.clinicianDoctorId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.residentDoctId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.clinicianDeptId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clinicianDeptId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.recordDoctorId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.sourceType = \"N\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.stType = \"WO\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t//TODO检查首日量在哪设置\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.firstDayCount = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t// 护士医嘱分解需要的赋值\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.confirmFlag = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.confirmTime = mini.parseDate(\"0001-01-01\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.lastdayEndTime = mini.parseDate(\"0001-01-01\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar itemBase = order.item;\r\n");
      out.write("\t\t\t\t\t\t    \t\t\tif (i == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlastCombId = order.combId;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\torder.groupNo = getMaxGroupNo();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\torder.sortNo = getMaxGroupNo() + \"01\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\torder.combId = getComboNo();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcount = count + 1;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (order.combId == lastCombId) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvar updateSortNo = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (count > 9) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tupdateSortNo = r.list[i-1].groupNo + \"\" + count;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tupdateSortNo = r.list[i-1].groupNo + \"0\" + count;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\torder.groupNo = r.list[i-1].groupNo;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\torder.sortNo = updateSortNo;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\torder.combId = r.list[i-1].combId;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlastCombId = order.combId;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcount = 1;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\torder.groupNo = getMaxGroupNo();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\torder.sortNo = getMaxGroupNo() + \"01\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\torder.combId = getComboNo();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t    \t\t\tgrid.addRow(order);\r\n");
      out.write("\t\t\t\t\t\t    \t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\torder.chargeFlag = orderType._valueMaps[order.orderType].chargeFlag;\r\n");
      out.write("\t\t\t\t\t\t    \t\t\tgrid.clearSelect();\r\n");
      out.write("\t\t\t\t\t\t    \t\t\tvalidInOrderBefore(order,itemBase,true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}                       \r\n");
      out.write("\t\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\ttop.mini.alert(action);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 节点选中时事件\r\n");
      out.write("\tfunction onBeforeLabelEdit (e) {\r\n");
      out.write("\t\tgroupOldName.setValue(e.node.text);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 节点编辑完成后修改组套名称\r\n");
      out.write("\tfunction onAfterLabelEdit (e) {\r\n");
      out.write("\t\tvar selectedNode = e.node\r\n");
      out.write("\t\tif (!e.node.text.trim()) {\r\n");
      out.write("\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (groupOldName.value.trim() != e.node.text.trim()) {\r\n");
      out.write("\t\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\r\n");
      out.write("\t\t\t\tvar groupClassify = mini.clone(selectedNode);\r\n");
      out.write("\t\t\t\tif (!checkGroupPriv2(groupClassify)) {\r\n");
      out.write("\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/updateGroupClassifyName.do\",\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tclassifyId: selectedNode.id,\r\n");
      out.write("\t\t\t\t\t\tclassifyName: selectedNode.text\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t        \t\t\t        content: \"修改成功！\",    \r\n");
      out.write("\t        \t\t\t        state: \"warning\", \r\n");
      out.write("\t        \t\t\t        x: \"center\",  \r\n");
      out.write("\t        \t\t\t        y: \"center\", \r\n");
      out.write("\t        \t\t\t        timeout: 2000     \r\n");
      out.write("\t        \t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\r\n");
      out.write("\t\t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t);\r\n");
      out.write("\t\t\t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\r\n");
      out.write("\t\t\t\tvar group = mini.clone(selectedNode);\r\n");
      out.write("\t\t\t\tif (!checkGroupPriv2(group)) {\r\n");
      out.write("\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/updateGroupName.do\",\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tgroupId: selectedNode.id,\r\n");
      out.write("\t\t\t\t\t\tgroupname: selectedNode.text\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t        \t\t\t        content: \"修改成功！\",    \r\n");
      out.write("\t        \t\t\t        state: \"warning\", \r\n");
      out.write("\t        \t\t\t        x: \"center\",  \r\n");
      out.write("\t        \t\t\t        y: \"center\", \r\n");
      out.write("\t        \t\t\t        timeout: 2000     \r\n");
      out.write("\t        \t\t\t    });\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\ttree.setNodeText(selectedNode,groupOldName.value);\r\n");
      out.write("\t\t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 刷新树\r\n");
      out.write("\tfunction refrshGroup () {\r\n");
      out.write("\t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/refrshGroup.do?orderClassifyType=S&sysType=I\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 增加文件夹\r\n");
      out.write("\tfunction addItem () {\r\n");
      out.write("\t\tvar selectedNode = tree.getSelectedNode();\r\n");
      out.write("\t\tvar groupClassify ={};\r\n");
      out.write("\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\r\n");
      out.write("\t\t\tgroupClassify = mini.clone(selectedNode);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (!(selectedNode._level == 0 && selectedNode.groupKind)) {\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tgroupClassify.sysType = \"I\";\r\n");
      out.write("\t\t\tgroupClassify.groupKind = selectedNode.groupKind;\r\n");
      out.write("\t\t\tgroupClassify.orderClassifyType = \"S\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (isCanDo(groupClassify,null,false)) {\r\n");
      out.write("\t\t\tvar groupClassify2 = {\r\n");
      out.write("\t\t\t\t\tclassifyId: \"\",\r\n");
      out.write("\t\t\t\t\tclassifyName: \"新建文件夹\",\r\n");
      out.write("\t\t\t\t\tdeptId: top.orgCombo.value,\r\n");
      out.write("\t\t\t\t\tdoctId: top.document.getElementById(\"sysuser\").text.split(\"/\")[1],\r\n");
      out.write("\t\t\t\t\tsortNo: -1,\r\n");
      out.write("\t\t\t\t\tcreatedOperId: top.document.getElementById(\"sysuser\").text.split(\"/\")[1],\r\n");
      out.write("\t\t\t\t\toperId: top.document.getElementById(\"sysuser\").text.split(\"/\")[1],\r\n");
      out.write("\t\t\t\t\tsysType: \"I\",\r\n");
      out.write("\t\t\t\t\torderClassifyType: \"S\",\r\n");
      out.write("\t\t\t\t\tgroupKind: groupClassify.groupKind,\r\n");
      out.write("\t\t\t\t\tparentId: groupClassify.classifyId\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tvar groupClassify2Json = mini.encode(groupClassify2);\r\n");
      out.write("\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/saveGroupClassify.do\",\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tgroupClassify2Json: groupClassify2Json\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 删除组套\r\n");
      out.write("\tfunction deleteItem () {\r\n");
      out.write("\t\tvar selectedNode = tree.getSelectedNode();\r\n");
      out.write("\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\r\n");
      out.write("\t\t\tvar groupClassify = mini.clone(selectedNode);\r\n");
      out.write("\t\t\tif (!isCanDo(groupClassify,null,true)) {\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t    message: \"是否删除组套文件夹 \" + groupClassify.text,\r\n");
      out.write("\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/deleteGroupClassify.do\",\r\n");
      out.write("\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t    \t\t\t\tclassifyId: groupClassify.id\r\n");
      out.write("\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t    \t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t        \t\t\t        content: \"删除成功！\",    \r\n");
      out.write("\t\t\t        \t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t        \t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t        \t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t        \t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t        \t\t\t    });\r\n");
      out.write("\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t    \t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t    \t\t);\r\n");
      out.write("\t\t\t    \t}\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\r\n");
      out.write("\t\t\tvar group = mini.clone(selectedNode);\r\n");
      out.write("\t\t\tif (!isCanDo(null,group,true)) {\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t    message: \"是否删除组套 \" + group.text,\r\n");
      out.write("\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t    \t\t$.post(\r\n");
      out.write("\t\t\t    \t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/deleteGroup.do\",\r\n");
      out.write("\t\t\t    \t\t\t{\r\n");
      out.write("\t\t\t    \t\t\t\tgroupId: group.id\r\n");
      out.write("\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t    \t\t\tfunction (r) {\r\n");
      out.write("\t\t\t    \t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t    \t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t        \t\t\t        content: \"删除成功！\",    \r\n");
      out.write("\t\t\t        \t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t        \t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t        \t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t        \t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t        \t\t\t    });\r\n");
      out.write("\t\t\t    \t\t\t\t} else {\r\n");
      out.write("\t\t\t    \t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t    \t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t    \t\t);\r\n");
      out.write("\t\t\t    \t}\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//修改组套名称\r\n");
      out.write("\tfunction changeGroupName () {\r\n");
      out.write("\t\tvar selectedNode = tree.getSelectedNode();\r\n");
      out.write("\t\tif (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\r\n");
      out.write("\t\t\tif (!isCanDo(selectedNode,null,false)) {\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\r\n");
      out.write("\t\t\tif (!isCanDo(null,selectedNode,false)) {\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttree.beginEdit(selectedNode);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 复制组套\r\n");
      out.write("\tfunction copyToGroup (groupType) {\r\n");
      out.write("\t\tvar group = tree.getSelectedNode();\r\n");
      out.write("\t\tif (group && group.id) {\r\n");
      out.write("\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/copyToGroup.do\",\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tgroupId: group.id,\r\n");
      out.write("\t\t\t\t\tgroupType: groupType\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("        \t\t\t        content: \"保存成功！\",    \r\n");
      out.write("        \t\t\t        state: \"warning\", \r\n");
      out.write("        \t\t\t        x: \"center\",  \r\n");
      out.write("        \t\t\t        y: \"center\", \r\n");
      out.write("        \t\t\t        timeout: 2000     \r\n");
      out.write("        \t\t\t    });\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\trefrshGroup();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//tree菜单右键前事件\r\n");
      out.write("\tfunction treeMenuBeforeOpen (e) {\r\n");
      out.write("\t    var menu = e.sender;\r\n");
      out.write("\t    var selectedNode = tree.getSelectedNode();\r\n");
      out.write("\t    if (selectedNode) {\r\n");
      out.write("\t        //阻止浏览器默认右键菜单\r\n");
      out.write("\t        e.htmlEvent.preventDefault();\r\n");
      out.write("\t    } else {\r\n");
      out.write("\t    \te.cancel = true;\r\n");
      out.write("\t    \treturn;\r\n");
      out.write("\t    }\r\n");
      out.write("\t    var reloadMenu = mini.getbyName(\"reload\",menu);\r\n");
      out.write("\t    var doctMenu = mini.getbyName(\"copyDoct\",menu);\r\n");
      out.write("\t    var deptMenu = mini.getbyName(\"copyDept\",menu);\r\n");
      out.write("\t    var hosMenu = mini.getbyName(\"copyHos\",menu);\r\n");
      out.write("    \tvar addMenu = mini.getbyName(\"add\",menu);\r\n");
      out.write("    \tvar editMenu = mini.getbyName(\"edit\",menu);\r\n");
      out.write("    \tvar removeMenu = mini.getbyName(\"remove\",menu);\r\n");
      out.write("    \treloadMenu.show();\r\n");
      out.write("    \tif (selectedNode._level == 0 && selectedNode.groupKind) {\r\n");
      out.write("    \t\tdoctMenu.hide();\r\n");
      out.write("    \t\tdeptMenu.hide();\r\n");
      out.write("    \t\thosMenu.hide();\r\n");
      out.write("    \t\taddMenu.show();\r\n");
      out.write("    \t\teditMenu.hide();\r\n");
      out.write("    \t\tremoveMenu.hide();\r\n");
      out.write("    \t} else if (selectedNode.tagType && selectedNode.tagType == \"GroupClassify\") {\r\n");
      out.write("    \t\tif (selectedNode.children && selectedNode.children.length > 0) {\r\n");
      out.write("    \t\t\tdoctMenu.hide();\r\n");
      out.write("        \t\tdeptMenu.hide();\r\n");
      out.write("        \t\thosMenu.hide();\r\n");
      out.write("        \t\taddMenu.show();\r\n");
      out.write("        \t\teditMenu.show();\r\n");
      out.write("        \t\tremoveMenu.hide();\r\n");
      out.write("    \t\t} else {\r\n");
      out.write("    \t\t\tdoctMenu.hide();\r\n");
      out.write("        \t\tdeptMenu.hide();\r\n");
      out.write("        \t\thosMenu.hide();\r\n");
      out.write("        \t\taddMenu.show();\r\n");
      out.write("        \t\teditMenu.show();\r\n");
      out.write("        \t\tremoveMenu.show();\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t} else if (selectedNode.tagType && selectedNode.tagType == \"Group\") {\r\n");
      out.write("    \t\tif (selectedNode.groupType == \"Hos\") {\r\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Dept\")) {\r\n");
      out.write("    \t    \t\tdeptMenu.show();\r\n");
      out.write("    \t\t\t} else {\r\n");
      out.write("    \t\t\t\tdeptMenu.hide();\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t\tdoctMenu.show();\r\n");
      out.write("    \t\t\thosMenu.hide();\r\n");
      out.write("\t    \t\taddMenu.hide();\r\n");
      out.write("    \t\t} else if (selectedNode.groupType == \"Dept\") {\r\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Hos\")) {\r\n");
      out.write("    \t\t\t\thosMenu.show();\r\n");
      out.write("    \t\t\t} else {\r\n");
      out.write("    \t\t\t\thosMenu.hide();\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t\tdoctMenu.show();\r\n");
      out.write("        \t\tdeptMenu.hide();\r\n");
      out.write("    \t\t} else {\r\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Hos\")) {\r\n");
      out.write("    \t\t\t\thosMenu.show();\r\n");
      out.write("    \t\t\t} else {\r\n");
      out.write("    \t\t\t\thosMenu.hide();\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t\tif (checkGroupPriv(\"Dept\")) {\r\n");
      out.write("    \t    \t\tdeptMenu.show();\r\n");
      out.write("    \t\t\t} else {\r\n");
      out.write("    \t\t\t\tdeptMenu.hide();\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t\tdoctMenu.hide();\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t\taddMenu.hide();\r\n");
      out.write("    \t\teditMenu.show();\r\n");
      out.write("    \t\tremoveMenu.show();\r\n");
      out.write("    \t} else {\r\n");
      out.write("    \t\tdoctMenu.hide();\r\n");
      out.write("    \t\tdeptMenu.hide();\r\n");
      out.write("    \t\thosMenu.hide();\r\n");
      out.write("    \t\taddMenu.hide();\r\n");
      out.write("    \t\teditMenu.hide();\r\n");
      out.write("    \t\tremoveMenu.hide();\r\n");
      out.write("    \t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 判断是否有操作住院组套权限\r\n");
      out.write("\tfunction isCanDo (groupClassify,group,isDelete) {\r\n");
      out.write("\t\tvar flag = false;\r\n");
      out.write("\t\tvar groupClassifyJson = mini.encode(groupClassify);\r\n");
      out.write("\t\tvar groupJson = mini.encode(group);\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/isCanDo.do\",\r\n");
      out.write("            data: {\r\n");
      out.write("            \tgroupClassifyJson: groupClassifyJson,\r\n");
      out.write("            \tgroupJson: groupJson,\r\n");
      out.write("            \tisDelete: isDelete\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tif (r == \"ok\") {\r\n");
      out.write("            \t\tflag = true;\r\n");
      out.write("            \t} else {\r\n");
      out.write("            \t\tmini.showTips({\r\n");
      out.write("\t\t\t\t        content: r,    \r\n");
      out.write("\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t    });\r\n");
      out.write("            \t\tflag = false;\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn flag;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 按名称快速过滤组套\r\n");
      out.write("\tfunction filterGroupClassify(elFilter, elTree) {\r\n");
      out.write("\t\tvar filter = mini.get(elFilter);\r\n");
      out.write("\t\tvar tree = mini.get(elTree);\r\n");
      out.write("\t\tvar key = filter.getValue();\r\n");
      out.write("\t\tif (key == \"请输入组套分类名称\" || key == \"\") {\r\n");
      out.write("\t\t\ttree.clearFilter();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tkey = key.toLowerCase();\r\n");
      out.write("\t\t\ttree.filter(function(node) {\r\n");
      out.write("\t\t\t\tvar text = node.text ? node.text.toLowerCase() : \"\";\r\n");
      out.write("\t\t\t\tif (text.indexOf(key) != -1) {\r\n");
      out.write("\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 宣染医嘱状态\r\n");
      out.write("\tfunction rendererOrderState(e){\r\n");
      out.write("\t\tvar orderState = e.record.orderState;\r\n");
      out.write("\t\tif(orderState==\"SV\") {\r\n");
      out.write("\t\t\treturn \"<span style='color:blue;font-weight:bolder;'>暂</span>\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(orderState==\"SD\") {\r\n");
      out.write("\t\t\te.cellStyle = \"background:#9AFF9A;font-weight:bolder;\"\r\n");
      out.write("\t\t\treturn \"新\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(orderState==\"DC\") {\r\n");
      out.write("\t\t\te.cellStyle = \"background:#EE7AE9;font-weight:bolder;color:red;\"\r\n");
      out.write("\t\t\treturn \"停\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(orderState==\"PDC\") {\r\n");
      out.write("\t\t\treturn \"<span style='color:yellow'>预停止</span>\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (orderState==\"CK\") {\r\n");
      out.write("\t\t\te.cellStyle = \"background:#9AC0CD;\"\r\n");
      out.write("\t\t\treturn e.rowIndex+1;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (orderState==\"ET\") {\r\n");
      out.write("\t\t\te.cellStyle = \"background:#EEE685;\"\r\n");
      out.write("\t\t\treturn e.rowIndex+1;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//以下为新增医嘱功能\r\n");
      out.write("\t// 添加医嘱\r\n");
      out.write("\tfunction addNewOrder() {\r\n");
      out.write("\t\tvar stateFlag = $(\"#stateFlag\").html();\r\n");
      out.write("\t\tif (stateFlag != \"医嘱状态\" && stateFlag != \"默认显示\" && stateFlag != \"全部医嘱\") {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar gridList = grid.getList();\r\n");
      out.write("\t\tfor (var i = 0; i < gridList.length; i++) {\r\n");
      out.write("\t\t\tif (!gridList[i].itemId) {\r\n");
      out.write("\t\t\t\tgrid.beginEditCell(gridList[i], \"orderType\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar text = showOrderVerify()\r\n");
      out.write("\t\tif (!text.isEmpty()) {\r\n");
      out.write("\t\t\tmini.alert(\"该患者存在药房驳回的医嘱，请停止医嘱重开或者联系药房取消驳回！具体医嘱项目如下：<br/>\" + text);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tadd();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取医嘱核实记录信息\r\n");
      out.write("\tfunction showOrderVerify () {\r\n");
      out.write("\t\tvar text = \"\";\r\n");
      out.write("\t\t $.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/showOrderVerify.do\",\r\n");
      out.write("            data: { \r\n");
      out.write("            \tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("            \tpatientType: 1,\r\n");
      out.write("            \tvalidFlag: 1\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \ttext = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn text;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 添加一行初始化数据的医嘱\r\n");
      out.write("\tfunction add () {\r\n");
      out.write("\t\tif (grid.data.length > 0) {\r\n");
      out.write("\t\t\tvar index = grid.data.length - 1;\r\n");
      out.write("\t\t\tif (grid.getRow(index).orderId == undefined && grid.getRow(index).itemName == undefined) {\r\n");
      out.write("\t\t\t\tgrid.beginEditCell(grid.getRow(index), \"orderType\");\r\n");
      out.write("\t\t\t\tvar cellEditor = grid.getCellEditor (\"orderType\",grid.getRow(index));\r\n");
      out.write("\t\t\t\tcellEditor.showPopup(true);\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar newRow = getNewOrder();\r\n");
      out.write("\t    grid.addRow(newRow, \"add\");\r\n");
      out.write("\t    grid.deselectAll(false);\r\n");
      out.write("\t    var row = grid.findRow (function (e) {\r\n");
      out.write("\t\t    if(e.orderId == newRow.orderId) return true;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t    grid.select(row,false);\r\n");
      out.write("\t    grid.beginEditCell(row, \"orderType\");\r\n");
      out.write("\t    var cellEditor = grid.getCellEditor(\"orderType\",row);\r\n");
      out.write("\t\tcellEditor.showPopup(true);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取初始化数据\r\n");
      out.write("\tfunction getNewOrder () {\r\n");
      out.write("\t\treturn {\r\n");
      out.write("\t\t\torderId: getOrderId(), // 医嘱主键\r\n");
      out.write("\t\t\torderType: \"LZ\", // 医嘱类型\r\n");
      out.write("\t\t\tgroupNo: getMaxGroupNo(), // 组号\r\n");
      out.write("\t\t\tsortNo: getMaxGroupNo()+\"01\", //排序号\r\n");
      out.write("\t\t\tdays: 1, // 天付数\r\n");
      out.write("\t\t\tcombId: getComboNo(), // 组合号  直接获取序列\r\n");
      out.write("\t\t\tbeginTime: new Date(), // 开始时间\r\n");
      out.write("\t\t\tendTime: mini.parseDate(\"0001-01-01 00:00:00\"), // 结束时间\r\n");
      out.write("\t\t\trecipeDoctorId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", // 开立医生\r\n");
      out.write("\t\t\tcreatedTime: new Date(), // 开立时间\r\n");
      out.write("\t\t\tdcDoctorId: \"\", // 停止医生\r\n");
      out.write("\t\t\tdcDate: mini.parseDate(\"0001-01-01 00:00:00\"), // 停止时间\r\n");
      out.write("\t\t\tapprovedDoctorId: \"\", // 审核医生\r\n");
      out.write("\t\t\tapprovedDate: mini.parseDate(\"0001-01-01 00:00:00\"), // 审核时间\r\n");
      out.write("\t\t\torderState :\"SV\", // 医嘱状态\r\n");
      out.write("\t\t\tshowFlag: 1, // 是否前台显示\r\n");
      out.write("\t\t\tmainItemFlag: 1, // 是否主项目\r\n");
      out.write("\t\t\tsubMaterialFlag: 0, // 是否辅材\r\n");
      out.write("\t\t\tbillId: \"\", // 单据号码\r\n");
      out.write("\t\t\tsiApproveFlag: 0, // 医保适用性\r\n");
      out.write("\t\t\tlcpInfo: \"\", // 临床路径信息  TODO 后台再处理\r\n");
      out.write("\t\t\tdcCheckFlag: 0, // 停止标志\r\n");
      out.write("\t\t\tboilId: \"\", // 中草药煎法\r\n");
      out.write("\t\t\tselfBoil: 0, // 中草药自煎\r\n");
      out.write("\t\t\thandleDeptId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.orgId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\trecipeDeptId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.orgId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", \r\n");
      out.write("\t\t\tcreatedOperId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\tfirstDayCount: 0, // 首日量\r\n");
      out.write("\t\t\t// freqId: freq.freqId, // 频次编码\r\n");
      out.write("\t\t\torderClassifyType: \"S\", // 医嘱类别\r\n");
      out.write("\t\t\tchargeFlag: 1, //\r\n");
      out.write("\t\t\texecDeptId: \"\", // 执行科室\r\n");
      out.write("\t\t\trecordDoctorId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\t// 以下值需确认\r\n");
      out.write("\t\t\tstType:\"WO\",\r\n");
      out.write("\t\t\tprintFlag: \"0\",\r\n");
      out.write("\t\t\tordDosageUnit: \"g\",\r\n");
      out.write("\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\t// 以下为初始化值用于重置行数据\r\n");
      out.write("\t\t\tdrugQuality: \"\",\r\n");
      out.write("\t\t\tfreqCycleCount: 0,\r\n");
      out.write("\t\t\titemSysType: \"\",\r\n");
      out.write("\t\t\titemName: \"\",\r\n");
      out.write("\t\t\titemId: \"\",\r\n");
      out.write("\t\t\titemNo: \"\",\r\n");
      out.write("\t\t\tordDosage: 1,\r\n");
      out.write("\t\t\tfreqId: \"\",\r\n");
      out.write("\t\t\tusageId: \"\",\r\n");
      out.write("\t\t\tqty: 1,\r\n");
      out.write("\t\t\tqtyUnit: \"\",\r\n");
      out.write("\t\t\tstockDeptId: \"\",\r\n");
      out.write("\t\t\texecDeptId: \"\",\r\n");
      out.write("\t\t\tsample: \"\",\r\n");
      out.write("\t\t\temergencyFlag: 0,\r\n");
      out.write("\t\t\tmemo: \"\",\r\n");
      out.write("\t\t\tcheckFlag: \"0\",\r\n");
      out.write("\t\t\tdcFlag: \"0\",\r\n");
      out.write("\t\t\tneedconfirmFlag: \"0\",\r\n");
      out.write("\t\t\tconfirmFlag: \"0\",\r\n");
      out.write("\t\t\tsourceType: \"N\",\r\n");
      out.write("\t\t\tpageNo: \"0\",\r\n");
      out.write("\t\t\trowNo: \"0\",\r\n");
      out.write("\t\t\tcheckDate: mini.parseDate(\"0001-01-01\"),\r\n");
      out.write("\t\t\tdcCheckDate: mini.parseDate(\"0001-01-01\"),\r\n");
      out.write("\t\t\tlastdayEndTime: mini.parseDate(\"0001-01-01\"),\r\n");
      out.write("\t\t\t//登记信息\r\n");
      out.write("\t\t\tbedNo: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.bedNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\tpatientNursestationId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.admitNursestationId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\torgId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.orgId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\tclinicianDoctorId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.residentDoctId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\tclinicianDeptId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clinicianDeptId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t\t};\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取医嘱主键\r\n");
      out.write("\tfunction getOrderId () {\r\n");
      out.write("\t\tvar orderId = \"\";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getOrderId.do\",\r\n");
      out.write("            data: {},\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \torderId = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn orderId;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取最大组号\r\n");
      out.write("\tfunction getMaxGroupNo() {\r\n");
      out.write("\t\tvar result = 1;\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getMaxGroupNo.do\",\r\n");
      out.write("            data: {\r\n");
      out.write("            \tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("            \torderClassifyType: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${orderClassifyType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tresult = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\tvar gridList = grid.getList();\r\n");
      out.write("\t\tfor (var i = 0; i < gridList.length; i++) {\r\n");
      out.write("\t\t\tif (parseInt(gridList[i].groupNo) >= result) {\r\n");
      out.write("\t\t\t\tresult = parseInt(gridList[i].groupNo) + 1;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn result + \"\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取组合号\r\n");
      out.write("\tfunction getComboNo () {\r\n");
      out.write("\t\tvar comboNo = \"\";\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getComboNo.do\",\r\n");
      out.write("            data: {},\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tcomboNo = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn comboNo;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 单元格编辑前事件\r\n");
      out.write("\tfunction oncellbeginedit(e) {  \r\n");
      out.write("\t\tvar nonDrugType = [ \"UZ\", \"UM\", \"UN\", \"MF\", \"U\", \"UC\", \"UL\", \"UO\", \"MC\" ];\r\n");
      out.write("\t\tif (e.row.orderState != \"SV\") {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.row.itemSysType == \"HR\" && e.row.itemId) {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"recipeDoctorId\" || e.field == \"approvedDoctorId\" || e.field == \"dcDoctorId\" || e.field == \"printFlag\") {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"sample\" && e.row.itemSysType != \"UL\" && e.row.itemSysType != \"UC\") {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"emergencyFlag\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"memo\" && nonDrugType.contains(e.row.itemSysType)) {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"beginTime\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"ordDosageUnit\") {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"freqId\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 系统类别(TODO)\r\n");
      out.write("\t\tif (e.field == \"itemSysType\") {\r\n");
      out.write("\t\t\tvar freq = setDefaultOrderFrequency(e.row);\r\n");
      out.write("\t\t\tvar selected = grid.getSelected();\r\n");
      out.write("\t\t\tgrid.updateRow(selected,{\r\n");
      out.write("\t\t\t\tfreqId: freq.freqId,\r\n");
      out.write("\t\t\t\texecTimes: freq.execTimes,\r\n");
      out.write("\t\t\t\tfreqCycleType: freq.cycleType\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"groupNo\") {\r\n");
      out.write("\t\t\tresetGroupNo.setValue(e.value);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"ordDosage\") {\r\n");
      out.write("\t\t\tresetOrdDosage.setValue(e.value);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"itemName\") {\r\n");
      out.write("\t\t\tif (!e.row.itemName) {\r\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"itemTask\",e.row);\r\n");
      out.write("\t\t\t\teditor.setText();\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"groupNoFlag\") {\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"ordDosage\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"days\" || e.field == \"qty\" || e.field == \"qtyUnit\") {\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"stockDeptId\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif ((e.field == \"usageId\" || e.field == \"stockDeptId\") && nonDrugType.contains(e.row.itemSysType)) {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"execDeptId\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"stockDeptId\" && e.row.itemSysparentType == \"Drug\" && e.row.chargeFlag != 1) {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"execDeptId\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"stockDeptId\" && e.row.itemId == \"Z999\") {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"execDeptId\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"freqId\" && (e.row.itemSysType == \"UC\" || e.row.itemSysType == \"UL\")) {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"execDeptId\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"ordDosage\" && e.row.itemSysType == \"UL\") {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t\tgrid.setCurrentCell([e.row,\"execDeptId\"]);\r\n");
      out.write("\t\t\tgrid.beginEditCell();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"endTime\") {\r\n");
      out.write("\t\t\taddNewOrder();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"stockDeptId\") {\r\n");
      out.write("\t\t\tif (e.row.chargeFlag == 1 && e.row.itemSysparentType == \"Drug\") {\r\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"stockDeptId\",e.row);\r\n");
      out.write("\t\t\t\teditor.load(\r\n");
      out.write("\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getStockDeptKVs.do?distributionType=2&drugId=\" + e.row.itemId + \"&recipeDeptId=\" + e.row.recipeDeptId\r\n");
      out.write("\t\t\t\t);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"sample\") {\r\n");
      out.write("\t\t\tif (e.row.itemSysType == \"UL\") {\r\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"sample\",e.row);\r\n");
      out.write("\t\t\t\teditor.load(\r\n");
      out.write("\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getPrimaryKeyKVs.do?dictType=BD_SAMPLETYPE\"\t\r\n");
      out.write("\t\t\t\t);\r\n");
      out.write("\t\t\t} else if (e.row.itemSysType == \"UC\") {\r\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"sample\",e.row);\r\n");
      out.write("\t\t\t\teditor.load(\r\n");
      out.write("\t\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getPrimaryKeyKVs.do?dictType=BD_CHECKPART\"\t\r\n");
      out.write("\t\t\t\t);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"stType\") {\r\n");
      out.write("\t\t\tif (e.row.itemSysparentType != \"Drug\") {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (e.row.itemId && e.row.itemId != \"Z999\") {\r\n");
      out.write("\t\t\t\t\tvar drug = {};\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pharmacy/common/comDrug/getDrugById.do\",\r\n");
      out.write("\t\t\t            data: {\r\n");
      out.write("\t\t\t            \tdrugId: e.row.itemId\r\n");
      out.write("\t\t\t            },\r\n");
      out.write("\t\t\t            type: \"post\",\r\n");
      out.write("\t\t\t            async: false,\r\n");
      out.write("\t\t\t            success: function (r) {\r\n");
      out.write("\t\t\t            \tdrug = r;\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        });\r\n");
      out.write("\t\t\t\t\tif (drug.phaTestFlag != \"1\") {\r\n");
      out.write("\t\t\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"orderType\") {\r\n");
      out.write("\t\t\tif (e.row.itemId) {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"itemName\") {\r\n");
      out.write("\t\t\tif (e.row.itemSysType == \"HR\") {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\tmini.alert(\"不允许在此界面开立草药医嘱!请点击【草药】按钮开立草药!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (!e.row.orderType) {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\tmini.alert(\"请选择医嘱类型!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (e.row.orderType == \"CD\" || e.row.orderType == \"QL\") {\r\n");
      out.write("\t\t\t\tif (e.editor.text != \"全部\" && e.row.itemSysType != \"WM\" && e.row.itemSysType != \"CM\" && e.row.itemSysType != \"HR\") {\r\n");
      out.write("\t\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\tmini.alert(\"【\" + orderType._valueMaps[e.row.orderType].text + \"】只能开立药品!\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (e.row.chargeFlag != 1) {\r\n");
      out.write("\t\t\t\tif (e.row.itemSysType == \"UC\" || e.row.itemSysType == \"UL\") {\r\n");
      out.write("\t\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\tmini.alert(\"【\" + orderType._valueMaps[e.row.orderType].text + \"】不能开立检查/检验项目!\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (e.row.orderClassifyType == \"L\") {\r\n");
      out.write("\t\t\t\tif (e.row.itemSysType == \"UC\" || e.row.itemSysType == \"UL\") {\r\n");
      out.write("\t\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\tmini.alert(\"【\" + orderType._valueMaps[e.row.orderType].text + \"】不能开立检查/检验项目!\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (e.row.itemSysType == \"HR\") {\r\n");
      out.write("\t\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\tmini.alert(\"【\" + orderType._valueMaps[e.row.orderType].text + \"】不能开立中草药!\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 以下为旧代码\r\n");
      out.write("\t\tif (e.field==\"itemName\") {\r\n");
      out.write("\t\t\tvar editor = grid.getCellEditor (\"itemTask\",e.row);\r\n");
      out.write("\t\t\tvar url;\r\n");
      out.write("\t\t\tif (e.row.itemSysType && e.row.itemSysType!= \"ALL\") {\r\n");
      out.write("\t\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/inOrder/getItemList.do?sourceType=N&sysType=\" + e.row.itemSysType;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\turl = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/inOrder/getItemList.do?sourceType=N\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\teditor.load(url);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//每次用量\r\n");
      out.write("\t\tif (e.field==\"ordDosage\") {\r\n");
      out.write("\t\t\tif (e.record.itemSysType && e.record.itemSysType==\"UL\") {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//用量单位\r\n");
      out.write("\t\tif (e.field==\"ordDosageUnit\") {\r\n");
      out.write("\t\t\tif (e.record.itemSysType && e.record.itemSysType==\"UL\") {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//天数\r\n");
      out.write("\t\tif (e.field==\"days\") {\r\n");
      out.write("\t\t\te.cancel = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//频次\r\n");
      out.write("\t\tif (e.field==\"freqId\") {\r\n");
      out.write("\t\t\tif (e.record.itemSysType && e.record.itemSysType==\"UL\" || e.record.itemSysType==\"UC\") {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//总量\r\n");
      out.write("\t\tif (e.field==\"qty\") {\r\n");
      out.write("\t\t\tif (e.record.itemSysType && e.record.itemSysType==\"UL\" || e.record.itemSysType==\"UC\") {\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field==\"usageId\" || e.field==\"stockDeptId\") {\r\n");
      out.write("\t\t\tvar itemSysType = e.row.itemSysType;\r\n");
      out.write("\t\t\tif (itemSysType && nonDrugType.contains(itemSysType)) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(e.row,{\r\n");
      out.write("\t\t\t\t\tstockDeptId: \"\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 单元格编辑后事件\r\n");
      out.write("\tfunction cellendedit (e) {\r\n");
      out.write("\t\tif (e.field == \"itemSysType\") {\r\n");
      out.write("\t\t\tif (e.row.itemSysType == \"HR\") {\r\n");
      out.write("\t\t\t\tmini.alert(\"不允许在此界面开立草药医嘱!请点击【草药】按钮开立草药!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (e.row.orderType == \"CD\" || e.row.orderType == \"QL\") {\r\n");
      out.write("\t\t\t\tif (e.editor.text != \"全部\" && e.row.itemSysType != \"WM\" && e.row.itemSysType != \"CM\" && e.row.itemSysType != \"HR\") {\r\n");
      out.write("\t\t\t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\tmini.alert(\"【\" + orderType._valueMaps[e.row.orderType].text + \"】只能开立药品!\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"ordDosage\") {\r\n");
      out.write("\t\t\tvar g = parseFloat(e.value);\r\n");
      out.write("\t\t\tif (g <= 0 || !isNumber(g)) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(e.row,{\r\n");
      out.write("\t\t\t\t\tordDosage: resetOrdDosage.value\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("// \t\t\tvar ordStdDosageMap = getOrdStdDosage(e.row.itemId,{\r\n");
      out.write("// \t\t\t\tquantity: e.value,\r\n");
      out.write("// \t\t\t\tunit: e.row.ordDosageUnit\r\n");
      out.write("// \t\t\t});\r\n");
      out.write("\t\t\tvar ord = reComputeQty(e.row);\r\n");
      out.write("\t\t\tgrid.updateRow(e.row,{\r\n");
      out.write("\t\t\t\tordDosage: e.value,\r\n");
      out.write("\t\t\t\tqty: ord.qty,\r\n");
      out.write("\t\t\t\tqtyUnit: ord.qtyUnit,\r\n");
      out.write("\t\t\t\tqtyUnitShowtype: ord.qtyUnitShowtype\r\n");
      out.write("// \t\t\t\tordStdDosage: ordStdDosageMap.quantity,\r\n");
      out.write("// \t\t\t\tordStdDosageUnit: ordStdDosageMap.unit\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"freqId\") {\r\n");
      out.write("\t\t\tvar freq = getFreq(e.row.freqId);\r\n");
      out.write("\t\t\tvar combRows = grid.findRows(function (row) {\r\n");
      out.write("\t\t\t    if(row.combId == e.row.combId) return true;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tfor (var i = 0; i < combRows.length; i++) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(combRows[i],{\r\n");
      out.write("\t\t\t\t\tfreqId: e.row.freqId,\r\n");
      out.write("\t\t\t\t\texecTimes: freq.execTimes,\r\n");
      out.write("\t\t\t\t\tfreqCycleType: freq.cycleType\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tvar ord = reComputeQty(combRows[i]);\r\n");
      out.write("\t\t\t\tgrid.updateRow(combRows[i],{\r\n");
      out.write("\t\t\t\t\tqty: ord.qty,\r\n");
      out.write("\t\t\t\t\tqtyUnit: ord.qtyUnit,\r\n");
      out.write("\t\t\t\t\tqtyUnitShowtype: ord.qtyUnitShowtype\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"usageId\") {\r\n");
      out.write("\t\t\tvar combRows = grid.findRows(function (row) {\r\n");
      out.write("\t\t\t    if(row.combId == e.row.combId) return true;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tfor (var i = 0; i < combRows.length; i++) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(combRows[i],{\r\n");
      out.write("\t\t\t\t\tusageId: e.row.usageId\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"execDeptId\") {\r\n");
      out.write("\t\t\tvar combRows = grid.findRows(function (row) {\r\n");
      out.write("\t\t\t    if(row.combId == e.row.combId) return true;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tfor (var i = 0; i < combRows.length; i++) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(combRows[i],{\r\n");
      out.write("\t\t\t\t\texecDeptId: e.row.execDeptId\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"orderType\") {\r\n");
      out.write("\t\t\tdebugger;\r\n");
      out.write("\t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\tgrid.updateRow(e.row,{\r\n");
      out.write("\t\t\t\tchargeFlag: orderType._valueMaps[e.row.orderType].chargeFlag\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"groupNo\") {\r\n");
      out.write("\t\t\tif (e.value <= 0 || (parseInt(e.value) + \"\") == resetGroupNo.value || !isNumber(e.value)) {\r\n");
      out.write("\t\t\t\tgrid.updateRow(e.row,{\r\n");
      out.write("\t\t\t\t\tgroupNo: resetGroupNo.value\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tsetCombInfo(e.row.combId,e.row);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"stockDeptId\") {\r\n");
      out.write("\t\t\tvar editor = grid.getCellEditor(\"stockDeptId\",e.row);\r\n");
      out.write("\t\t\teditor.load(\r\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\"\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 设置默认的频次类型\r\n");
      out.write("    function setDefaultOrderFrequency (inOrder) {\r\n");
      out.write("\t\tvar freq = {};\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/setDefaultOrderFrequency.do\",\r\n");
      out.write("            data: { \r\n");
      out.write("            \torderClassifyType: inOrder.orderClassifyType,\r\n");
      out.write("            \titemSysparentType: inOrder.itemSysparentType,\r\n");
      out.write("            \torderType: inOrder.orderType\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tfreq = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn freq;\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write(" // 获取药品基本信息\r\n");
      out.write("\tfunction onItemValueChanged(e) {\r\n");
      out.write("\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\tif (row.chargeFlag != \"1\" && e.value.substring(0,1) == \"@\") {\r\n");
      out.write("\t\t\tvar item = {\r\n");
      out.write("\t\t\t\titemId: \"Z999\",\r\n");
      out.write("\t\t\t\titemNo: \"@\",\r\n");
      out.write("\t\t\t\titemName: e.value.substring(1),\r\n");
      out.write("\t\t\t\titemSysType: \"UZ\"\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\trow.itemId = item.itemId;\r\n");
      out.write("\t\t\trow.itemNo = item.itemNo;\r\n");
      out.write("\t\t\trow.itemName = item.itemName;\r\n");
      out.write("\t\t\trow.itemFeeType = item.itemFeeType;\r\n");
      out.write("\t\t\trow.itemSysType = item.itemSysType;\r\n");
      out.write("\t\t\tif (row.itemSysType == \"HR\") {\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"不允许在此界面开立草药医嘱!请点击【草药】按钮开立草药!\")\r\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"itemTask\",row);\r\n");
      out.write("\t\t\t\teditor.setText();\r\n");
      out.write("\t\t\t\teditor.setValue();\r\n");
      out.write("\t\t\t\tvar resetOrder = getNewOrder();\r\n");
      out.write("\t\t\t\tresetOrder.groupNo = row.groupNo;\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,resetOrder);\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\trow.itemSysparentType = \"NonDrug\";\r\n");
      out.write("\t\t\tvalidInOrderBefore(row,item);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tvar item = e.selected;\r\n");
      out.write("\t\t\tif (item) {\r\n");
      out.write("\t\t\t\trow.itemId = item.itemId;\r\n");
      out.write("\t\t\t\trow.itemNo = item.itemNo;\r\n");
      out.write("\t\t\t\trow.itemName = item.itemName;\r\n");
      out.write("\t\t\t\trow.itemPrice = item.itemPrice;\r\n");
      out.write("\t\t\t\trow.itemFeeType = item.itemFeeType;\r\n");
      out.write("\t\t\t\trow.itemSysType = item.itemSysType;\r\n");
      out.write("\t\t\t\tif (row.itemSysType == \"HR\") {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(\"不允许在此界面开立草药医嘱!请点击【草药】按钮开立草药!\")\r\n");
      out.write("\t\t\t\t\tvar editor = grid.getCellEditor(\"itemTask\",row);\r\n");
      out.write("\t\t\t\t\teditor.setText();\r\n");
      out.write("\t\t\t\t\teditor.setValue();\r\n");
      out.write("\t\t\t\t\tvar resetOrder = getNewOrder();\r\n");
      out.write("\t\t\t\t\tresetOrder.groupNo = row.groupNo;\r\n");
      out.write("\t\t\t\t\tgrid.updateRow(row,resetOrder);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tvar nonDrugType = [ \"UZ\", \"UM\", \"UN\", \"MF\", \"U\", \"UC\", \"UL\", \"UO\", \"MC\" ];\r\n");
      out.write("\t\t\t\tif (nonDrugType.contains(item.itemSysType)) {\r\n");
      out.write("\t\t\t\t\trow.itemSysparentType = \"NonDrug\";\r\n");
      out.write("\t\t\t\t\trow.userdefinedType = \"\";\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\trow.itemSysparentType = \"Drug\";\r\n");
      out.write("\t\t\t\t\trow.userdefinedType = item.drugType;\r\n");
      out.write("\t\t\t\t\tif (item.drugUsage) {\r\n");
      out.write("\t\t\t\t\t\trow.usageId = item.drugUsage;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (item.drugFrequency) {\r\n");
      out.write("\t\t\t\t\t\trow.freqId = item.drugFrequency;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tvalidInOrderBefore(row,item);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t//mini.alert(\"请输入@+嘱托项目!\")\r\n");
      out.write("\t\t\t\tvar editor = grid.getCellEditor(\"itemTask\",row);\r\n");
      out.write("\t\t\t\teditor.setText();\r\n");
      out.write("\t\t\t\teditor.setValue();\r\n");
      out.write("\t\t\t\tvar resetOrder = getNewOrder();\r\n");
      out.write("\t\t\t\tresetOrder.groupNo = row.groupNo;\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,resetOrder);\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write(" \r\n");
      out.write("\t// 开医嘱前验证\r\n");
      out.write("\tfunction validInOrderBefore (inOrder,itemBase,unDoflag) {\r\n");
      out.write("\t\tvar row = grid.findRow (function (e) {\r\n");
      out.write("\t\t    if(e.orderId == inOrder.orderId) return true;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tvar json = mini.encode(inOrder); \r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/validInOrderBefore.do\",\r\n");
      out.write("            data: { \r\n");
      out.write("            \tjson: json,\r\n");
      out.write("            \tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tif (r.resultNum == \"-1\") {\r\n");
      out.write("\t\t\t\t\tmini.alert(r.message);\r\n");
      out.write("\t\t\t\t\tvar editor = grid.getCellEditor(\"itemTask\",row);\r\n");
      out.write("\t\t\t\t\teditor.setText();\r\n");
      out.write("\t\t\t\t\teditor.setValue();\r\n");
      out.write("\t\t\t\t\tvar resetOrder = getNewOrder();\r\n");
      out.write("\t\t\t\t\tresetOrder.groupNo = row.groupNo;\r\n");
      out.write("\t\t\t\t\tgrid.updateRow(row,resetOrder);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t} else if (r.resultNum == \"-2\") {\r\n");
      out.write("\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t    message: r.message,\r\n");
      out.write("\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t    html: \"\",   \r\n");
      out.write("\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t    \t\tucItemListSelectItem(r.inOrder,itemBase,unDoflag);\r\n");
      out.write("\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t    \t\tvar editor = grid.getCellEditor(\"itemTask\",row);\r\n");
      out.write("\t\t\t\t\t    \t\teditor.setText();\r\n");
      out.write("\t\t\t\t\t\t\t\teditor.setValue();\r\n");
      out.write("\t\t\t\t\t\t\t\tvar resetOrder = getNewOrder();\r\n");
      out.write("\t\t\t\t\t\t\t\tresetOrder.groupNo = row.groupNo;\r\n");
      out.write("\t\t\t\t\t\t\t\tgrid.updateRow(row,resetOrder);\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t} else if (r.resultNum == \"1\") {\r\n");
      out.write("\t\t\t\t\tucItemListSelectItem(r.inOrder,itemBase,unDoflag);\r\n");
      out.write("\t\t\t\t}else if (r.resultNum == \"-3\") {\r\n");
      out.write("\t\t\t\t\teditor.setText();\r\n");
      out.write("\t\t\t\t\teditor.setValue();\r\n");
      out.write("\t\t\t\t\tvar resetOrder = getNewOrder();\r\n");
      out.write("\t\t\t\t\tresetOrder.groupNo = row.groupNo;\r\n");
      out.write("\t\t\t\t\tgrid.updateRow(row,resetOrder);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tmini.alert(r);\r\n");
      out.write("\t\t\t\t\teditor.setText();\r\n");
      out.write("\t\t\t\t\teditor.setValue();\r\n");
      out.write("\t\t\t\t\tvar resetOrder = getNewOrder();\r\n");
      out.write("\t\t\t\t\tresetOrder.groupNo = row.groupNo;\r\n");
      out.write("\t\t\t\t\tgrid.updateRow(row,resetOrder);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 根据选择的项目给当前编辑的医嘱赋值\r\n");
      out.write("\tfunction ucItemListSelectItem (inOrder,itemBase,unDoflag) {\r\n");
      out.write("\t\tif (unDoflag) {\r\n");
      out.write("\t\t\tfillInOrderTips(inOrder,itemBase,unDoflag);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tvar selected = grid.findRow (function (e) {\r\n");
      out.write("\t\t\t    if(e.orderId == inOrder.orderId) return true;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tif (inOrder.orderType == null || inOrder.orderType.isEmpty()) {\r\n");
      out.write("\t\t\t\tmini.alert(\"医嘱类型为空!请选择\");\r\n");
      out.write("\t\t\t\tvar row = grid.findRow (function (e) {\r\n");
      out.write("\t\t\t\t    if(e.orderId == inOrder.orderId) return true;\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tvar cellEditor = grid.getCellEditor (\"orderType\",row);\r\n");
      out.write("\t\t\t\tcellEditor.showPopup(true);\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tinOrder.showFlag = \"1\";\r\n");
      out.write("\t\t\t\t//TODO System.Collections.Generic.List<WF.Medical.Models.InPatient.Order> combOrder = this.GetCombOrder(order.ID, order.ComnNo, false);\r\n");
      out.write("\t\t\t\tif (inOrder.itemSysparentType == \"Drug\") {\r\n");
      out.write("\t\t\t\t\tif (inOrder.itemId != \"Z999\") {\r\n");
      out.write("\t\t\t\t\t\tinOrder.execDeptId = inOrder.recipeDeptId;\r\n");
      out.write("\t\t\t\t\t\tif (inOrder.chargeFlag != \"1\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.stockDeptId = inOrder.recipeDeptId;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t//TODO order.StockDept = base.GetDeptByCache(stockDeptID);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t//TODO order.OrdDosage = WF.Medical.UI.Function.GetDrugDosage(drugByCache);\r\n");
      out.write("\t\t\t\t\t\tvar ordDosageMap = getDrugDosage(itemBase);\r\n");
      out.write("\t\t\t\t\t\tinOrder.ordDosage = ordDosageMap.quantity;\r\n");
      out.write("\t\t\t\t\t\tinOrder.ordDosageUnit = ordDosageMap.unit;\r\n");
      out.write("\t\t\t\t\t\tif (itemBase.storageIpsSplit == \"0\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnitShowtype = 0;\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnit = itemBase.drugBulkUnit; \r\n");
      out.write("\t\t\t\t\t\t} else if (itemBase.storageIpsSplit == \"1\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnitShowtype = 1;\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnit = itemBase.drugPackageUnit;\r\n");
      out.write("\t\t\t\t\t\t} else if (itemBase.storageIpsSplit == \"2\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnitShowtype = 0;\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnit = itemBase.drugBulkUnit;\r\n");
      out.write("\t\t\t\t\t\t} else if (itemBase.storageIpsSplit == \"3\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnitShowtype = 1;\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.qtyUnit = itemBase.drugPackageUnit;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (itemBase.phaTestFlag == \"1\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.stType = \"ND\";\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.stType = \"WO\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t \t\t\t\t\t//this.fpOrder_Sheet1.SetTag(activeRowIndex, this.GetColIndex(ucInput.Col.mcyldw每次用量单位), WF.Medical.UI.Function.GetDosageUnit(drugByCache));\r\n");
      out.write("\t \t\t\t\t\t//this.fpOrder_Sheet1.SetTag(activeRowIndex, this.GetColIndex(ucInput.Col.zldw总量单位), WF.Medical.UI.Function.GetQtyUnit(order.OrderType.OrderClassify, drugByCache));\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tinOrder.execDeptId = inOrder.recipeDeptId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.stockDeptId = inOrder.recipeDeptId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.stType = \"WO\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t//TODO\r\n");
      out.write("\t\t\t\t\tif (!inOrder.freqId) {\r\n");
      out.write("\t\t\t\t\t\tvar freq = setDefaultOrderFrequency(inOrder);\r\n");
      out.write("\t\t\t\t\t\tinOrder.freqId = freq.freqId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.execTimes = freq.execTimes;\r\n");
      out.write("\t\t\t\t\t\tinOrder.freqCycleType = freq.cycleType;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (inOrder.itemId != \"Z999\") {\r\n");
      out.write("\t\t\t\t\t\t// NonDrug undrugByCache = base.GetUndrugByCache(itemBase.ID);\r\n");
      out.write("\t\t\t\t\t\t//TODO order.OrdDosage.Quantity = 1m;...\r\n");
      out.write("\t\t\t\t\t\tinOrder.qty = 1;\r\n");
      out.write("\t\t\t\t\t\tinOrder.ordDosage = 1;\r\n");
      out.write("\t\t\t\t\t\tinOrder.ordDosageUnit = itemBase.ordDosageUnit;\r\n");
      out.write("\t\t\t\t\t\tinOrder.qtyUnit = itemBase.ordDosageUnit;\r\n");
      out.write("\t\t\t\t\t\tinOrder.qtyUnitShowtype = 1;\r\n");
      out.write("\t\t\t\t\t\tif (itemBase.itemSysType == \"UL\" && itemBase.isurgent == \"1\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.emergencyFlag = 1;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.emergencyFlag = 0;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tinOrder.stType = \"WO\";\r\n");
      out.write("\t\t\t\t\t\tinOrder.drugPackageQty = 1;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tinOrder.drugPackageQty = 1;\r\n");
      out.write("\t\t\t\t\t\tinOrder.ordDosage = 1;\r\n");
      out.write("\t\t\t\t\t\tinOrder.ordDosageUnit = \"次\";\r\n");
      out.write("\t\t\t\t\t\tinOrder.execDeptId = inOrder.recipeDeptId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.stType = \"WO\";\r\n");
      out.write("\t\t\t\t\t\tinOrder.drugOrdDosageUnit = \"次\";\r\n");
      out.write("\t\t\t\t\t\tinOrder.qty = 1;\r\n");
      out.write("\t\t\t\t\t\tinOrder.qtyUnit = \"次\";\r\n");
      out.write("\t\t\t\t\t\tinOrder.qtyUnitShowtype = 1;\r\n");
      out.write("\t\t\t\t\t\tif (itemBase && itemBase.itemSysType == \"UL\" && itemBase.isurgent == \"1\") {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.emergencyFlag = 1;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.emergencyFlag = 0;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tinOrder.itemPrice = 0;\r\n");
      out.write("\t\t\t\t\t\tinOrder.itemOriginalPrice = 0;\r\n");
      out.write("\t\t\t\t\t\t//以下按护士分解赋值\r\n");
      out.write("\t\t\t\t\t\tinOrder.drugPackageUnit = \"次\";\r\n");
      out.write("\t\t\t\t\t\tinOrder.drugBlukUnit = \"次\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t//TODO\r\n");
      out.write("\t\t\t\t\tif (!inOrder.freqId) {\r\n");
      out.write("\t\t\t\t\t\tvar freq = setDefaultOrderFrequency(inOrder);\r\n");
      out.write("\t\t\t\t\t\tinOrder.freqId = freq.freqId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.execTimes = freq.execTimes;\r\n");
      out.write("\t\t\t\t\t\tinOrder.freqCycleType = freq.cycleType;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tinOrder.execDeptId = setExecDept(inOrder);\r\n");
      out.write("\t\t\t\t\tinOrder.ordStdDosage = inOrder.ordDosage;\r\n");
      out.write("\t\t\t\t\tinOrder.ordStdDosageUnit = inOrder.ordDosageUnit;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${crossDept.handleDept}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") {\r\n");
      out.write("\t\t\t\t\tinOrder.handleDeptId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${crossDept.handleDept}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tinOrder.handleDeptId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.orgId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (inOrder.orderClassifyType == \"L\") {\r\n");
      out.write("\t\t\t\t\tinOrder.firstDayCount = setFirstDayCount(inOrder,2);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tinOrder.confirmFlag = 0;\r\n");
      out.write("\t\t\t\tinOrder.confirmTime = mini.parseDate(\"0001-01-01\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfillInOrderTips(inOrder,itemBase);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取医嘱项目提示信息\r\n");
      out.write("\tfunction fillInOrderTips (inOrder,itemBase,unDoflag) {\r\n");
      out.write("\t\tif (!\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") {\r\n");
      out.write("\t\t\tvar row = grid.findRow (function (e) {\r\n");
      out.write("\t\t    \tif(e.orderId == inOrder.orderId) return true;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("    \t\tgrid.updateRow(row,inOrder);\r\n");
      out.write("    \t\tsortGrid();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif (unDoflag) {\r\n");
      out.write("\t\t\t\tif (!inOrder.execDeptId) {\r\n");
      out.write("\t\t\t\t\tif (inOrder.itemSysparentType == \"Drug\") {\r\n");
      out.write("\t\t\t\t\t\tinOrder.execDeptId = inOrder.recipeDeptId;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tinOrder.execDeptId = setExecDept(inOrder);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (!inOrder.freqId) {\r\n");
      out.write("\t\t\t\t\tvar freq = setDefaultOrderFrequency(inOrder);\r\n");
      out.write("\t\t\t\t\tinOrder.freqId = freq.freqId;\r\n");
      out.write("\t\t\t\t\tinOrder.execTimes = freq.execTimes;\r\n");
      out.write("\t\t\t\t\tinOrder.freqCycleType = freq.cycleType;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (inOrder.itemSysparentType == \"Drug\") {\r\n");
      out.write("\t\t\t\tif (itemBase && itemBase.phaTestFlag == \"1\") {\r\n");
      out.write("\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t\t\t    message: \"【\" + itemBase.itemName + \"】<br>是否需要皮试?\",\r\n");
      out.write("\t\t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t\t\t    html: \"\",   \r\n");
      out.write("\t\t\t\t\t    callback: function(action){\r\n");
      out.write("\t\t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t    \t\tinOrder.stType = \"ND\";\r\n");
      out.write("\t\t\t\t\t    \t\tfillInOrderTips2(inOrder,itemBase);\r\n");
      out.write("\t\t\t\t\t    \t} else {\r\n");
      out.write("\t\t\t\t\t    \t\tinOrder.stType = \"FR\";\r\n");
      out.write("\t\t\t\t\t    \t\tfillInOrderTips2(inOrder,itemBase);\r\n");
      out.write("\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tinOrder.stType = \"WO\";\r\n");
      out.write("\t\t\t\t\tfillInOrderTips2(inOrder,itemBase);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (itemBase && itemBase.isprecious == \"1\") {\r\n");
      out.write("\t\t\t\t\tmini.alert(\"该材料为高值材料，请做知情同意书的签署\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tfillInOrderTips2(inOrder,itemBase);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取医嘱项目提示信息并更新当前行数据\r\n");
      out.write("\tfunction fillInOrderTips2 (inOrder,itemBase) {\r\n");
      out.write("\t\tif (inOrder.itemSysparentType == \"Drug\") {\r\n");
      out.write("\t\t\tvar itemJson = mini.encode(itemBase); \r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/THSDrugTips.do\",\r\n");
      out.write("\t            data: { \r\n");
      out.write("\t            \tjson: itemJson\r\n");
      out.write("\t            },\r\n");
      out.write("\t            type: \"post\",\r\n");
      out.write("\t            async: false,\r\n");
      out.write("\t            success: function (r) {\r\n");
      out.write("\t            \tif (r != \"no\") {\r\n");
      out.write("\t            \t\tmini.alert(r);\r\n");
      out.write("\t            \t}\r\n");
      out.write("\t            }\r\n");
      out.write("\t        });\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tvar json = mini.encode(inOrder);\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/siApproveTips.do\",\r\n");
      out.write("            data: { \r\n");
      out.write("            \tjson: json,\r\n");
      out.write("            \tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tif (r != \"no\") {\r\n");
      out.write("            \t\tmini.showMessageBox({\r\n");
      out.write("    \t\t\t\t    title: \"提示\",    \r\n");
      out.write("    \t\t\t\t    message: r,\r\n");
      out.write("    \t\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("    \t\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("    \t\t\t\t    html: \"\",   \r\n");
      out.write("    \t\t\t\t    callback: function(action){\r\n");
      out.write("    \t\t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("    \t\t\t\t    \t\tinOrder.siApproveFlag = 1;\r\n");
      out.write("    \t\t\t\t    \t\tvar row = grid.findRow (function (e) {\r\n");
      out.write("\t\t\t\t\t\t\t    \tif(e.orderId == inOrder.orderId) return true;\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("    \t\t\t\t    \t\tif (inOrder.itemSysType == \"UL\") {\r\n");
      out.write("    \t\t    \t\t\t\t\tinOrder.sample = inOrder.sampleId + \"_BD_SAMPLETYPE\";\r\n");
      out.write("    \t\t    \t\t\t\t}\r\n");
      out.write("    \t\t    \t\t\t\tif (inOrder.itemSysType == \"UC\") {\r\n");
      out.write("    \t\t    \t\t\t\t\tinOrder.sample = inOrder.checkPointId + \"_BD_CHECKPART\";\r\n");
      out.write("    \t\t    \t\t\t\t}\r\n");
      out.write("    \t\t\t\t    \t\tgrid.updateRow(row,inOrder);\r\n");
      out.write("    \t\t\t\t    \t\tsortGrid();\r\n");
      out.write("    \t\t\t\t    \t} else {\r\n");
      out.write("    \t\t\t\t    \t\tinOrder.siApproveFlag = 0;\r\n");
      out.write("    \t\t\t\t    \t\tvar row = grid.findRow (function (e) {\r\n");
      out.write("\t\t\t\t\t\t\t    \tif(e.orderId == inOrder.orderId) return true;\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("    \t\t\t\t    \t\tif (inOrder.itemSysType == \"UL\") {\r\n");
      out.write("    \t\t    \t\t\t\t\tinOrder.sample = inOrder.sampleId + \"_BD_SAMPLETYPE\";\r\n");
      out.write("    \t\t    \t\t\t\t}\r\n");
      out.write("    \t\t    \t\t\t\tif (inOrder.itemSysType == \"UC\") {\r\n");
      out.write("    \t\t    \t\t\t\t\tinOrder.sample = inOrder.checkPointId + \"_BD_CHECKPART\";\r\n");
      out.write("    \t\t    \t\t\t\t}\r\n");
      out.write("    \t\t\t\t    \t\tgrid.updateRow(row,inOrder);\r\n");
      out.write("    \t\t\t\t    \t\tsortGrid();\r\n");
      out.write("    \t\t\t\t    \t}\r\n");
      out.write("    \t\t\t\t    }\r\n");
      out.write("    \t\t\t\t});\r\n");
      out.write("            \t} else {\r\n");
      out.write("            \t\tinOrder.siApproveFlag = 0;\r\n");
      out.write("            \t\tvar row = grid.findRow (function (e) {\r\n");
      out.write("\t\t\t\t    \tif(e.orderId == inOrder.orderId) return true;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("            \t\tif (inOrder.itemSysType == \"UL\") {\r\n");
      out.write("    \t\t\t\t\tinOrder.sample = inOrder.sampleId + \"_BD_SAMPLETYPE\";\r\n");
      out.write("    \t\t\t\t}\r\n");
      out.write("    \t\t\t\tif (inOrder.itemSysType == \"UC\") {\r\n");
      out.write("    \t\t\t\t\tinOrder.sample = inOrder.checkPointId + \"_BD_CHECKPART\";\r\n");
      out.write("    \t\t\t\t}\r\n");
      out.write("\t\t    \t\tgrid.updateRow(row,inOrder);\r\n");
      out.write("\t\t    \t\tsortGrid();\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t}\r\n");
      out.write(" \r\n");
      out.write("\t// 项目下拉渲染\r\n");
      out.write("\tfunction onshowpopup(e) {\r\n");
      out.write("\t\te.sender.on(\"drawcell\", function(r){\r\n");
      out.write("\t\t\tif(r.item.tag.state != \"ok\") {\r\n");
      out.write("\t\t\t\tr.cellStyle = \"color: #f00\";\r\n");
      out.write("\t\t\t\tif(r.field == \"tag.state\") {\r\n");
      out.write("\t\t\t\t\tr.cellHtml = \"<span class='showCellTooltip'>无效</span>\";\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif(r.field == \"tag.state\") {\r\n");
      out.write("\t\t\t\t\tr.cellHtml = \"可用\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 设置执行科室\r\n");
      out.write("\tfunction setExecDept (inOrder) {\r\n");
      out.write("\t\tvar execDeptId = inOrder.recipeDeptId;\r\n");
      out.write("\t\tvar json = mini.encode(inOrder);\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/setExecDept.do\",\r\n");
      out.write("            data: {json: json},\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \texecDeptId = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn execDeptId;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 排序\r\n");
      out.write("\tfunction sortGrid () {\r\n");
      out.write("\t\tvar list = grid.getList();\r\n");
      out.write("\t\tlist.sort(function (a,b) {\r\n");
      out.write("\t\t\tif (parseInt(a.groupNo) > parseInt(b.groupNo)) {\r\n");
      out.write("\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t} else if (parseInt(a.groupNo) < parseInt(b.groupNo)) {\r\n");
      out.write("\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (parseInt(a.sortNo) > parseInt(b.sortNo)) {\r\n");
      out.write("\t\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tgrid.clearRows();\r\n");
      out.write("\t\tgrid.setData(list);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//行选中改变时事件( 获取项目信息)\r\n");
      out.write("\tfunction onShowItemInfo(e) {\r\n");
      out.write("\t\tcurrentRow = e.record; \r\n");
      out.write("\t\tif (!currentRow) {\r\n");
      out.write("\t\t\torderInfo.setValue();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(!currentRow.itemId || currentRow.itemId == \"Z999\") {\r\n");
      out.write("\t\t\torderInfo.setValue();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar itemNo = \"\";\r\n");
      out.write("\t\tvar specs = \"\";\r\n");
      out.write("\t\tif(currentRow.itemNo)itemNo = currentRow.itemNo; \r\n");
      out.write("\t\tif(currentRow.specs)specs = currentRow.specs;\r\n");
      out.write("\t\tvar showInfo = \"【药品名称: \" + itemNo +\" \"+ \r\n");
      out.write("\t\t\t\t\t   currentRow.itemName +\"】【规格:\"+ specs +\"】【单价 :\"+ \r\n");
      out.write("\t\t\t\t\t   currentRow.itemPrice +\"元/\"+ currentRow.qtyUnit +\"】\";\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getSingleDetail.do\";\r\n");
      out.write("\t\tvar data = {\r\n");
      out.write("\t\t\t\titemId : currentRow.itemId,\r\n");
      out.write("\t\t\t\tregisterId : currentRow.registerId\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tvar fn = function(info) {\r\n");
      out.write("\t\t\tshowInfo += \"\\n\" + info;\r\n");
      out.write("\t\t\torderInfo.setValue(showInfo);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$.post(url, data, fn);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 计算总量\r\n");
      out.write("\tfunction reComputeQty (inOrder) {\r\n");
      out.write("\t\tvar ord = {};\r\n");
      out.write("\t\tvar json = mini.encode(inOrder); \r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/reComputeQty.do\",\r\n");
      out.write("            data: {\r\n");
      out.write("            \tjson: json\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tord = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn ord;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 根据频次ID获取频次信息\r\n");
      out.write("\tfunction getFreq (freqId) {\r\n");
      out.write("\t\tvar freq = {};\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/frequency/getById.do\",\r\n");
      out.write("            data: {freqId: freqId},\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tfreq = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn freq;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 用法验证\r\n");
      out.write("\tfunction usageValidation (e) {\r\n");
      out.write("\t\tif (e.field == \"usageId\") {\r\n");
      out.write("\t\t\tif (e.row.itemSysparentType == \"Drug\" && e.row.itemId != \"Z999\" && !e.row.usageId) {\r\n");
      out.write("\t            e.errorText = \"【\" + e.row.itemName + \"】\" + \"用法不能为空\";\r\n");
      out.write("\t            e.isValid = false;\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//以下是删除医嘱\r\n");
      out.write("\t// 删除医嘱\r\n");
      out.write("\tvar deleteOrderList = [];\r\n");
      out.write("\tfunction delRow () {\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tif (rows.length == 0) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor (var i = 0; i < rows.length; i++) {\r\n");
      out.write("\t\t\tif (rows[i].itemSysType == \"HR\") {\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"不允许在此界面删除草药医嘱 【\"+rows[i].itemName+\"】！请点击【草药】按钮删除！\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (rows[i].printFlag != 0 || !isNewOrder(rows[i])) {\r\n");
      out.write("\t\t\t\ttop.mini.alert(rows[i].itemName + \" 已打印或审核，不允许继续操作！\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (rows[i].orderState == \"SD\") {\r\n");
      out.write("\t\t\t\ttop.mini.alert(rows[i].itemName + \" 医生已经审核，不允许继续操作！\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar json = mini.encode(rows);\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/delete.do\",\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tjson: json,\r\n");
      out.write("\t\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\t\torderClassifyType: \"S\",\r\n");
      out.write("\t\t\t\tIsCanEditHerbal: false\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\tif (r.num == 1) {\r\n");
      out.write("\t\t\t\t\tgrid.removeRows(rows,false);\r\n");
      out.write("\t\t\t\t\tfor (var j = 0; j < r.deleteOrderList.length; j++) {\r\n");
      out.write("\t\t\t\t\t\tdeleteOrderList.push(r.deleteOrderList[j]);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 判断是否为新开医嘱\r\n");
      out.write("\tfunction isNewOrder(row) {\r\n");
      out.write("\t\treturn (row.orderState == \"PD\" || row.orderState == \"SD\" || row.orderState == \"SV\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//以下是保存医嘱的方法\r\n");
      out.write("\t// 保存医嘱(grid的数据)\r\n");
      out.write("\tfunction save () {   \r\n");
      out.write("\t\tgrid.findRow(function(row){\r\n");
      out.write("\t\t    if(!row.itemId || !row.itemName) {\r\n");
      out.write("\t\t    \tgrid.removeRow(row, false);\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tgrid.validate();\r\n");
      out.write("\t\tif (grid.isValid() == false) {\r\n");
      out.write("\t\t    var error = grid.getCellErrors()[0];\r\n");
      out.write("\t\t    mini.showTips({\r\n");
      out.write("\t\t        content: error.errorText,    \r\n");
      out.write("\t\t        state: \"danger\",    \r\n");
      out.write("\t\t        x: \"center\",          \r\n");
      out.write("\t\t        y: \"center\",          \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t    grid.beginEditCell(error.record, error.column);\r\n");
      out.write("\t\t    return;\r\n");
      out.write("\t\t}\r\n");
      out.write("        var data = grid.getList();\r\n");
      out.write("        var json = mini.encode(data);\r\n");
      out.write("        var deleteOrderListJson = mini.encode(deleteOrderList);\r\n");
      out.write("        $.post(\r\n");
      out.write("        \t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getMsgBeforeSave.do\",\r\n");
      out.write("        \t{\r\n");
      out.write("        \t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("        \t\tjson: json,\r\n");
      out.write("        \t\torderClassifyType: \"S\",\r\n");
      out.write("        \t\tcrossDeptId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${crossDeptId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("        \t\tdeleteOrderListJson: deleteOrderListJson,\r\n");
      out.write("        \t\tnurFlag:true\r\n");
      out.write("        \t},\r\n");
      out.write("        \tfunction (r) {\r\n");
      out.write("        \t\tif (r.num == -1) {\r\n");
      out.write("        \t\t\ttop.mini.alert(r.message);\r\n");
      out.write("        \t\t} else if (r.num == -2) {\r\n");
      out.write("        \t\t\tmini.showMessageBox({\r\n");
      out.write("        \t\t\t    title: \"提示\",    \r\n");
      out.write("        \t\t\t    message: r.yesNoMsg,\r\n");
      out.write("        \t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("        \t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("        \t\t\t    html: \"\",   \r\n");
      out.write("        \t\t\t    callback: function(action){\r\n");
      out.write("        \t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("        \t\t\t    \t\talert(\"TODO\");\r\n");
      out.write("        \t\t\t    \t} else {\r\n");
      out.write("        \t\t\t    \t\talert(\"TODO\");\r\n");
      out.write("        \t\t\t    \t}\r\n");
      out.write("        \t\t\t    }\r\n");
      out.write("        \t\t\t});\r\n");
      out.write("        \t\t} else if (r.num == -3) {\r\n");
      out.write("        \t\t\treturn;\r\n");
      out.write("        \t\t} else if (r.num == 1) {\r\n");
      out.write("        \t\t\tif (r.warn) {\r\n");
      out.write("        \t\t\t\tmini.showTips({\r\n");
      out.write("        \t\t\t        content: r.warn,    \r\n");
      out.write("        \t\t\t        state: \"warn\", \r\n");
      out.write("        \t\t\t        x: \"center\",  \r\n");
      out.write("        \t\t\t        y: \"center\", \r\n");
      out.write("        \t\t\t        timeout: 2000     \r\n");
      out.write("        \t\t\t    });\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t\tcheckValid(r.dictionary);\r\n");
      out.write("        \t\t} else {\r\n");
      out.write("        \t\t\ttop.mini.error(r);\r\n");
      out.write("        \t\t}        \t\t\r\n");
      out.write("        \t}\r\n");
      out.write("        );\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 检查医嘱数据\r\n");
      out.write("\t// 新增或修改医嘱前检查患者是否欠费或超出警戒线\r\n");
      out.write("\tfunction checkValid (dictionary) {\r\n");
      out.write("\t\tvar dictionaryJson = mini.encode(dictionary);\r\n");
      out.write("\t\tvar gridList = grid.getList();\r\n");
      out.write("\t\tvar gridListJson = mini.encode(gridList);\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/checkValid.do\",\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\t\tdictionaryJson: dictionaryJson,\r\n");
      out.write("\t\t\t\tgridListJson: gridListJson,\r\n");
      out.write("\t\t\t\torderClassifyType: \"S\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\tif (r.num == 1) {\r\n");
      out.write("\t\t\t\t\tsaveHandle(r.dictionary);\r\n");
      out.write("\t\t\t\t} else if (r.num == -1) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(r.message);\r\n");
      out.write("\t\t\t\t} else if (r.num == -2) {\r\n");
      out.write("\t\t\t\t\tvar data = r.dictionary;\r\n");
      out.write("\t\t\t\t\tmini.showMessageBox({\r\n");
      out.write("        \t\t\t    title: \"提示\",    \r\n");
      out.write("        \t\t\t    message: r.yesNoMsg,\r\n");
      out.write("        \t\t\t    buttons: [\"ok\", \"no\", ],    \r\n");
      out.write("        \t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("        \t\t\t    html: \"\",   \r\n");
      out.write("        \t\t\t    callback: function(action){\r\n");
      out.write("        \t\t\t    \tif (action == \"ok\") {\r\n");
      out.write("        \t\t\t    \t\tsaveHandle(data);\r\n");
      out.write("        \t\t\t    \t}\r\n");
      out.write("        \t\t\t    }\r\n");
      out.write("        \t\t\t});\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t// 保存医嘱数据\r\n");
      out.write("\tfunction saveHandle (dictionary) {\r\n");
      out.write("\t\tvar dicSaveOrderJson = mini.encode(dictionary);\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/save.do\",\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\t\tdicSaveOrderJson: dicSaveOrderJson,\r\n");
      out.write("\t\t\t\tcrossDeptId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${crossDeptId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\t\torderClassifyType: \"S\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\tif (r.num == 1) {\r\n");
      out.write("\t\t\t\t\tif (r.warnInfo) {\r\n");
      out.write("\t\t\t\t\t\tmini.showTips({\r\n");
      out.write("        \t\t\t        content: r.warnInfo,    \r\n");
      out.write("        \t\t\t        state: \"warning\", \r\n");
      out.write("        \t\t\t        x: \"center\",  \r\n");
      out.write("        \t\t\t        y: \"center\", \r\n");
      out.write("        \t\t\t        timeout: 2000     \r\n");
      out.write("        \t\t\t    });\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(r.message);\r\n");
      out.write("\t\t\t\t\tgrid.reload();\r\n");
      out.write("\t\t\t\t\tdeleteOrderList = [];\r\n");
      out.write("\t\t\t\t} else if (r.num == -5) {\r\n");
      out.write("\t\t\t\t\ttop.mini.error(r.errorText);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//医嘱加载时事件\r\n");
      out.write("\tfunction onMainOrderLoad(e) {\r\n");
      out.write("\t\tfor (var i=0;i<e.data.length;i++) {\r\n");
      out.write("\t\t\tvar row = e.data[i];\r\n");
      out.write("\t\t\tif (row.itemSysType == \"UL\") {\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,{\r\n");
      out.write("\t\t\t\t\tsample: row.sampleId + \"_BD_SAMPLETYPE\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else if (row.itemSysType == \"UC\") {\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,{\r\n");
      out.write("\t\t\t\t\tsample: row.checkPointId + \"_BD_CHECKPART\"\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tgrid.accept();\r\n");
      out.write("\t\tsortGrid();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\twindow.onload = function(e){\r\n");
      out.write("\t\tgrid.load({\r\n");
      out.write("\t\t\tregisterId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\torderClassifyType : \"S\",\r\n");
      out.write("\t\t\tstateFlag:\"Default\",\r\n");
      out.write("\t\t\tsourceType :\"N\"\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 根据医嘱状态查询住院医嘱信息\r\n");
      out.write("\tfunction queryByState (stateName) {\r\n");
      out.write("// \t\tdocument.getElementById(\"stateFlag\").innerHTML = e.source.text;\r\n");
      out.write("\t\tgrid.load({\r\n");
      out.write("\t\t\tregisterId : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\torderClassifyType : \"S\",\r\n");
      out.write("\t\t\tstateFlag : stateName,\r\n");
      out.write("\t\t\tsourceType:\"N\"\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 医嘱审核前验证\r\n");
      out.write("\tfunction onchecking(){\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tfor(var i = 0; i<rows.length; i++) {\r\n");
      out.write("\t\t\tif (rows[i].orderState==\"SD\"){\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"此医嘱已审核,不能重复审核!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (rows[i].orderState==\"CK\" || rows[i].checkFlag==1) {\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"护士已执行，不能做此操作！\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(rows[i].printFlag!=0){\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"此医嘱已打印不能审核!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(rows[i]._state==\"added\"){ //当审核为保存的医嘱时的验证\r\n");
      out.write("\t\t\t\tmini.alert(\"请先保存后再审核!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (rows.length==0){\r\n");
      out.write("\t\t\ttop.mini.alert(\"请选择一条医嘱!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\tcheckWin.setTitle(\"审核人登录\");\r\n");
      out.write("\t\tcheckWin.show(\"center\",\"top\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//以下是审核医嘱代码\r\n");
      out.write("\t// 审核 医嘱\r\n");
      out.write("\tfunction doLogin(){\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tvar orderIds = [];\r\n");
      out.write("\t\tfor(var i=0;i<rows.length;i++){\r\n");
      out.write("\t\t\tif(rows[i].orderId){\r\n");
      out.write("\t\t\t\torderIds.push(rows[i].orderId);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(rows[i].printFlag!=0){\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"此医嘱已打印不能审核!\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/checkOrder.do\";\r\n");
      out.write("\t\tvar param = {registerId:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\taccount:$(\"#username\").val(),\r\n");
      out.write("\t\t\tpassword: $(\"#password\").val(),\r\n");
      out.write("\t\t\torderIds:orderIds.join(\",\")};\r\n");
      out.write("\t\t$.post(url, param, function(r){\r\n");
      out.write("\t\t\tif(r==\"ok\"){\r\n");
      out.write("\t\t\t\tcheckWin.hide();\r\n");
      out.write("\t\t\t\tgrid.reload();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\ttop.mini.error(r);\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 组合渲染\r\n");
      out.write("\tfunction groupRenderer (e) {\r\n");
      out.write("\t\tvar totalLength = grid.getList().length;\r\n");
      out.write("\t\tif (totalLength == 0) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else if (totalLength == 1) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else if (e.row.combId == null) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else if (e.rowIndex == 0 && grid.getRow(0).combId == grid.getRow(1).combId) {\r\n");
      out.write("\t\t\treturn '┓';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if (e.rowIndex > 0 && e.rowIndex < totalLength-1 && \r\n");
      out.write("\t\t\t\tgrid.getRow(e.rowIndex).combId != grid.getRow(e.rowIndex-1).combId\r\n");
      out.write("\t\t\t\t&& grid.getRow(e.rowIndex).combId == grid.getRow(e.rowIndex+1).combId) {\r\n");
      out.write("\t\t\treturn '┓';\r\n");
      out.write("\t\t}else if (e.rowIndex > 0 && e.rowIndex < totalLength-1 && \r\n");
      out.write("\t\t\t\tgrid.getRow(e.rowIndex).combId == grid.getRow(e.rowIndex-1).combId\r\n");
      out.write("\t\t\t\t&& grid.getRow(e.rowIndex).combId == grid.getRow(e.rowIndex+1).combId) {\r\n");
      out.write("\t\t\treturn '|';\r\n");
      out.write("\t\t}else if (e.rowIndex > 0 && e.rowIndex < totalLength-1 &&\r\n");
      out.write("\t\t\t\tgrid.getRow(e.rowIndex).combId == grid.getRow(e.rowIndex-1).combId\r\n");
      out.write("\t\t\t\t&& grid.getRow(e.rowIndex).combId != grid.getRow(e.rowIndex+1).combId) {\r\n");
      out.write("\t\t\treturn '┛';\r\n");
      out.write("\t\t}else if (e.rowIndex == totalLength-1 && \r\n");
      out.write("\t\t\t\tgrid.getRow(e.rowIndex).combId == grid.getRow(e.rowIndex-1).combId) {\r\n");
      out.write("\t\t\treturn '┛';\r\n");
      out.write("\t\t}else {\r\n");
      out.write("\t\t\treturn '';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 设置组合信息\r\n");
      out.write("\tfunction setCombInfo (combNo,inOrder) {\r\n");
      out.write("\t\tvar groupNo = inOrder.groupNo;\r\n");
      out.write("\t\tvar dicOrderList = grid.getList();\r\n");
      out.write("\t\tif (dicOrderList.length > 0 && inOrder.combId) {\r\n");
      out.write("\t\t\tvar order = grid.findRow(function(row){\r\n");
      out.write("\t\t\t    if(row.groupNo == groupNo && row.orderId != inOrder.orderId) return true;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tif (order && inOrder.orderId != order.orderId && order.itemId) {\r\n");
      out.write("\t\t\t\tif (inOrder.itemId) {\r\n");
      out.write("\t\t\t\t\tif (!validCombo([order,inOrder])) {\r\n");
      out.write("\t\t\t\t\t\tgrid.updateRow(inOrder,{\r\n");
      out.write("\t\t\t\t\t\t\tgroupNo: resetGroupNo.value\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else if (order && (order.printFlag != 0 || order.checkFlag == 1)) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(order.itemName + \" 已打印或审核，不允许继续操作！\");\r\n");
      out.write("\t\t\t\t\tgrid.updateRow(inOrder,{\r\n");
      out.write("\t\t\t\t\t\tgroupNo: resetGroupNo.value\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tchangeCombInfo(order,inOrder);\r\n");
      out.write("\t\t\t\tsortGrid();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tchangeCombInfo(order,inOrder);\r\n");
      out.write("\t\t\t\tsortGrid();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 改变组合信息\r\n");
      out.write("\tfunction changeCombInfo (combOrd,inOrder) {\r\n");
      out.write("\t\tvar orderData = mini.clone(inOrder);\r\n");
      out.write("\t\tif (combOrd && combOrd.orderId) {\r\n");
      out.write("\t\t\torderData.groupNo = combOrd.groupNo;\r\n");
      out.write("\t\t\torderData.sortNo = getMaxSortNo(orderData);\r\n");
      out.write("\t\t\torderData.usageId = combOrd.usageId;\r\n");
      out.write("\t\t\torderData.freqId = combOrd.freqId;\r\n");
      out.write("\t\t\torderData.firstDayCount = combOrd.firstDayCount;\r\n");
      out.write("\t\t\torderData.days = combOrd.days;\r\n");
      out.write("\t\t\torderData.execDeptId = combOrd.execDeptId;\r\n");
      out.write("\t\t\torderData.combId = combOrd.combId;\r\n");
      out.write("\t\t\torderData.beginTime = combOrd.beginTime;\r\n");
      out.write("\t\t\torderData.endTime = combOrd.endTime;\r\n");
      out.write("\t\t\tif (!orderData.itemId) {\r\n");
      out.write("\t\t\t\torderData.itemSysparentType = combOrd.itemSysparentType;\r\n");
      out.write("\t\t\t\torderData.itemSysType = combOrd.itemSysType;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tgrid.updateRow(inOrder,orderData);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tgrid.updateRow(inOrder,{\r\n");
      out.write("\t\t\t\tcombId: getComboNo(),\r\n");
      out.write("\t\t\t\tsortNo: getMaxSortNo(inOrder)\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 组合验证\r\n");
      out.write("\tfunction validCombo (orderList) {\r\n");
      out.write("\t\tvar flag = false;\r\n");
      out.write("\t\tvar orderListJson = mini.encode(orderList);\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/validCombo.do\",\r\n");
      out.write("            data: {orderListJson: orderListJson},\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tif (r.num == 1) {\r\n");
      out.write("            \t\tflag = true;\r\n");
      out.write("            \t} else {\r\n");
      out.write("            \t\ttop.mini.alert(r.message);\r\n");
      out.write("            \t\tflag = false;\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn flag;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取最大排序号\r\n");
      out.write("\tfunction getMaxSortNo (inOrder) {\r\n");
      out.write("\t\tvar num = 0;\r\n");
      out.write("\t\tvar groupRows = grid.findRows(function(row){\r\n");
      out.write("\t\t    if(row.groupNo == inOrder.groupNo && row.orderId != inOrder.orderId) return true;\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tif (grid.data.length > 0 && groupRows.length > 0) {\r\n");
      out.write("\t\t\tfor (var i = 0; i < groupRows.length; i++) {\r\n");
      out.write("\t\t\t\tif (parseInt(groupRows[i].sortNo) > num) {\r\n");
      out.write("\t\t\t\t\tnum = parseInt(groupRows[i].sortNo);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (num != inOrder.sortNo) {\r\n");
      out.write("\t\t\t\tnum++;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tnum = inOrder.groupNo + \"01\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn num;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取单位和用量\r\n");
      out.write("\tfunction getDrugDosage (drug) {\r\n");
      out.write("\t\tvar result = {\r\n");
      out.write("\t\t\tquantity: \"\",\r\n");
      out.write("\t\t\tunit: \"\"\r\n");
      out.write("\t\t}; \r\n");
      out.write("\t\tvar drugJson = mini.encode(drug); \r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getDrugDosage.do\",\r\n");
      out.write("            data: {\r\n");
      out.write("            \tdrugJson: drugJson\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tresult = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn result;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//右键菜单\r\n");
      out.write("\t//gridMenu菜单右键打开前事件\r\n");
      out.write("\tfunction gridMenuBeforeOpen(e) {\r\n");
      out.write("\t\tvar menu = e.sender;\r\n");
      out.write("\t\tvar cancelCheckOrder = mini.getbyName(\"cancelCheckOrder\",menu);  \r\n");
      out.write("\t\tvar cancelDcOrder = mini.getbyName(\"cancelDcOrder\",menu);\r\n");
      out.write("\t\tcancelCheckOrder.hide();\r\n");
      out.write("\t\tcancelDcOrder.hide();\r\n");
      out.write("\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\tif (row) {\r\n");
      out.write("\t\t\te.cancel = false;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t//阻止浏览器默认右键菜单\r\n");
      out.write("\t\t\te.htmlEvent.preventDefault();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (row.orderState==\"SD\") {\r\n");
      out.write("\t\t\tcancelCheckOrder.show();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tcancelCheckOrder.hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (row.orderState==\"DC\") {\r\n");
      out.write("\t\t\tcancelDcOrder.show();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tcancelDcOrder.hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 组合按钮\r\n");
      out.write("\tfunction comboOrder () {\r\n");
      out.write("\t\tvar selectOrder = grid.getSelecteds();\r\n");
      out.write("\t\tif (selectOrder.length == 0) {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"请先选择需要操作的医嘱！\",    \r\n");
      out.write("\t\t        state: \"warning\", \r\n");
      out.write("\t\t        x: \"center\",  \r\n");
      out.write("\t\t        y: \"center\", \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t} else if (selectOrder.length == 1) {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"请先选择多条医嘱！\",    \r\n");
      out.write("\t\t        state: \"warning\", \r\n");
      out.write("\t\t        x: \"center\",  \r\n");
      out.write("\t\t        y: \"center\", \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tfor (var i = 0; i < selectOrder.length; i++) {\r\n");
      out.write("\t\t\t\tvar order = selectOrder[i];\r\n");
      out.write("\t\t\t\tif (order.itemSysType == \"UL\") {\r\n");
      out.write("\t\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t\t        content: \"不允许手动组合检验医嘱，系统将会根据合管规则自动组合!\",    \r\n");
      out.write("\t\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t\t    });\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (validCombo(selectOrder)) {\r\n");
      out.write("\t\t\t\tvar combOrd = {};\r\n");
      out.write("\t\t\t\tselectOrder.sort(function (a,b) {\r\n");
      out.write("\t\t\t\t\tif (parseInt(a.groupNo) > parseInt(b.groupNo)) {\r\n");
      out.write("\t\t\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t\t\t} else if (parseInt(a.groupNo) < parseInt(b.groupNo)) {\r\n");
      out.write("\t\t\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tif (parseInt(a.sortNo) > parseInt(b.sortNo)) {\r\n");
      out.write("\t\t\t\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < selectOrder.length; i++) {\r\n");
      out.write("\t\t\t\t\tif (selectOrder[i].chargeFlag == 1) {\r\n");
      out.write("\t\t\t\t\t\tcombOrd = selectOrder[i];\r\n");
      out.write("\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (i == selectOrder.length-1 && selectOrder[i].chargeFlag != 1) {\r\n");
      out.write("\t\t\t\t\t\tcombOrd = selectOrder[0];\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < selectOrder.length; i++) {\r\n");
      out.write("\t\t\t\t\tvar inOrder = mini.clone(selectOrder[i]);\r\n");
      out.write("\t\t\t\t\tif (combOrd.orderId) {\r\n");
      out.write("\t\t\t\t\t\tinOrder.groupNo = combOrd.groupNo;\r\n");
      out.write("\t\t\t\t\t\tinOrder.sortNo = getMaxSortNo(inOrder);\r\n");
      out.write("\t\t\t\t\t\tinOrder.usageId = combOrd.usageId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.freqId = combOrd.freqId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.firstDayCount = combOrd.firstDayCount;\r\n");
      out.write("\t\t\t\t\t\tinOrder.days = combOrd.days;\r\n");
      out.write("\t\t\t\t\t\tinOrder.execDeptId = combOrd.execDeptId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.combId = combOrd.combId;\r\n");
      out.write("\t\t\t\t\t\tinOrder.beginTime = combOrd.beginTime;\r\n");
      out.write("\t\t\t\t\t\tinOrder.endTime = combOrd.endTime;\r\n");
      out.write("\t\t\t\t\t\tif (!inOrder.itemId) {\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.itemSysparentType = combOrd.itemSysparentType;\r\n");
      out.write("\t\t\t\t\t\t\tinOrder.itemSysType = combOrd.itemSysType;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tgrid.updateRow(selectOrder[i],inOrder);\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tgrid.updateRow(selectOrder[i],{\r\n");
      out.write("\t\t\t\t\t\t\tcombId: getComboNo(),\r\n");
      out.write("\t\t\t\t\t\t\tsortNo: getMaxSortNo(inOrder)\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tsortGrid();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 取消组合按钮\r\n");
      out.write("\tfunction cancelComboOrder () {\r\n");
      out.write("\t\tvar selectRows = grid.getSelecteds();\r\n");
      out.write("\t\tselectRows.sort(function (a,b) {\r\n");
      out.write("\t\t\tif (parseInt(a.groupNo) > parseInt(b.groupNo)) {\r\n");
      out.write("\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t} else if (parseInt(a.groupNo) < parseInt(b.groupNo)) {\r\n");
      out.write("\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tif (parseInt(a.sortNo) > parseInt(b.sortNo)) {\r\n");
      out.write("\t\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tvar selectRowsJson = mini.encode(selectRows);\r\n");
      out.write("\t\tvar sheetRows = grid.getList()\r\n");
      out.write("\t\tvar sheetRowsJson = mini.encode(sheetRows);\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("//medical/inpatient/ipMedOrder/cancelComboOrder.do\",\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tselectRowsJson: selectRowsJson,\r\n");
      out.write("\t\t\t\tsheetRowsJson: sheetRowsJson,\r\n");
      out.write("\t\t\t\tisCanEditHerbal: false\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\tif (r.NUM == -1) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(r.message);\r\n");
      out.write("\t\t\t\t} else if (r.NUM == 1) {\r\n");
      out.write("\t\t\t\t\tvar list = r.list;\r\n");
      out.write("\t\t\t\t\tvar num = r.num;\r\n");
      out.write("\t\t\t\t\tvar num3 = parseInt(list[0].groupNo);\r\n");
      out.write("\t\t\t\t\tvar num4 = parseInt(list[0].groupNo);\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < list.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tif (parseInt(list[i].groupNo) < num3) {\r\n");
      out.write("\t\t\t\t\t\t\tnum3 = parseInt(list[i].groupNo);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tif (parseInt(list[i].groupNo) > num4) {\r\n");
      out.write("\t\t\t\t\t\t\tnum4 = parseInt(list[i].groupNo);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tvar num5 = list.length - (num4 - num3) -1;\r\n");
      out.write("\t\t\t\t\tnum4 = num3 + num5;\r\n");
      out.write("\t\t\t\t\tvar num6 = 0\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < list.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tvar order = list[i];\r\n");
      out.write("\t\t\t\t\t\tif (num6 == 0) {\r\n");
      out.write("\t\t\t\t\t\t\tnum3++;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\torder.groupNo = num3 + \"\";\r\n");
      out.write("\t\t\t\t\t\t\torder.sortNo = getMaxSortNo(order);\r\n");
      out.write("\t\t\t\t\t\t\torder.combId = getComboNo();\r\n");
      out.write("\t\t\t\t\t\t\tvar dataRow = grid.findRow(function(row){\r\n");
      out.write("\t\t\t\t\t\t\t    if(row.orderId == order.orderId) return true;\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\tif (dataRow) {\r\n");
      out.write("\t\t\t\t\t\t\t\tgrid.updateRow(dataRow,order);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tnum3++;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tnum6++;\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tvar num7 = -1;\r\n");
      out.write("\t\t\t\t\tvar gridList = grid.getList();\r\n");
      out.write("\t\t\t\t\tfor (var i = num + 1; i < gridList.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tvar order2 = gridList[i];\r\n");
      out.write("\t\t\t\t\t\tvar dataRow = grid.findRow(function(row){\r\n");
      out.write("\t\t\t\t\t\t    if(row.orderId == order2.orderId) return true;\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\tif (dataRow) {\r\n");
      out.write("\t\t\t\t\t\t\tif (num7 == -1) {\r\n");
      out.write("\t\t\t\t\t\t\t\tnum7 = num4 - parseInt(order2.groupNo) + 1;\r\n");
      out.write("\t\t\t\t\t\t\t\tif (num7 < 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tnum7 = 0;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tvar num8 = parseInt(order2.sortNo) - parseInt(order2.groupNo) * 100;\r\n");
      out.write("\t\t\t\t\t\t\torder2.groupNo = parseInt(order2.groupNo) + num7 + \"\";\r\n");
      out.write("\t\t\t\t\t\t\torder2.sortNo = parseInt(order2.groupNo) * 100 + num8;\r\n");
      out.write("\t\t\t\t\t\t\tgrid.updateRow(dataRow,order2);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tsortGrid();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 设置组合信息\r\n");
      out.write("\tfunction setCombInfo (combNo,inOrder) {\r\n");
      out.write("\t\tvar groupNo = inOrder.groupNo;\r\n");
      out.write("\t\tvar dicOrderList = grid.getList();\r\n");
      out.write("\t\tif (dicOrderList.length > 0 && inOrder.combId) {\r\n");
      out.write("\t\t\tvar order = grid.findRow(function(row){\r\n");
      out.write("\t\t\t    if(row.groupNo == groupNo && row.orderId != inOrder.orderId) return true;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tif (order && inOrder.orderId != order.orderId && order.itemId) {\r\n");
      out.write("\t\t\t\tif (inOrder.itemId) {\r\n");
      out.write("\t\t\t\t\tif (!validCombo([order,inOrder])) {\r\n");
      out.write("\t\t\t\t\t\tgrid.updateRow(inOrder,{\r\n");
      out.write("\t\t\t\t\t\t\tgroupNo: resetGroupNo.value\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else if (order && (order.printFlag != 0 || order.checkFlag == 1)) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(order.itemName + \" 已打印或审核，不允许继续操作！\");\r\n");
      out.write("\t\t\t\t\tgrid.updateRow(inOrder,{\r\n");
      out.write("\t\t\t\t\t\tgroupNo: resetGroupNo.value\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tchangeCombInfo(order,inOrder);\r\n");
      out.write("\t\t\t\tsortGrid();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tchangeCombInfo(order,inOrder);\r\n");
      out.write("\t\t\t\tsortGrid();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 改变组合信息\r\n");
      out.write("\tfunction changeCombInfo (combOrd,inOrder) {\r\n");
      out.write("\t\tvar orderData = mini.clone(inOrder);\r\n");
      out.write("\t\tif (combOrd && combOrd.orderId) {\r\n");
      out.write("\t\t\torderData.groupNo = combOrd.groupNo;\r\n");
      out.write("\t\t\torderData.sortNo = getMaxSortNo(orderData);\r\n");
      out.write("\t\t\torderData.usageId = combOrd.usageId;\r\n");
      out.write("\t\t\torderData.freqId = combOrd.freqId;\r\n");
      out.write("\t\t\torderData.firstDayCount = combOrd.firstDayCount;\r\n");
      out.write("\t\t\torderData.days = combOrd.days;\r\n");
      out.write("\t\t\torderData.execDeptId = combOrd.execDeptId;\r\n");
      out.write("\t\t\torderData.combId = combOrd.combId;\r\n");
      out.write("\t\t\torderData.beginTime = combOrd.beginTime;\r\n");
      out.write("\t\t\torderData.endTime = combOrd.endTime;\r\n");
      out.write("\t\t\tif (!orderData.itemId) {\r\n");
      out.write("\t\t\t\torderData.itemSysparentType = combOrd.itemSysparentType;\r\n");
      out.write("\t\t\t\torderData.itemSysType = combOrd.itemSysType;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tgrid.updateRow(inOrder,orderData);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tgrid.updateRow(inOrder,{\r\n");
      out.write("\t\t\t\tcombId: getComboNo(),\r\n");
      out.write("\t\t\t\tsortNo: getMaxSortNo(inOrder)\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 取消医嘱审核\r\n");
      out.write("\tfunction caneCheckOrder(){\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tif(!rows){\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(rows.leng==0){\r\n");
      out.write("\t\t\ttop.mini.alert(\"请选择要取消审核的医嘱!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfor(var i=0;i<rows.length;i++){\r\n");
      out.write("\t\t\tif(rows[i].orderState==\"SV\"){\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"此医嘱已取消审核,请不要重复操作\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar orderIds = [];\r\n");
      out.write("\t\tfor(var i = 0;i<rows.length; i++){\r\n");
      out.write("\t\t\tif(rows[i].orderId){\r\n");
      out.write("\t\t\t\torderIds.push(rows[i].orderId);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/canelCheckOrder.do\";\r\n");
      out.write("\t\t$.post(url,{orderIds:orderIds.join(\",\")},function(r){\r\n");
      out.write("\t\t\tif(r==\"ok\"){\r\n");
      out.write("\t\t\t\tgrid.reload();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 复制选中医嘱为同类型临嘱\r\n");
      out.write("\tfunction mnuCopyAsSameClick () {\r\n");
      out.write("\t\tcopyOrder(true);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 复制选中医嘱为同类型长嘱\r\n");
      out.write("\tfunction mnuCopyAsOtherClick () {\r\n");
      out.write("\t\tcopyOrder(false);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 复制医嘱\r\n");
      out.write("\tfunction copyOrder (isSameType) {\r\n");
      out.write("\t\tvar list = mini.clone(grid.getSelecteds());\r\n");
      out.write("\t\tif (list.length > 0) {\r\n");
      out.write("\t\t\tlist.sort(function (a,b) {\r\n");
      out.write("\t\t\t\tif (parseInt(a.combId) > parseInt(b.combId)) {\r\n");
      out.write("\t\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t\t} else if (parseInt(a.combId) < parseInt(b.combId)) {\r\n");
      out.write("\t\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (parseInt(a.sortNo) > parseInt(b.sortNo)) {\r\n");
      out.write("\t\t\t\t\t\treturn 1;\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\treturn -1;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tif (!isSameType) {\r\n");
      out.write("\t\t\t\tvar list2 = [];\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < list.length; i++) {\r\n");
      out.write("\t\t\t\t\tvar order = list[i];\r\n");
      out.write("\t\t\t\t\tif (order.itemSysType != \"HR\" && order.itemSysType != \"UC\" && order.itemSysType != \"UL\") {\r\n");
      out.write("\t\t\t\t\t\tif (order.orderClassifyType == \"L\") {\r\n");
      out.write("\t\t\t\t\t\t\torder.orderClassifyType = \"S\";\r\n");
      out.write("\t\t\t\t\t\t\torder.orderType = \"LZ\";\r\n");
      out.write("\t\t\t\t\t\t\torder.chargeFlag = \"1\";\r\n");
      out.write("\t\t\t\t\t\t\tvar ord = reComputeQty(order);\r\n");
      out.write("\t\t\t\t\t\t\torder.qty = ord.qty;\r\n");
      out.write("\t\t\t\t\t\t\torder.qtyUnit = ord.qtyUnit;\r\n");
      out.write("\t\t\t\t\t\t\torder.qtyUnitShowtype = ord.qtyUnitShowtype;\r\n");
      out.write("\t\t\t\t\t\t} else if (order.orderClassifyType == \"S\") {\r\n");
      out.write("\t\t\t\t\t\t\torder.orderClassifyType = \"L\";\r\n");
      out.write("\t\t\t\t\t\t\torder.orderType = \"CZ\";\r\n");
      out.write("\t\t\t\t\t\t\torder.chargeFlag = \"1\";\r\n");
      out.write("\t\t\t\t\t\t\torder.firstDayCount = setFirstDayCount(order,1);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tlist2.push(order);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tsessionStorage.long = JSON.stringify(list2); \r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tpasteOrderEvent(list);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 粘贴医嘱\r\n");
      out.write("\tfunction pasteOrderEvent (copyOrderList) {\r\n");
      out.write("\t\taddOrders(copyOrderList)\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 添加医嘱\r\n");
      out.write("\tfunction addOrders (orderList) {\r\n");
      out.write("\t\tvar orderListJson = mini.encode(orderList);\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/addOrders.do\",\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\torderListJson: orderListJson,\r\n");
      out.write("\t\t\t\torderClassifyType: \"S\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfunction (list) {\r\n");
      out.write("\t\t\t\tvar count = 1;\r\n");
      out.write("\t    \t\tvar lastCombId = \"\";\r\n");
      out.write("\t    \t\tfor (var i = 0; i < list.length; i++) {\r\n");
      out.write("\t    \t\t\tvar order = list[i];\r\n");
      out.write("\t    \t\t\torder.registerId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t    \t\t\torder.bedNo = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.bedNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\torder.patientNursestationId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.admitNursestationId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\torder.orgId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.orgId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\torder.clinicianDoctorId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.residentDoctId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\torder.clinicianDeptId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clinicianDeptId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\torder.recordDoctorId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\t\tvar itemBase = getItemById(order.itemId,order.itemSysparentType);\r\n");
      out.write("\t    \t\t\tif (i == 0) {\r\n");
      out.write("\t\t\t\t\t\tlastCombId = order.combId;\r\n");
      out.write("\t\t\t\t\t\torder.groupNo = getMaxGroupNo();\r\n");
      out.write("\t\t\t\t\t\torder.sortNo = getMaxGroupNo() + \"01\";\r\n");
      out.write("\t\t\t\t\t\torder.combId = getComboNo();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tcount = count + 1;\r\n");
      out.write("\t\t\t\t\t\tif (order.combId == lastCombId) {\r\n");
      out.write("\t\t\t\t\t\t\tvar updateSortNo = 0;\r\n");
      out.write("\t\t\t\t\t\t\tif (count > 9) {\r\n");
      out.write("\t\t\t\t\t\t\t\tupdateSortNo = r.list[i-1].groupNo + \"\" + count;\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tupdateSortNo = r.list[i-1].groupNo + \"0\" + count;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\torder.groupNo = r.list[i-1].groupNo;\r\n");
      out.write("\t\t\t\t\t\t\torder.sortNo = updateSortNo;\r\n");
      out.write("\t\t\t\t\t\t\torder.combId = r.list[i-1].combId;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tlastCombId = order.combId;\r\n");
      out.write("\t\t\t\t\t\t\tcount = 1;\r\n");
      out.write("\t\t\t\t\t\t\torder.groupNo = getMaxGroupNo();\r\n");
      out.write("\t\t\t\t\t\t\torder.sortNo = getMaxGroupNo() + \"01\";\r\n");
      out.write("\t\t\t\t\t\t\torder.combId = getComboNo();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t    \t\t\tgrid.addRow(order);\r\n");
      out.write("\t    \t\t\tvar orderType = grid.getColumn(\"orderType\");\r\n");
      out.write("\t\t\t\t\torder.chargeFlag = orderType._valueMaps[order.orderType].chargeFlag;\r\n");
      out.write("\t\t\t\t\tgrid.clearSelect();\r\n");
      out.write("\t    \t\t\tvalidInOrderBefore(order,itemBase,true);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//取消停止/作废医嘱\r\n");
      out.write("\tfunction mnuRollBackClick () {\r\n");
      out.write("\t\tvar selectOrder = grid.getSelecteds();\r\n");
      out.write("\t\tvar selectOrderJson = mini.encode(selectOrder);\r\n");
      out.write("\t\t$.post(\r\n");
      out.write("\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/cancelDCOrder.do\",\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tselectOrderJson: selectOrderJson,\r\n");
      out.write("\t\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\tif (r.num == -1) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(r.errorText);\r\n");
      out.write("\t\t\t\t} else if (r.num == 1) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(\"取消停止医嘱成功！\");\r\n");
      out.write("\t\t\t\t\tgrid.reload();\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 存组套\r\n");
      out.write("\tfunction saveGroup () {\r\n");
      out.write("\t\tvar rows = grid.getSelecteds();\r\n");
      out.write("\t\tif (rows.length == 0) {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"请先选择需要保存的医嘱！\",    \r\n");
      out.write("\t\t        state: \"warning\", \r\n");
      out.write("\t\t        x: \"center\",  \r\n");
      out.write("\t\t        y: \"center\", \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmini.open({\r\n");
      out.write("\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/nurseMedGroup/editor.do?orderClassifyType=S&sysType=I\",\r\n");
      out.write("\t\t\ttitle:\"组套管理\",\r\n");
      out.write("\t\t\twidth:\"900\",\r\n");
      out.write("\t\t\theight:\"600\",\r\n");
      out.write("\t\t\tonload: function () {       \r\n");
      out.write("\t\t\t\tvar iframe = this.getIFrameEl();\r\n");
      out.write("\t\t\t\tvar arrayList = mini.clone(rows);\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < arrayList.length; i++) {\r\n");
      out.write("\t\t\t\t\tvar setBeginTime = mini.formatDate(arrayList[i].beginTime,\"yyyy-MM-dd 00:00:00\");\r\n");
      out.write("\t\t\t\t\tsetBeginTime = mini.parseDate(setBeginTime);\r\n");
      out.write("\t\t\t\t\tarrayList[i].beginTime = setBeginTime;\r\n");
      out.write("\t\t\t\t\tarrayList[i].frequencyId = arrayList[i].freqId;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tiframe.contentWindow.setData(arrayList);\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    ondestroy: function (r) {  \r\n");
      out.write("\t\t    \tif (r == \"ok\") {\r\n");
      out.write("\t\t    \t\ttree.load(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/refrshGroup.do?orderClassifyType=S&sysType=I\");\r\n");
      out.write("\t\t    \t}                \r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 粘贴医嘱按钮\r\n");
      out.write("\tfunction mnuPasteOrderClick () {\r\n");
      out.write("\t\tvar sortOrder = sessionStorage.short;\r\n");
      out.write("\t\tif (!sortOrder) {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"剪贴板中没有复制的医嘱信息!\",    \r\n");
      out.write("\t\t        state: \"warning\", \r\n");
      out.write("\t\t        x: \"center\",  \r\n");
      out.write("\t\t        y: \"center\", \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar allCopyList = JSON.parse(sortOrder);\r\n");
      out.write("\t\tif (!allCopyList || allCopyList.length == 0) {\r\n");
      out.write("\t\t\tmini.showTips({\r\n");
      out.write("\t\t        content: \"剪贴板中没有复制的医嘱信息!\",    \r\n");
      out.write("\t\t        state: \"warning\", \r\n");
      out.write("\t\t        x: \"center\",  \r\n");
      out.write("\t\t        y: \"center\", \r\n");
      out.write("\t\t        timeout: 2000     \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tvar list = [];\r\n");
      out.write("\t\t\tfor (var i = 0; i < allCopyList.length; i++) {\r\n");
      out.write("\t\t\t\tvar current = allCopyList[i];\r\n");
      out.write("\t\t\t\tif (current.orderClassifyType == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${orderClassifyType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") {\r\n");
      out.write("\t\t\t\t\tlist.add(current);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (list.length == 0) {\r\n");
      out.write("\t\t\t\tmini.showTips({\r\n");
      out.write("\t\t\t        content: \"剪贴板中没有复制的医嘱信息!\",    \r\n");
      out.write("\t\t\t        state: \"warning\", \r\n");
      out.write("\t\t\t        x: \"center\",  \r\n");
      out.write("\t\t\t        y: \"center\", \r\n");
      out.write("\t\t\t        timeout: 2000     \r\n");
      out.write("\t\t\t    });\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tpasteOrderEvent(list);\r\n");
      out.write("\t\t\t\tsessionStorage.sortOrder = JSON.stringify(\"\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 根据项目主键获取项目信息\r\n");
      out.write("\tfunction getItemById (itemId, itemSysparentType) {\r\n");
      out.write("\t\tvar item = {};\r\n");
      out.write("\t\tif (itemSysparentType == \"Drug\") {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pharmacy/common/comDrug/getDrugById.do\",\r\n");
      out.write("\t            data: {\r\n");
      out.write("\t            \tdrugId: itemId\r\n");
      out.write("\t            },\r\n");
      out.write("\t            type: \"post\",\r\n");
      out.write("\t            async: false,\r\n");
      out.write("\t            success: function (r) {\r\n");
      out.write("\t            \titem = mini.clone(r);\r\n");
      out.write("\t            }\r\n");
      out.write("\t        });\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/basedata/datamanager/nondrug/getById.do\",\r\n");
      out.write("\t            data: {\r\n");
      out.write("\t            \titemId: itemId\r\n");
      out.write("\t            },\r\n");
      out.write("\t            type: \"post\",\r\n");
      out.write("\t            async: false,\r\n");
      out.write("\t            success: function (r) {\r\n");
      out.write("\t            \titem = mini.clone(r);\r\n");
      out.write("\t            }\r\n");
      out.write("\t        });\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn item;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 设值首日量\r\n");
      out.write("\tfunction setFirstDayCount (inOrder,firstOrderDaysMode) {\r\n");
      out.write("\t\tvar num = 0;\r\n");
      out.write("\t\tvar json = mini.encode(inOrder); \r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/setFirstDayCount.do\",\r\n");
      out.write("            data: {\r\n");
      out.write("            \tjson: json,\r\n");
      out.write("            \tfirstOrderDaysMode: firstOrderDaysMode\r\n");
      out.write("            },\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tnum = r;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn num;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 停止按钮\r\n");
      out.write("\tfunction DCOrder () {\r\n");
      out.write("\t\tvar changes = grid.getChanges();\r\n");
      out.write("\t\tvar flag = false;\r\n");
      out.write("\t\tvar selectOrder = grid.getSelecteds();\r\n");
      out.write("\t\tif (changes.length > 0) {\r\n");
      out.write("\t\t\tmini.showMessageBox({\r\n");
      out.write("\t\t\t    title: \"提示\",    \r\n");
      out.write("\t\t\t    message: \"临时医嘱发生变化，是否需要保存?\",\r\n");
      out.write("\t\t\t    buttons: [\"ok\", \"no\"],    \r\n");
      out.write("\t\t\t    iconCls: \"mini-messagebox-question\",\r\n");
      out.write("\t\t\t    html: \"\",   \r\n");
      out.write("\t\t\t    callback: function(action) {\r\n");
      out.write("\t\t\t\t\tif (action == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\tsave();\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tflag = true;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif (flag) {\r\n");
      out.write("\t\t\t\t\t\tgetDCOrderWarn(selectOrder);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tgetDCOrderWarn(selectOrder);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 获取停止医嘱前警告信息\r\n");
      out.write("\tvar DCList = [];\r\n");
      out.write("\tfunction getDCOrderWarn (selectOrder) {\r\n");
      out.write("\t\tif (selectOrder.length == 0) {\r\n");
      out.write("\t\t\tmini.alert(\"请先选择需要操作的医嘱！\");\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tvar json = mini.encode(selectOrder); \r\n");
      out.write("\t\t\t$.post(\r\n");
      out.write("\t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getDCOrderWarn.do\",\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tjson: json,\r\n");
      out.write("\t\t\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("\t\t\t\t\torderClassifyType: \"S\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tfunction (r) {\r\n");
      out.write("\t\t\t\t\tif (r.result == \"ok\") {\r\n");
      out.write("\t\t\t\t\t\tdcWin.setTitle(\"停止/取消医嘱\");\r\n");
      out.write("\t\t\t\t\t\tvar dcForm = new mini.Form(\"dcForm\");\r\n");
      out.write("\t\t\t\t\t\tdcForm.setData({\r\n");
      out.write("\t\t\t\t\t\t\t\tendTime: new Date,\r\n");
      out.write("\t\t\t\t\t\t\t\tdcReasonId: 1\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\tDCList = r.list;\r\n");
      out.write("\t\t\t\t\t\tdcWin.show(\"center\",\"top\");\r\n");
      out.write("\t\t\t\t\t} else if (r.result == \"warn\") {\r\n");
      out.write("\t\t\t\t\t\tmini.alert(r.msg);\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 确定停止医嘱\r\n");
      out.write("\tfunction doSubmit() {\r\n");
      out.write(" \t\tvar dcForm = new mini.Form(\"dcForm\");\r\n");
      out.write(" \t\tdcForm.validate();\r\n");
      out.write(" \t\tif (dcForm.isValid()) {\r\n");
      out.write(" \t\t\tvar frmDcOrder = dcForm.getData();\r\n");
      out.write(" \t\t\tfrmDcOrder.dcReasonName = dcReasonId.text;\r\n");
      out.write(" \t\t\tvar frmDcOrderJson = mini.encode(frmDcOrder); \r\n");
      out.write(" \t\t\tvar json =  mini.encode(DCList);\r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t\t\t$.post(\r\n");
      out.write(" \t\t\t\t\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/DCOrder.do\",\r\n");
      out.write(" \t\t\t\t{\r\n");
      out.write(" \t\t\t\t\tfrmDcOrderJson: frmDcOrderJson,\r\n");
      out.write(" \t\t\t\t\tjson: json,\r\n");
      out.write(" \t\t\t\t\tregisterId: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${register.registerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write(" \t\t\t\t},\r\n");
      out.write(" \t\t\t\tfunction (r) {\r\n");
      out.write(" \t\t\t\t\tif (r == \"ok\") {\r\n");
      out.write(" \t\t\t\t\t\ttop.mini.alert(\"停止医嘱成功！\");\r\n");
      out.write(" \t\t\t\t\t\tdcWin.hide();\r\n");
      out.write(" \t\t\t\t\t\tgrid.reload();\r\n");
      out.write(" \t\t\t\t\t} else {\r\n");
      out.write(" \t\t\t\t\t\ttop.mini.error(r);\r\n");
      out.write(" \t\t\t\t\t\tdcWin.hide()\r\n");
      out.write(" \t\t\t\t\t}\r\n");
      out.write(" \t\t\t\t\tDCList = [];\r\n");
      out.write(" \t\t\t\t}\r\n");
      out.write(" \t\t\t);\r\n");
      out.write(" \t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 判断是否有操作住院组套权限\r\n");
      out.write("\tfunction checkGroupPriv (groupType) {\r\n");
      out.write("\t\tvar flag = false;\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroup/checkGroupPriv.do\",\r\n");
      out.write("            data: {groupType: groupType},\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (r) {\r\n");
      out.write("            \tif (r == \"ok\") {\r\n");
      out.write("            \t\tflag = true;\r\n");
      out.write("            \t} else {\r\n");
      out.write("            \t\tflag = false;\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t\treturn flag;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//刷新当前页面\r\n");
      out.write("\tfunction refresh () {\r\n");
      out.write("\t\tlocation.reload();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction endTimeRenderer(e) {\r\n");
      out.write("\t\tvar endTime = e.row.endTime;\r\n");
      out.write("\t\tvar dateStr = mini.formatDate(endTime, \"yyyy-MM-dd HH:mm:ss\");\r\n");
      out.write("\t\tif(dateStr == \"1901-01-01 00:00:00\"){\r\n");
      out.write("\t\t\treturn \"\";\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\treturn dateStr;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction approvedTimeRenderer(e) {\r\n");
      out.write("\t\tvar approvedDate = e.row.approvedDate;\r\n");
      out.write("\t\tvar dateStr = mini.formatDate(approvedDate, \"yyyy-MM-dd HH:mm:ss\");\r\n");
      out.write("\t\tif(dateStr == \"1901-01-01 00:00:00\"){\r\n");
      out.write("\t\t\treturn \"\";\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\treturn dateStr;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction dcTimeRenderer(e) {\r\n");
      out.write("\t\tvar dcDate = e.row.dcDate;\r\n");
      out.write("\t\tvar dateStr = mini.formatDate(dcDate, \"yyyy-MM-dd HH:mm:ss\");\r\n");
      out.write("\t\tif(dateStr == \"1901-01-01 00:00:00\"){\r\n");
      out.write("\t\t\treturn \"\";\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\treturn dateStr;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 打印状态渲染\r\n");
      out.write("\tvar dataPrintState = [{ id: 0, text: '未打印' },{ id: 1, text: '首次打印'},{ id: 2, text: '已打印停止时间'}];\r\n");
      out.write("\tvar dataItemSysType = [{id:\"UZ\",text:\"治疗\"}, {id:\"UM\",text:\"材料\"}];\r\n");
      out.write("\tvar orderType = [{id:\"LZ\",text:\"临时医嘱\",chargeFlag:\"1\"}, {id:\"ZL\",text:\"嘱托临嘱\",chargeFlag:\"0\"}];\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"mini-splitter\" style=\"width:100%; height:100%;\" borderStyle=\"border:0;\" handlerSize=\"6\">\r\n");
      out.write("\t\t<div size=\"242px;\" showCollapseButton=\"false\">\r\n");
      out.write("\t\t\t<input id=\"filterTree\" class=\"mini-textbox\" \r\n");
      out.write("\t\t\t\t\tborderStyle=\"border-left:0px;border-right:0px;border-top:0px;\"\r\n");
      out.write("\t\t\t\t\temptyText=\"请输入组套名称\" style=\"width: 100%\" \r\n");
      out.write("\t\t\t\t\tonenter=\"filterGroupClassify('filterTree',tree)\" />\r\n");
      out.write("\t\t\t<div class=\"mini-fit\">\r\n");
      out.write("\t\t\t\t<ul id=\"tree\" contextMenu=\"#treeMenu\" allowDrop=\"true\" allowDrag=\"true\" expandOnLoad=\"0\"\r\n");
      out.write("\t\t\t\t\tclass=\"mini-tree\" resultAsTree=\"false\" showArrow=\"true\" showTreeIcon=\"true\" \r\n");
      out.write("\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medGroupClassify/refrshGroup.do?orderClassifyType=S&sysType=I\"\r\n");
      out.write("\t\t\t\t\tonbeforedrop=\"dragDrop\" onnodedblclick=\"onDoubleClick\" onnodeselect=\"onBeforeLabelEdit\" onendedit=\"onAfterLabelEdit\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 100%; height: 100%; margin: 0; padding: 2px;\">\r\n");
      out.write("\t\t\t\t</ul>\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div showCollapseButton=\"false\">\r\n");
      out.write("\t\t\t<div class=\"mini-splitter\" style=\"width:100%; height:100%;\" vertical=\"true\" borderStyle=\"border:0;\"  handlerSize=\"6\">\r\n");
      out.write("\t\t\t\t<div size=\"85%;\" showCollapseButton=\"false\">\r\n");
      out.write("\t\t\t\t\t<div class=\"mini-toolbar\"  borderStyle=\"border-top:0px;border-left:0px;border-right:0px;\" style=\"background-color: #F5F5F5;\">\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-plus\" plain=\"true\" onclick=\"addNewOrder()\">新增</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-remove\" plain=\"true\" onclick=\"delRow()\">删除</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-save\" plain=\"true\" onclick=\"save()\">保存</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-stop\" plain=\"true\" onclick=\"DCOrder()\">停止</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-check\" plain=\"true\" onclick=\"onchecking()\">审核</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-menubutton\" plain=\"true\" menu=\"#stateFlag\">医嘱状态</a>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-refresh\" plain=\"true\" onclick=\"refresh()\">刷新</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<ul id=\"stateFlag\" iconCls=\"fa fa-save\" class=\"mini-menu\" style=\"display:none;\">\r\n");
      out.write("\t\t\t\t        <li iconCls=\"\" onclick=\"queryByState('Default')\">默认显示</li>\r\n");
      out.write("\t\t\t\t\t\t<li iconCls=\"\" onclick=\"queryByState('All')\">全部医嘱</li>\r\n");
      out.write("\t\t\t\t\t\t<li iconCls=\"\" onclick=\"queryByState('Day')\">当天医嘱</li>\r\n");
      out.write("\t\t\t\t\t\t<li iconCls=\"\" onclick=\"queryByState('New')\">新开医嘱</li>\r\n");
      out.write("\t\t\t\t\t\t<li iconCls=\"\" onclick=\"queryByState('Valid')\">有效医嘱</li>\r\n");
      out.write("\t\t\t\t\t\t<li iconCls=\"\" onclick=\"queryByState('Invalid')\">无效医嘱</li>\r\n");
      out.write("\t\t\t   \t\t</ul>\r\n");
      out.write("\t\t\t\t\t<div class=\"mini-fit\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"grid\" borderStyle=\"border:0;\" showTreeIcon=\"true\" showPager=\"false\" showModified=\"false\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"mini-datagrid\" style=\"width: 100%; height: 100%;\" contextMenu=\"#gridMenu\"  \r\n");
      out.write("\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/ipMedOrder/getOrderList.do\" allowCellEdit=\"true\" allowCellSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\tmultiSelect=\"true\" allowCellValid=\"false\"  editNextOnEnterKey=\"true\" oncellbeginedit=\"oncellbeginedit\"\r\n");
      out.write("\t\t\t\t\t\t\tonselect=\"onShowItemInfo\" onload=\"onMainOrderLoad\" oncellendedit=\"cellendedit\" oncellvalidation=\"usageValidation\"\r\n");
      out.write("\t\t\t\t\t\t\tcellEditAction=\"celldblclick\" >\r\n");
      out.write("\t\t\t\t\t\t\t<div property=\"columns\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div type=\"checkColumn\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"orderState\" width=\"40\" headerAlign=\"center\" align=\"center\" renderer=\"rendererOrderState\">状态</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"groupNo\" width=\"40\" headerAlign=\"center\" align=\"center\">组号\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-textbox\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"orderType\" name=\"orderType\" width=\"80\" headerAlign=\"center\" align=\"center\" type=\"comboboxcolumn\" >医嘱类型\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" valueFromSelect=\"true\" data=\"orderType\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"itemSysType\" name=\"itemSysType\" autoShowPopup=\"true\" type=\"comboboxColumn\" width=\"70\" headerAlign=\"center\" align=\"center\" vtype=\"required\">系统类别\r\n");
      out.write("\t\t\t\t\t\t\t\t\t <input property=\"editor\" class=\"mini-combobox\" showPopup=\"true\" allowInput=\"true\" valueFromSelect=\"true\" popupWidth=\"100\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t \tdata=\"dataItemSysType\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div name=\"itemTask\" autoShowPopup=\"true\" field=\"itemName\" width=\"350\"  headerAlign=\"center\" align=\"center\" vtype=\"required\" renderer=\"rendererItemName\">项目名称\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div property=\"editor\" class=\"mini-autocomplete\" style=\"width: 100%;\" popupWidth=\"700\" showPopup=\"true\" onshowpopup=\"onshowpopup\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tallowInput=\"true\" textField=\"itemName\" valueField=\"itemName\" onvaluechanged=\"onItemValueChanged\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/inpatient/inOrder/getItemList.do?sourceType=N\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div property=\"columns\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"编号\" width=\"80\" align=\"center\" headerAlign=\"center\" field=\"itemNo\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"项目名称\" width=\"350\" align=\"center\" headerAlign=\"center\" field=\"itemName\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"每次用量\" width=\"50\" align=\"center\" headerAlign=\"center\" field=\"ordDosage\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"每次量单位\" width=\"50\" align=\"center\" headerAlign=\"center\" field=\"ordDosageUnit\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div header=\"单价\" width=\"50\" align=\"center\" headerAlign=\"center\" field=\"itemPrice\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"groupNoFlag\" width=\"25\" headerAlign=\"center\" align=\"center\" renderer=\"groupRenderer\">*</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"ordDosage\" name=\"ordDosage\" width=\"60\" headerAlign=\"center\" align=\"center\" vtype=\"required\">每次用量\r\n");
      out.write("\t\t\t\t\t\t\t\t\t <input property=\"editor\" class=\"mini-textbox\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"ordDosageUnit\" width=\"60\" headerAlign=\"center\" align=\"center\" vtype=\"required\">用量单位\r\n");
      out.write("\t\t\t\t\t\t\t\t\t <input property=\"editor\" class=\"mini-textbox\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"freqId\" name=\"freqId\" width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\" vtype=\"required\" autoShowPopup=\"true\">频次\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" showPopup=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/frequency/getKVs.do\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"usageId\" name=\"usageId\" width=\"0\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\" autoShowPopup=\"true\">用法\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" showPopup=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/medical/common/medUsage/getKVs.do\" popupWidth=\"250\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"days\" width=\"50\" headerAlign=\"center\" align=\"center\" vtype=\"required\">天/付数\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"qty\" width=\"40\" headerAlign=\"center\" align=\"center\" vtype=\"required\">总量\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"qtyUnit\" width=\"80\" headerAlign=\"center\" align=\"center\">单位</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"stockDeptId\" name=\"stockDeptId\" type=\"comboboxcolumn\" width=\"0\" headerAlign=\"center\" align=\"center\" autoShowPopup=\"true\">取药药房\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" showPopup=\"true\" allowInput=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"execDeptId\" name=\"execDeptId\" width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\" vtype=\"required\" autoShowPopup=\"true\">执行科室\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" showPopup=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysOrg/getKVs.do\" textField=\"deptName\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div name=\"sample\" field=\"sample\" width=\"80\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\" autoShowPopup=\"true\">样本\\部位\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" onvaluechanged=\"onSampleChange\" showPopup=\"true\" allowInput=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getPrimaryKeyKVs.do?dictTypes=BD_SAMPLETYPE,BD_CHECKPART\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"emergencyFlag\" name=\"emergencyFlag\" type=\"checkboxcolumn\" width=\"40\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">急\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"memo\" width=\"80\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\" autoShowPopup=\"true\">备注\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" valueField=\"text\" showPopup=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl =\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=BD_PCCMEMO\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"beginTime\" name=\"beginTime\" width=\"150\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\" vtype=\"required\">开始时间\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-datepicker\" format=\"yyyy-MM-dd HH:mm:ss\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"endTime\" width=\"150\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\" renderer=\"endTimeRenderer\">结束时间\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"stType\" width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxcolumn\">皮试\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\"  url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/enums/stTypeState.json\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"recipeDoctorId\" width=\"80\"  width=\"120\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\" vtype=\"required\">开立护士\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/common/basedata/employee/getKVs.do?employeeType=N\" textField=\"empName\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"createdTime\" width=\"150\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\" vtype=\"required\">开立时间\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"approvedDoctorId\" width=\"80\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">审核护士\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" valueFromSelect=\"true\" textField=\"empName\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/common/basedata/employee/getKVs.do?employeeType=N\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"approvedDate\" width=\"150\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\" renderer=\"approvedTimeRenderer\">审核时间</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"dcDoctorId\" width=\"80\" headerAlign=\"center\" align=\"center\" type=\"comboboxColumn\">停止护士\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" allowInput=\"true\" valueFromSelect=\"true\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/common/basedata/employee/getKVs.do?employeeType=N\" textField=\"empName\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"dcDate\" width=\"150\" headerAlign=\"center\" align=\"center\" dateFormat=\"yyyy-MM-dd HH:mm:ss\" renderer=\"dcTimeRenderer\">停止时间</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"siApproveFlag\" width=\"80\" headerAlign=\"center\" align=\"center\" >医保适应症</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div field=\"printFlag\" width=\"100\" headerAlign=\"center\" align=\"center\" type=\"comboboxcolumn\" vtype=\"required\">打印状态\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input property=\"editor\" class=\"mini-combobox\" data=\"dataPrintState\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div size=\"15%;\" showCollapseButton=\"false\">\r\n");
      out.write("\t\t\t\t\t<div style=\"width:100%;border-bottom:1px solid #c5c5c5;padding-left:10px;color:blue;font-weight:bolder;\">详情信息</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"mini-fit\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"mini-textarea\" id=\"orderInfo\" style=\"width:100%;height:100%;\" borderStyle=\"border:0;\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t <!--左侧tree区右键菜单 -->\r\n");
      out.write("    <ul id=\"treeMenu\" class=\"mini-contextmenu\"  onbeforeopen=\"treeMenuBeforeOpen\">        \r\n");
      out.write("\t    <li name=\"reload\" iconCls=\"fa fa-refresh\" onclick=\"refrshGroup()\">刷新组套列表</li>\r\n");
      out.write("\t    <li name=\"copyDoct\" iconCls=\"icon-remove\" onclick=\"copyToGroup('Nur')\">复制为个人组套</li>\r\n");
      out.write("\t    <li name=\"copyDept\" iconCls=\"icon-remove\" onclick=\"copyToGroup('Dept')\">复制为科室组套</li>\r\n");
      out.write("\t\t<li name=\"copyHos\" iconCls=\"icon-remove\" onclick=\"copyToGroup('Hos')\">复制为全院组套</li>      \r\n");
      out.write(" \t    <li name=\"add\" iconCls=\"icon-add\" onclick=\"addItem()\">增加文件夹</li> \r\n");
      out.write("\t\t<li name=\"edit\" iconCls=\"fa fa-edit\" onclick=\"changeGroupName()\">修改组套名称</li>\r\n");
      out.write("\t\t<li name=\"remove\" iconCls=\"icon-remove\" onclick=\"deleteItem()\">删除组套</li> \r\n");
      out.write("\t</ul>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 右键菜单 -->\r\n");
      out.write("\t<ul id=\"gridMenu\" class=\"mini-contextmenu\" onbeforeopen=\"gridMenuBeforeOpen\">\r\n");
      out.write("        <li name=\"combOrder\" onclick=\"comboOrder();\">组合医嘱</li>\r\n");
      out.write("        <li name=\"cancelCombOrder\" onclick=\"cancelComboOrder();\">取消医嘱组合</li>\r\n");
      out.write("\t\t<li name=\"cancelCheckOrder\" onclick=\"caneCheckOrder();\">取消审核医嘱</li>\r\n");
      out.write("\t\t<li name=\"cancelDcOrder\" onclick=\"mnuRollBackClick();\">取消停止/作废医嘱</li>\r\n");
      out.write("\t\t<li name=\"pasteOrder\" onclick=\"mnuPasteOrderClick();\">粘贴医嘱</li>\r\n");
      out.write("\t\t<li name=\"medGroup\" onclick=\"saveGroup();\">存组套</li>\r\n");
      out.write("\t\t<li name=\"copyLongOrder\" onclick=\"mnuCopyAsOtherClick();\">复制选中医嘱为同类型长嘱</li>\r\n");
      out.write("\t\t<li name=\"copySortOrder\" onclick=\"mnuCopyAsSameClick();\">复制选中医嘱为同类型临嘱</li>\r\n");
      out.write("\t\t<li name=\"updMedcalType\" onclick=\"medicaltypeClick\">修改医保适用性</li>\t\r\n");
      out.write("    </ul>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"checkWin\" class=\"mini-window\" style=\"width:400px;height:200px;\">\r\n");
      out.write("    \t<form id=\"formLogin\">\r\n");
      out.write("\t\t\t<div class=\"login-input login-input-username\">\r\n");
      out.write("\t\t           <input id=\"username\"  name=\"username\" class=\"login-username\" type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${account}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t       </div>\r\n");
      out.write("\t\t\t<div class=\"login-input login-input-password\">\r\n");
      out.write("\t\t\t\t<input  type=\"password\" id=\"password\" placeholder=\"密码\" title=\"密码\" name=\"password\" value=\"0\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"confirm\"  onclick=\"doLogin();\">\r\n");
      out.write("\t\t\t\t<a class=\"login_btn\" href=\"javascript:void(0);\" hidefocus=\"true\">登&nbsp;&nbsp;&nbsp;&nbsp;录</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"dcWin\" class=\"mini-window\" style=\"width:400px;height:200px;\">\r\n");
      out.write("    \t<form id=\"dcForm\">\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<label> 停止时间：</label>\r\n");
      out.write("\t\t        <input name=\"endTime\" class=\"mini-datepicker\" format=\"yyyy-MM-dd HH:mm:ss\" required=\"true\" width=\"220\"/>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<label> 停止原因：</label>\r\n");
      out.write("\t\t\t\t<input id=\"dcReasonId\" class=\"mini-combobox\" name=\"dcReasonId\" required=\"true\" width=\"220\"\r\n");
      out.write("\t\t\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/platform/system/sysDict/getKVs.do?dictType=MED_DCREASON\" valueFromSelect=\"true\" allowInput=\"true\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"width:100%;margin:auto;margin-top:20px;\">\r\n");
      out.write("\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-check\" onclick=\"doSubmit();\">确认</a>\r\n");
      out.write("\t\t\t\t<a class=\"mini-button\" iconCls=\"icon-cancel\" onclick=\"javascript:dcWin.hide();\">取消</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("    </div>\r\n");
      out.write("\t <input id=\"resetGroupNo\" class=\"mini-hidden\" value=\"0\"/>\r\n");
      out.write("    <input id=\"resetOrdDosage\" class=\"mini-hidden\" value=\"0\"/>\r\n");
      out.write("    <input id=\"groupOldName\" class=\"mini-hidden\" style=\"display:none;\" value=\"\"/>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tmini.parse();\r\n");
      out.write("\t\tvar tree = mini.get(\"tree\");\r\n");
      out.write("\t\tvar grid = mini.get(\"grid\");\r\n");
      out.write("\t\tvar checkWin = mini.get(\"checkWin\");\r\n");
      out.write("\t\tvar dcWin = mini.get(\"dcWin\");\r\n");
      out.write("\t\tvar resetGroupNo = mini.get(\"resetGroupNo\");\t\r\n");
      out.write("\t\tvar resetOrdDosage = mini.get(\"resetOrdDosage\");\r\n");
      out.write("\t\tvar groupOldName = mini.get(\"groupOldName\");\r\n");
      out.write("\t\tvar orderInfo = mini.get(\"orderInfo\");\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /commons/include/get.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /commons/include/get.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /commons/include/get.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("emr");
      // /commons/include/get.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/get.jsp(6,0) '${emrContextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${emrContextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
