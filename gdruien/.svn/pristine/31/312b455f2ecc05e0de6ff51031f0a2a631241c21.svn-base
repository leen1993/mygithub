/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.2
 * Generated at: 2018-05-14 00:57:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.expense.maintenance.register;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class regLevelList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1525761782870L));
    _jspx_dependants.put("/commons/include/html_doctype.html", Long.valueOf(1525761798654L));
    _jspx_dependants.put("/commons/include/form.jsp", Long.valueOf(1525761798651L));
    _jspx_dependants.put("jar:file:/E:/workspace.hisnew/hisbase/WebContent/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>挂号级别维护</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<!-- <meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\" /> -->\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/default/css/web.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/boot.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/commons/dynamic.jsp\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/plugins/misc/jquery.form.js\"></script>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/core.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t// 添加用法\r\n");
      out.write("\tfunction add() {\r\n");
      out.write("\t\tvar newRow = {\r\n");
      out.write("\t\t\treglevlName : \"\",\r\n");
      out.write("\t\t\tvalidFlag : 1,\r\n");
      out.write("\t\t\texpertFlag : 0,\r\n");
      out.write("\t\t\tfacultyFlag : 0,\r\n");
      out.write("\t\t\tspecialFlag : 0,\r\n");
      out.write("\t\t\tdefaultFlag : 0,\r\n");
      out.write("\t\t\temergencyFlag : 0\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tgrid.addRow(newRow);\r\n");
      out.write("\t\tgrid.beginEditCell(newRow, \"\");\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 删除用法\r\n");
      out.write("\tfunction remove() {\r\n");
      out.write("\t\tgrid.cancelEdit();\r\n");
      out.write("\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\tif(row._state == \"added\"){\r\n");
      out.write("\t\t\tif (row) {\r\n");
      out.write("\t\t\t\tgrid.removeRow(row);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\ttop.mini.showTips({content: \"已保存的挂号级别不能删除！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 保存用法\r\n");
      out.write("\tfunction save() {\r\n");
      out.write("\t\tgrid.validate();\r\n");
      out.write("\t\tif (grid.isValid() == false) {\r\n");
      out.write("\t\t\ttop.mini.alert(\"请校验输入单元格内容\");\r\n");
      out.write("\t\t\tvar error = grid.getCellErrors()[0];\r\n");
      out.write("\t\t\tgrid.beginEditCell(error.record, error.column);\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 判断代码、名称是否重复\r\n");
      out.write("\t\tif (valid() == -1) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar data = grid.getChanges();\r\n");
      out.write("\t\tvar json = mini.encode(data);\r\n");
      out.write("\t\tvar url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/expense/maintenance/register/regLevel/save.do\";\r\n");
      out.write("\t\tvar fn = function(r) {\r\n");
      out.write("\t\t\tif (r == \"ok\") {\r\n");
      out.write("\t\t\t\ttop.mini.alert(\"保存成功！\");\r\n");
      out.write("\t\t\t\tgrid.reload();\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\ttop.mini.error(r);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$.post(url, {\r\n");
      out.write("\t\t\tdata : json\r\n");
      out.write("\t\t}, fn);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 退出\r\n");
      out.write("\tfunction exit() {\r\n");
      out.write("\t\tvar currentTab = top.tabs.activeIndex;\r\n");
      out.write("\t\tvar tabs = top.tabs;\r\n");
      out.write("\t\ttabs.removeTab(currentTab);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 验证\r\n");
      out.write("\tfunction valid() {\r\n");
      out.write("\t\tvar result;\r\n");
      out.write("\t\tnum = validRepeatLevelCode();\r\n");
      out.write("\t\tif (num < 0) {\r\n");
      out.write("\t\t\tresult = -1;\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tnum = validRepeatLevelName();\r\n");
      out.write("\t\t\tif (num < 0) {\r\n");
      out.write("\t\t\t\tresult = -1;\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tresult = 1;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn result;\r\n");
      out.write("\t}\r\n");
      out.write("\t// 判断代码是否重复\r\n");
      out.write("\tfunction validRepeatLevelCode() {\r\n");
      out.write("\t\tvar result;\r\n");
      out.write("\t\tfor (var i = 0; i <= grid.totalCount; i++) {\r\n");
      out.write("\t\t\ttry {\r\n");
      out.write("\t\t\t\tvar text = grid.getRow(i).reglevelId;\r\n");
      out.write("\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfor (var j = i + 1; j <= grid.totalCount; j++) {\r\n");
      out.write("\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\tvar b = grid.getRow(j).reglevelId;\r\n");
      out.write("\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (text == b) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(\"编码为\" + text + \"的挂号级别已存在\");\r\n");
      out.write("\t\t\t\t\tresult = -1;\r\n");
      out.write("\t\t\t\t\treturn result;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tresult = 1;\r\n");
      out.write("\t\treturn result;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 判断名称是否重复\r\n");
      out.write("\tfunction validRepeatLevelName() {\r\n");
      out.write("\t\tvar result;\r\n");
      out.write("\t\tfor (var i = 0; i <= grid.totalCount; i++) {\r\n");
      out.write("\t\t\ttry {\r\n");
      out.write("\t\t\t\tvar text = grid.getRow(i).reglevlName;\r\n");
      out.write("\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar j = i + 1;\r\n");
      out.write("\t\t\twhile (j <= grid.totalCount) {\r\n");
      out.write("\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\tvar b = grid.getRow(j).reglevlName;\r\n");
      out.write("\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (text == b) {\r\n");
      out.write("\t\t\t\t\ttop.mini.alert(\"挂号级别为\" + text + \"的挂号级别已存在\");\r\n");
      out.write("\t\t\t\t\tresult = -1;\r\n");
      out.write("\t\t\t\t\treturn result;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tj++;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tresult = 1;\r\n");
      out.write("\t\treturn result;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 专家号，专科号，特诊号互斥\r\n");
      out.write("\tfunction changeFlag(e) {\r\n");
      out.write("\t\tif (e.field == \"expertFlag\") {\r\n");
      out.write("\t\t\tif (e.column.isChecked) {\r\n");
      out.write("\t\t\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,{facultyFlag : 0,  specialFlag : 0, normalFlag : 0});\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"facultyFlag\") {\r\n");
      out.write("\t\t\tif (e.column.isChecked) {\r\n");
      out.write("\t\t\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,{expertFlag : 0, specialFlag : 0, normalFlag : 0});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"specialFlag\") {\r\n");
      out.write("\t\t\tif (e.column.isChecked) {\r\n");
      out.write("\t\t\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,{expertFlag : 0, facultyFlag : 0, normalFlag : 0});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.field == \"normalFlag\") {\r\n");
      out.write("\t\t\tif (e.column.isChecked) {\r\n");
      out.write("\t\t\t\tvar row = grid.getSelected();\r\n");
      out.write("\t\t\t\tgrid.updateRow(row,{expertFlag : 0, facultyFlag : 0, specialFlag : 0});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 刷新\r\n");
      out.write("\tfunction refresh() {\r\n");
      out.write("\t\tgrid.load();\r\n");
      out.write("\t\tgrid.sortBy(\"sortId\", \"desc\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 单元格值提交前事件\r\n");
      out.write(" \tfunction cellcommitedit(e) {\r\n");
      out.write("\t\tif(e.field == \"reglevelId\" || e.field == \"userDefineCode\" ||  e.field == \"sortId\") {\r\n");
      out.write("\t\t\tif(!/^\\d+$/.test(e.value)) {\r\n");
      out.write("\t\t\t\ttop.mini.showTips({content: \"请输入大于0的数值！\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t\te.cancel = true; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write(" \t\t\r\n");
      out.write("\t\tif(e.field == \"reglevelId\") {\r\n");
      out.write("\t\t\tvar rows = grid.getList();\r\n");
      out.write("\t\t\tfor(var i = 0; i < rows.length; i++) {\r\n");
      out.write("\t\t\t\tif(e.value == rows[i].reglevelId) {\r\n");
      out.write("\t\t\t\t\ttop.mini.showTips({content: \"已经存在相同的代码，请重新输入!\", state: \"warning\", x: \"center\", y: \"center\", timeout: 2000});\r\n");
      out.write("\t\t\t\t\te.cancel = true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write(" \t\t};\r\n");
      out.write(" \t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction show() {\r\n");
      out.write("\t\t$(\".toolbar\").show();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"mini-toolbar toolbar\" style=\"background: #fafafa;display:none;\" borderStyle=\"border-top:0px;border-left:0px;border-right:0px; border-bottom:1px solid #ccc;\">\r\n");
      out.write("\t\t<table style=\"width: 100%;\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-file-o\" onclick=\"add\">新增</a>\r\n");
      out.write("\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-remove\" onclick=\"remove\">删除</a>\r\n");
      out.write("\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-save\" onclick=\"save\">保存</a> \r\n");
      out.write("\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-window-close\" onclick=\"exit\">退出</a>\r\n");
      out.write("\t\t\t\t\t<a class=\"mini-button\" iconCls=\"fa fa-refresh\" onclick=\"refresh\">刷新</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"mini-fit\">\r\n");
      out.write("\t\t<div id=\"grid\" class=\"mini-datagrid\" borderStyle=\"border:0;border-left:1px solid #ccc;\"\r\n");
      out.write("\t\t\turl=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/expense/maintenance/register/regLevel/getAll.do\" showPager=\"false\" width=\"1200px\" allowCellSelect=\"true\"\r\n");
      out.write("\t\t\tallowCellEdit=\"true\" editNextOnEnterKey=\"true\" multiSelect=\"true\" allowCellValid=\"true\" cellEditAction=\"celldblclick\" \r\n");
      out.write("\t\t\toncellclick=\"changeFlag\" oncellcommitedit=\"cellcommitedit\" sortMode=\"client\"> \r\n");
      out.write("\t\t\t<div property=\"columns\">\r\n");
      out.write("\t\t\t\t<div type=\"indexcolumn\">序号</div>\t\r\n");
      out.write("\t\t\t\t<div field=\"reglevelId\" vtype=\"required;maxLength:3\" headerAlign=\"center\" align=\"center\" allowSort=\"true\">\r\n");
      out.write("\t\t\t\t\t代码 <input property=\"editor\" class=\"mini-textbox\" style=\"width: 100%;\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div field=\"reglevlName\" vtype=\"required;maxLength:16\" headerAlign=\"center\" align=\"center\" allowSort=\"true\">\r\n");
      out.write("\t\t\t\t\t名称 <input property=\"editor\" class=\"mini-textbox\" style=\"width: 100%;\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div field=\"userDefineCode\" vtype=\"maxLength:6\" headerAlign=\"center\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t助记码 <input property=\"editor\" class=\"mini-textbox\" style=\"width: 100%;\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div field=\"sortId\" vtype=\"int\" headerAlign=\"center\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t序号 <input property=\"editor\" class=\"mini-textbox\" style=\"width: 100%;\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div field=\"validFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">有效</div>\r\n");
      out.write("\t\t\t\t<div field=\"normalFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">普通号</div>\r\n");
      out.write("\t\t\t\t<div field=\"expertFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">专家号</div>\r\n");
      out.write("\t\t\t\t<div field=\"facultyFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">专科号</div>\r\n");
      out.write("\t\t\t\t<div field=\"specialFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">特诊号</div>\r\n");
      out.write("\t\t\t\t<div field=\"defaultFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">默认值</div>\r\n");
      out.write("\t\t\t\t<div field=\"emergencyFlag\" type=\"checkboxcolumn\" headerAlign=\"center\" align=\"center\" trueValue=\"1\" falseValue=\"0\">急诊</div>\r\n");
      out.write("\t\t\t\t<div field=\"sortId\" dataType=\"int\"  allowSort=\"true\" visible=\"false\">排序号</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tmini.parse();\r\n");
      out.write("\t\tvar grid = mini.get(\"grid\");\r\n");
      out.write("\t\tgrid.load();\r\n");
      out.write("\t\tgrid.sortBy(\"sortId\", \"asc\");\r\n");
      out.write("\t\tshow();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /commons/include/form.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("ctx");
      // /commons/include/form.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/form.jsp(5,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /commons/include/form.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("ctx_rpt");
      // /commons/include/form.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/commons/include/form.jsp(6,0) '${reportContextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${reportContextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
